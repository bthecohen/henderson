// Compiled by ClojureScript 0.0-2755 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2755";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__17805__delegate = function (args){
return console.log.apply(console,(function (){var G__17804 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__17804) : cljs.core.into_array.call(null,G__17804));
})());
};
var G__17805 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__17806__i = 0, G__17806__a = new Array(arguments.length -  0);
while (G__17806__i < G__17806__a.length) {G__17806__a[G__17806__i] = arguments[G__17806__i + 0]; ++G__17806__i;}
  args = new cljs.core.IndexedSeq(G__17806__a,0);
} 
return G__17805__delegate.call(this,args);};
G__17805.cljs$lang$maxFixedArity = 0;
G__17805.cljs$lang$applyTo = (function (arglist__17807){
var args = cljs.core.seq(arglist__17807);
return G__17805__delegate(args);
});
G__17805.cljs$core$IFn$_invoke$arity$variadic = G__17805__delegate;
return G__17805;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__17809 = x;
return goog.isString(G__17809);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__17811 = x__$1;
return goog.typeOf(G__17811);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__3910__auto__ = ty;
if(cljs.core.truth_(and__3910__auto__)){
return ty.cljs$lang$type;
} else {
return and__3910__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__17813 = obj;
return goog.typeOf(G__17813);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__17815 = Symbol;
return goog.typeOf(G__17815);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__4809__auto___17817 = len;
var i_17818 = (0);
while(true){
if((i_17818 < n__4809__auto___17817)){
(new_arr[i_17818] = (arr[i_17818]));

var G__17819 = (i_17818 + (1));
i_17818 = G__17819;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__17820 = (i + (1));
i = G__17820;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__17829__delegate = function (array,i,idxs){
var G__17826 = aget;
var G__17827 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__17828 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__17826,G__17827,G__17828) : cljs.core.apply.call(null,G__17826,G__17827,G__17828));
};
var G__17829 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__17830__i = 0, G__17830__a = new Array(arguments.length -  2);
while (G__17830__i < G__17830__a.length) {G__17830__a[G__17830__i] = arguments[G__17830__i + 2]; ++G__17830__i;}
  idxs = new cljs.core.IndexedSeq(G__17830__a,0);
} 
return G__17829__delegate.call(this,array,i,idxs);};
G__17829.cljs$lang$maxFixedArity = 2;
G__17829.cljs$lang$applyTo = (function (arglist__17831){
var array = cljs.core.first(arglist__17831);
arglist__17831 = cljs.core.next(arglist__17831);
var i = cljs.core.first(arglist__17831);
var idxs = cljs.core.rest(arglist__17831);
return G__17829__delegate(array,i,idxs);
});
G__17829.cljs$core$IFn$_invoke$arity$variadic = G__17829__delegate;
return G__17829;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__17832 = null;
if (arguments.length > 2) {
var G__17833__i = 0, G__17833__a = new Array(arguments.length -  2);
while (G__17833__i < G__17833__a.length) {G__17833__a[G__17833__i] = arguments[G__17833__i + 2]; ++G__17833__i;}
G__17832 = new cljs.core.IndexedSeq(G__17833__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__17832);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__17842__delegate = function (array,idx,idx2,idxv){
var G__17838 = aset;
var G__17839 = (array[idx]);
var G__17840 = idx2;
var G__17841 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__17838,G__17839,G__17840,G__17841) : cljs.core.apply.call(null,G__17838,G__17839,G__17840,G__17841));
};
var G__17842 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__17843__i = 0, G__17843__a = new Array(arguments.length -  3);
while (G__17843__i < G__17843__a.length) {G__17843__a[G__17843__i] = arguments[G__17843__i + 3]; ++G__17843__i;}
  idxv = new cljs.core.IndexedSeq(G__17843__a,0);
} 
return G__17842__delegate.call(this,array,idx,idx2,idxv);};
G__17842.cljs$lang$maxFixedArity = 3;
G__17842.cljs$lang$applyTo = (function (arglist__17844){
var array = cljs.core.first(arglist__17844);
arglist__17844 = cljs.core.next(arglist__17844);
var idx = cljs.core.first(arglist__17844);
arglist__17844 = cljs.core.next(arglist__17844);
var idx2 = cljs.core.first(arglist__17844);
var idxv = cljs.core.rest(arglist__17844);
return G__17842__delegate(array,idx,idx2,idxv);
});
G__17842.cljs$core$IFn$_invoke$arity$variadic = G__17842__delegate;
return G__17842;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__17845 = null;
if (arguments.length > 3) {
var G__17846__i = 0, G__17846__a = new Array(arguments.length -  3);
while (G__17846__i < G__17846__a.length) {G__17846__a[G__17846__i] = arguments[G__17846__i + 3]; ++G__17846__i;}
G__17845 = new cljs.core.IndexedSeq(G__17846__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__17845);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__17852 = (function (a,x){
a.push(x);

return a;
});
var G__17853 = [];
var G__17854 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__17852,G__17853,G__17854) : cljs.core.reduce.call(null,G__17852,G__17853,G__17854));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__17855__i = 0, G__17855__a = new Array(arguments.length -  2);
while (G__17855__i < G__17855__a.length) {G__17855__a[G__17855__i] = arguments[G__17855__i + 2]; ++G__17855__i;}
  args = new cljs.core.IndexedSeq(G__17855__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__17856){
var obj = cljs.core.first(arglist__17856);
arglist__17856 = cljs.core.next(arglist__17856);
var s = cljs.core.first(arglist__17856);
var args = cljs.core.rest(arglist__17856);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj17858 = {};
return obj17858;
})();


cljs.core.IFn = (function (){var obj17860 = {};
return obj17860;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__3910__auto__ = this$;
if(and__3910__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__3910__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__4566__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3922__auto__ = (cljs.core._invoke[(function (){var G__17906 = x__4566__auto__;
return goog.typeOf(G__17906);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._invoke["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__3910__auto__ = this$;
if(and__3910__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__3910__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__4566__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3922__auto__ = (cljs.core._invoke[(function (){var G__17908 = x__4566__auto__;
return goog.typeOf(G__17908);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._invoke["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__3910__auto__ = this$;
if(and__3910__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__3910__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__4566__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3922__auto__ = (cljs.core._invoke[(function (){var G__17910 = x__4566__auto__;
return goog.typeOf(G__17910);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._invoke["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__3910__auto__ = this$;
if(and__3910__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__3910__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__4566__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3922__auto__ = (cljs.core._invoke[(function (){var G__17912 = x__4566__auto__;
return goog.typeOf(G__17912);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._invoke["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__3910__auto__ = this$;
if(and__3910__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__3910__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__4566__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3922__auto__ = (cljs.core._invoke[(function (){var G__17914 = x__4566__auto__;
return goog.typeOf(G__17914);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._invoke["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__3910__auto__ = this$;
if(and__3910__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__3910__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__4566__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3922__auto__ = (cljs.core._invoke[(function (){var G__17916 = x__4566__auto__;
return goog.typeOf(G__17916);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._invoke["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__3910__auto__ = this$;
if(and__3910__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__3910__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__4566__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3922__auto__ = (cljs.core._invoke[(function (){var G__17918 = x__4566__auto__;
return goog.typeOf(G__17918);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._invoke["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__3910__auto__ = this$;
if(and__3910__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__3910__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__4566__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3922__auto__ = (cljs.core._invoke[(function (){var G__17920 = x__4566__auto__;
return goog.typeOf(G__17920);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._invoke["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__3910__auto__ = this$;
if(and__3910__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__3910__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__4566__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3922__auto__ = (cljs.core._invoke[(function (){var G__17922 = x__4566__auto__;
return goog.typeOf(G__17922);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._invoke["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__3910__auto__ = this$;
if(and__3910__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__3910__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__4566__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3922__auto__ = (cljs.core._invoke[(function (){var G__17924 = x__4566__auto__;
return goog.typeOf(G__17924);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._invoke["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__3910__auto__ = this$;
if(and__3910__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__3910__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__4566__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3922__auto__ = (cljs.core._invoke[(function (){var G__17926 = x__4566__auto__;
return goog.typeOf(G__17926);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._invoke["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__3910__auto__ = this$;
if(and__3910__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__3910__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__4566__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3922__auto__ = (cljs.core._invoke[(function (){var G__17928 = x__4566__auto__;
return goog.typeOf(G__17928);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._invoke["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__3910__auto__ = this$;
if(and__3910__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__3910__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__4566__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3922__auto__ = (cljs.core._invoke[(function (){var G__17930 = x__4566__auto__;
return goog.typeOf(G__17930);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._invoke["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__3910__auto__ = this$;
if(and__3910__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__3910__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__4566__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3922__auto__ = (cljs.core._invoke[(function (){var G__17932 = x__4566__auto__;
return goog.typeOf(G__17932);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._invoke["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__3910__auto__ = this$;
if(and__3910__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__3910__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__4566__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3922__auto__ = (cljs.core._invoke[(function (){var G__17934 = x__4566__auto__;
return goog.typeOf(G__17934);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._invoke["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__3910__auto__ = this$;
if(and__3910__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__3910__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__4566__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3922__auto__ = (cljs.core._invoke[(function (){var G__17936 = x__4566__auto__;
return goog.typeOf(G__17936);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._invoke["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__3910__auto__ = this$;
if(and__3910__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__3910__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__4566__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3922__auto__ = (cljs.core._invoke[(function (){var G__17938 = x__4566__auto__;
return goog.typeOf(G__17938);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._invoke["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__3910__auto__ = this$;
if(and__3910__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__3910__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__4566__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3922__auto__ = (cljs.core._invoke[(function (){var G__17940 = x__4566__auto__;
return goog.typeOf(G__17940);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._invoke["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__3910__auto__ = this$;
if(and__3910__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__3910__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__4566__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3922__auto__ = (cljs.core._invoke[(function (){var G__17942 = x__4566__auto__;
return goog.typeOf(G__17942);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._invoke["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__3910__auto__ = this$;
if(and__3910__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__3910__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__4566__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3922__auto__ = (cljs.core._invoke[(function (){var G__17944 = x__4566__auto__;
return goog.typeOf(G__17944);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._invoke["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__3910__auto__ = this$;
if(and__3910__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__3910__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__4566__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3922__auto__ = (cljs.core._invoke[(function (){var G__17946 = x__4566__auto__;
return goog.typeOf(G__17946);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._invoke["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__3910__auto__ = this$;
if(and__3910__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__3910__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__4566__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3922__auto__ = (cljs.core._invoke[(function (){var G__17948 = x__4566__auto__;
return goog.typeOf(G__17948);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._invoke["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj17950 = {};
return obj17950;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__3910__auto__ = value;
if(and__3910__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__3910__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__4566__auto__ = (((value == null))?null:value);
return (function (){var or__3922__auto__ = (cljs.core._clone[(function (){var G__17954 = x__4566__auto__;
return goog.typeOf(G__17954);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._clone["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj17956 = {};
return obj17956;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__3910__auto__ = coll;
if(and__3910__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__3910__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__4566__auto__ = (((coll == null))?null:coll);
return (function (){var or__3922__auto__ = (cljs.core._count[(function (){var G__17960 = x__4566__auto__;
return goog.typeOf(G__17960);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._count["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj17962 = {};
return obj17962;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__3910__auto__ = coll;
if(and__3910__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__3910__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__4566__auto__ = (((coll == null))?null:coll);
return (function (){var or__3922__auto__ = (cljs.core._empty[(function (){var G__17966 = x__4566__auto__;
return goog.typeOf(G__17966);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._empty["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj17968 = {};
return obj17968;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__3910__auto__ = coll;
if(and__3910__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__3910__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__4566__auto__ = (((coll == null))?null:coll);
return (function (){var or__3922__auto__ = (cljs.core._conj[(function (){var G__17972 = x__4566__auto__;
return goog.typeOf(G__17972);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._conj["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj17974 = {};
return obj17974;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__3910__auto__ = coll;
if(and__3910__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__3910__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__4566__auto__ = (((coll == null))?null:coll);
return (function (){var or__3922__auto__ = (cljs.core._nth[(function (){var G__17980 = x__4566__auto__;
return goog.typeOf(G__17980);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._nth["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__3910__auto__ = coll;
if(and__3910__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__3910__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__4566__auto__ = (((coll == null))?null:coll);
return (function (){var or__3922__auto__ = (cljs.core._nth[(function (){var G__17982 = x__4566__auto__;
return goog.typeOf(G__17982);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._nth["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj17984 = {};
return obj17984;
})();


cljs.core.ISeq = (function (){var obj17986 = {};
return obj17986;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__3910__auto__ = coll;
if(and__3910__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__3910__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__4566__auto__ = (((coll == null))?null:coll);
return (function (){var or__3922__auto__ = (cljs.core._first[(function (){var G__17990 = x__4566__auto__;
return goog.typeOf(G__17990);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._first["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__3910__auto__ = coll;
if(and__3910__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__3910__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__4566__auto__ = (((coll == null))?null:coll);
return (function (){var or__3922__auto__ = (cljs.core._rest[(function (){var G__17994 = x__4566__auto__;
return goog.typeOf(G__17994);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._rest["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj17996 = {};
return obj17996;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__3910__auto__ = coll;
if(and__3910__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__3910__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__4566__auto__ = (((coll == null))?null:coll);
return (function (){var or__3922__auto__ = (cljs.core._next[(function (){var G__18000 = x__4566__auto__;
return goog.typeOf(G__18000);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._next["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj18002 = {};
return obj18002;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__3910__auto__ = o;
if(and__3910__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__3910__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__4566__auto__ = (((o == null))?null:o);
return (function (){var or__3922__auto__ = (cljs.core._lookup[(function (){var G__18008 = x__4566__auto__;
return goog.typeOf(G__18008);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._lookup["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__3910__auto__ = o;
if(and__3910__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__3910__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__4566__auto__ = (((o == null))?null:o);
return (function (){var or__3922__auto__ = (cljs.core._lookup[(function (){var G__18010 = x__4566__auto__;
return goog.typeOf(G__18010);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._lookup["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj18012 = {};
return obj18012;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__3910__auto__ = coll;
if(and__3910__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__3910__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__4566__auto__ = (((coll == null))?null:coll);
return (function (){var or__3922__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__18016 = x__4566__auto__;
return goog.typeOf(G__18016);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__3910__auto__ = coll;
if(and__3910__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__3910__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__4566__auto__ = (((coll == null))?null:coll);
return (function (){var or__3922__auto__ = (cljs.core._assoc[(function (){var G__18020 = x__4566__auto__;
return goog.typeOf(G__18020);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._assoc["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj18022 = {};
return obj18022;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__3910__auto__ = coll;
if(and__3910__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__3910__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__4566__auto__ = (((coll == null))?null:coll);
return (function (){var or__3922__auto__ = (cljs.core._dissoc[(function (){var G__18026 = x__4566__auto__;
return goog.typeOf(G__18026);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._dissoc["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj18028 = {};
return obj18028;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__3910__auto__ = coll;
if(and__3910__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__3910__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__4566__auto__ = (((coll == null))?null:coll);
return (function (){var or__3922__auto__ = (cljs.core._key[(function (){var G__18032 = x__4566__auto__;
return goog.typeOf(G__18032);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._key["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__3910__auto__ = coll;
if(and__3910__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__3910__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__4566__auto__ = (((coll == null))?null:coll);
return (function (){var or__3922__auto__ = (cljs.core._val[(function (){var G__18036 = x__4566__auto__;
return goog.typeOf(G__18036);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._val["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj18038 = {};
return obj18038;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__3910__auto__ = coll;
if(and__3910__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__3910__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__4566__auto__ = (((coll == null))?null:coll);
return (function (){var or__3922__auto__ = (cljs.core._disjoin[(function (){var G__18042 = x__4566__auto__;
return goog.typeOf(G__18042);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._disjoin["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj18044 = {};
return obj18044;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__3910__auto__ = coll;
if(and__3910__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__3910__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__4566__auto__ = (((coll == null))?null:coll);
return (function (){var or__3922__auto__ = (cljs.core._peek[(function (){var G__18048 = x__4566__auto__;
return goog.typeOf(G__18048);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._peek["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__3910__auto__ = coll;
if(and__3910__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__3910__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__4566__auto__ = (((coll == null))?null:coll);
return (function (){var or__3922__auto__ = (cljs.core._pop[(function (){var G__18052 = x__4566__auto__;
return goog.typeOf(G__18052);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._pop["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj18054 = {};
return obj18054;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__3910__auto__ = coll;
if(and__3910__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__3910__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__4566__auto__ = (((coll == null))?null:coll);
return (function (){var or__3922__auto__ = (cljs.core._assoc_n[(function (){var G__18058 = x__4566__auto__;
return goog.typeOf(G__18058);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj18060 = {};
return obj18060;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__3910__auto__ = o;
if(and__3910__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__3910__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__4566__auto__ = (((o == null))?null:o);
return (function (){var or__3922__auto__ = (cljs.core._deref[(function (){var G__18064 = x__4566__auto__;
return goog.typeOf(G__18064);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._deref["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj18066 = {};
return obj18066;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__3910__auto__ = o;
if(and__3910__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__3910__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__4566__auto__ = (((o == null))?null:o);
return (function (){var or__3922__auto__ = (cljs.core._deref_with_timeout[(function (){var G__18070 = x__4566__auto__;
return goog.typeOf(G__18070);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj18072 = {};
return obj18072;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__3910__auto__ = o;
if(and__3910__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__3910__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__4566__auto__ = (((o == null))?null:o);
return (function (){var or__3922__auto__ = (cljs.core._meta[(function (){var G__18076 = x__4566__auto__;
return goog.typeOf(G__18076);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._meta["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj18078 = {};
return obj18078;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__3910__auto__ = o;
if(and__3910__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__3910__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__4566__auto__ = (((o == null))?null:o);
return (function (){var or__3922__auto__ = (cljs.core._with_meta[(function (){var G__18082 = x__4566__auto__;
return goog.typeOf(G__18082);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._with_meta["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj18084 = {};
return obj18084;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__3910__auto__ = coll;
if(and__3910__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__3910__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__4566__auto__ = (((coll == null))?null:coll);
return (function (){var or__3922__auto__ = (cljs.core._reduce[(function (){var G__18090 = x__4566__auto__;
return goog.typeOf(G__18090);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._reduce["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__3910__auto__ = coll;
if(and__3910__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__3910__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__4566__auto__ = (((coll == null))?null:coll);
return (function (){var or__3922__auto__ = (cljs.core._reduce[(function (){var G__18092 = x__4566__auto__;
return goog.typeOf(G__18092);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._reduce["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj18094 = {};
return obj18094;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__3910__auto__ = coll;
if(and__3910__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__3910__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__4566__auto__ = (((coll == null))?null:coll);
return (function (){var or__3922__auto__ = (cljs.core._kv_reduce[(function (){var G__18098 = x__4566__auto__;
return goog.typeOf(G__18098);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj18100 = {};
return obj18100;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__3910__auto__ = o;
if(and__3910__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__3910__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__4566__auto__ = (((o == null))?null:o);
return (function (){var or__3922__auto__ = (cljs.core._equiv[(function (){var G__18104 = x__4566__auto__;
return goog.typeOf(G__18104);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._equiv["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj18106 = {};
return obj18106;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__3910__auto__ = o;
if(and__3910__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__3910__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__4566__auto__ = (((o == null))?null:o);
return (function (){var or__3922__auto__ = (cljs.core._hash[(function (){var G__18110 = x__4566__auto__;
return goog.typeOf(G__18110);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._hash["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj18112 = {};
return obj18112;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__3910__auto__ = o;
if(and__3910__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__3910__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__4566__auto__ = (((o == null))?null:o);
return (function (){var or__3922__auto__ = (cljs.core._seq[(function (){var G__18116 = x__4566__auto__;
return goog.typeOf(G__18116);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._seq["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj18118 = {};
return obj18118;
})();


cljs.core.IList = (function (){var obj18120 = {};
return obj18120;
})();


cljs.core.IRecord = (function (){var obj18122 = {};
return obj18122;
})();


cljs.core.IReversible = (function (){var obj18124 = {};
return obj18124;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__3910__auto__ = coll;
if(and__3910__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__3910__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__4566__auto__ = (((coll == null))?null:coll);
return (function (){var or__3922__auto__ = (cljs.core._rseq[(function (){var G__18128 = x__4566__auto__;
return goog.typeOf(G__18128);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._rseq["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj18130 = {};
return obj18130;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__3910__auto__ = coll;
if(and__3910__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__3910__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__4566__auto__ = (((coll == null))?null:coll);
return (function (){var or__3922__auto__ = (cljs.core._sorted_seq[(function (){var G__18134 = x__4566__auto__;
return goog.typeOf(G__18134);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__3910__auto__ = coll;
if(and__3910__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__3910__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__4566__auto__ = (((coll == null))?null:coll);
return (function (){var or__3922__auto__ = (cljs.core._sorted_seq_from[(function (){var G__18138 = x__4566__auto__;
return goog.typeOf(G__18138);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__3910__auto__ = coll;
if(and__3910__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__3910__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__4566__auto__ = (((coll == null))?null:coll);
return (function (){var or__3922__auto__ = (cljs.core._entry_key[(function (){var G__18142 = x__4566__auto__;
return goog.typeOf(G__18142);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._entry_key["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__3910__auto__ = coll;
if(and__3910__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__3910__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__4566__auto__ = (((coll == null))?null:coll);
return (function (){var or__3922__auto__ = (cljs.core._comparator[(function (){var G__18146 = x__4566__auto__;
return goog.typeOf(G__18146);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._comparator["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj18148 = {};
return obj18148;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__3910__auto__ = writer;
if(and__3910__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__3910__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__4566__auto__ = (((writer == null))?null:writer);
return (function (){var or__3922__auto__ = (cljs.core._write[(function (){var G__18152 = x__4566__auto__;
return goog.typeOf(G__18152);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._write["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__3910__auto__ = writer;
if(and__3910__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__3910__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__4566__auto__ = (((writer == null))?null:writer);
return (function (){var or__3922__auto__ = (cljs.core._flush[(function (){var G__18156 = x__4566__auto__;
return goog.typeOf(G__18156);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._flush["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj18158 = {};
return obj18158;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__3910__auto__ = o;
if(and__3910__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__3910__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__4566__auto__ = (((o == null))?null:o);
return (function (){var or__3922__auto__ = (cljs.core._pr_writer[(function (){var G__18162 = x__4566__auto__;
return goog.typeOf(G__18162);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj18164 = {};
return obj18164;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__3910__auto__ = d;
if(and__3910__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__3910__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__4566__auto__ = (((d == null))?null:d);
return (function (){var or__3922__auto__ = (cljs.core._realized_QMARK_[(function (){var G__18168 = x__4566__auto__;
return goog.typeOf(G__18168);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj18170 = {};
return obj18170;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__3910__auto__ = this$;
if(and__3910__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__3910__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__4566__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3922__auto__ = (cljs.core._notify_watches[(function (){var G__18174 = x__4566__auto__;
return goog.typeOf(G__18174);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__3910__auto__ = this$;
if(and__3910__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__3910__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__4566__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3922__auto__ = (cljs.core._add_watch[(function (){var G__18178 = x__4566__auto__;
return goog.typeOf(G__18178);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._add_watch["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__3910__auto__ = this$;
if(and__3910__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__3910__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__4566__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3922__auto__ = (cljs.core._remove_watch[(function (){var G__18182 = x__4566__auto__;
return goog.typeOf(G__18182);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj18184 = {};
return obj18184;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__3910__auto__ = coll;
if(and__3910__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__3910__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__4566__auto__ = (((coll == null))?null:coll);
return (function (){var or__3922__auto__ = (cljs.core._as_transient[(function (){var G__18188 = x__4566__auto__;
return goog.typeOf(G__18188);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._as_transient["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj18190 = {};
return obj18190;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__3910__auto__ = tcoll;
if(and__3910__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__3910__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__4566__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3922__auto__ = (cljs.core._conj_BANG_[(function (){var G__18194 = x__4566__auto__;
return goog.typeOf(G__18194);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__3910__auto__ = tcoll;
if(and__3910__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__3910__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__4566__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3922__auto__ = (cljs.core._persistent_BANG_[(function (){var G__18198 = x__4566__auto__;
return goog.typeOf(G__18198);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj18200 = {};
return obj18200;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__3910__auto__ = tcoll;
if(and__3910__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__3910__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__4566__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3922__auto__ = (cljs.core._assoc_BANG_[(function (){var G__18204 = x__4566__auto__;
return goog.typeOf(G__18204);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj18206 = {};
return obj18206;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__3910__auto__ = tcoll;
if(and__3910__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__3910__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__4566__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3922__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__18210 = x__4566__auto__;
return goog.typeOf(G__18210);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj18212 = {};
return obj18212;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__3910__auto__ = tcoll;
if(and__3910__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__3910__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__4566__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3922__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__18216 = x__4566__auto__;
return goog.typeOf(G__18216);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__3910__auto__ = tcoll;
if(and__3910__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__3910__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__4566__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3922__auto__ = (cljs.core._pop_BANG_[(function (){var G__18220 = x__4566__auto__;
return goog.typeOf(G__18220);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj18222 = {};
return obj18222;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__3910__auto__ = tcoll;
if(and__3910__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__3910__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__4566__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3922__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__18226 = x__4566__auto__;
return goog.typeOf(G__18226);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj18228 = {};
return obj18228;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__3910__auto__ = x;
if(and__3910__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__3910__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__4566__auto__ = (((x == null))?null:x);
return (function (){var or__3922__auto__ = (cljs.core._compare[(function (){var G__18232 = x__4566__auto__;
return goog.typeOf(G__18232);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._compare["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj18234 = {};
return obj18234;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__3910__auto__ = coll;
if(and__3910__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__3910__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__4566__auto__ = (((coll == null))?null:coll);
return (function (){var or__3922__auto__ = (cljs.core._drop_first[(function (){var G__18238 = x__4566__auto__;
return goog.typeOf(G__18238);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._drop_first["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj18240 = {};
return obj18240;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__3910__auto__ = coll;
if(and__3910__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__3910__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__4566__auto__ = (((coll == null))?null:coll);
return (function (){var or__3922__auto__ = (cljs.core._chunked_first[(function (){var G__18244 = x__4566__auto__;
return goog.typeOf(G__18244);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__3910__auto__ = coll;
if(and__3910__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__3910__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__4566__auto__ = (((coll == null))?null:coll);
return (function (){var or__3922__auto__ = (cljs.core._chunked_rest[(function (){var G__18248 = x__4566__auto__;
return goog.typeOf(G__18248);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj18250 = {};
return obj18250;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__3910__auto__ = coll;
if(and__3910__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__3910__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__4566__auto__ = (((coll == null))?null:coll);
return (function (){var or__3922__auto__ = (cljs.core._chunked_next[(function (){var G__18254 = x__4566__auto__;
return goog.typeOf(G__18254);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj18256 = {};
return obj18256;
})();

cljs.core._name = (function _name(x){
if((function (){var and__3910__auto__ = x;
if(and__3910__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__3910__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__4566__auto__ = (((x == null))?null:x);
return (function (){var or__3922__auto__ = (cljs.core._name[(function (){var G__18260 = x__4566__auto__;
return goog.typeOf(G__18260);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._name["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__3910__auto__ = x;
if(and__3910__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__3910__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__4566__auto__ = (((x == null))?null:x);
return (function (){var or__3922__auto__ = (cljs.core._namespace[(function (){var G__18264 = x__4566__auto__;
return goog.typeOf(G__18264);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._namespace["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj18266 = {};
return obj18266;
})();


cljs.core.IReset = (function (){var obj18268 = {};
return obj18268;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__3910__auto__ = o;
if(and__3910__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__3910__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__4566__auto__ = (((o == null))?null:o);
return (function (){var or__3922__auto__ = (cljs.core._reset_BANG_[(function (){var G__18272 = x__4566__auto__;
return goog.typeOf(G__18272);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj18274 = {};
return obj18274;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__3910__auto__ = o;
if(and__3910__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__3910__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__4566__auto__ = (((o == null))?null:o);
return (function (){var or__3922__auto__ = (cljs.core._swap_BANG_[(function (){var G__18284 = x__4566__auto__;
return goog.typeOf(G__18284);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__3910__auto__ = o;
if(and__3910__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__3910__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__4566__auto__ = (((o == null))?null:o);
return (function (){var or__3922__auto__ = (cljs.core._swap_BANG_[(function (){var G__18286 = x__4566__auto__;
return goog.typeOf(G__18286);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__3910__auto__ = o;
if(and__3910__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__3910__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__4566__auto__ = (((o == null))?null:o);
return (function (){var or__3922__auto__ = (cljs.core._swap_BANG_[(function (){var G__18288 = x__4566__auto__;
return goog.typeOf(G__18288);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__3910__auto__ = o;
if(and__3910__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__3910__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__4566__auto__ = (((o == null))?null:o);
return (function (){var or__3922__auto__ = (cljs.core._swap_BANG_[(function (){var G__18290 = x__4566__auto__;
return goog.typeOf(G__18290);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj18292 = {};
return obj18292;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__3910__auto__ = o;
if(and__3910__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__3910__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__4566__auto__ = (((o == null))?null:o);
return (function (){var or__3922__auto__ = (cljs.core._vreset_BANG_[(function (){var G__18296 = x__4566__auto__;
return goog.typeOf(G__18296);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj18298 = {};
return obj18298;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__3910__auto__ = coll;
if(and__3910__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__3910__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__4566__auto__ = (((coll == null))?null:coll);
return (function (){var or__3922__auto__ = (cljs.core._iterator[(function (){var G__18302 = x__4566__auto__;
return goog.typeOf(G__18302);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._iterator["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__18305 = (4294967295);
var G__18306 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__18305,G__18306) : Math.imul.call(null,G__18305,G__18306));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__18309 = a;
var G__18310 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__18309,G__18310) : Math.imul.call(null,G__18309,G__18310));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__18311 = (i + (2));
var G__18312 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__18311;
h1 = G__18312;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj18314 = {};
return obj18314;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__18315 = (i + (1));
var G__18316 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__18315;
hash = G__18316;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj18320 = {};
return obj18320;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__18323 = o;
if(G__18323){
var bit__4596__auto__ = (G__18323.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__4596__auto__) || (G__18323.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__18324 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__18324) : Math.floor.call(null,G__18324));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3910__auto__ = cljs.core.not(a.ns);
if(and__3910__auto__){
return b.ns;
} else {
return and__3910__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__18331 = a.ns;
var G__18332 = b.ns;
return goog.array.defaultCompare(G__18331,G__18332);
})();
if(((0) === nsc)){
var G__18333 = a.name;
var G__18334 = b.name;
return goog.array.defaultCompare(G__18333,G__18334);
} else {
return nsc;
}
}
} else {
var G__18335 = a.name;
var G__18336 = b.name;
return goog.array.defaultCompare(G__18335,G__18336);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__4343__auto__ = self__._hash;
if(!((h__4343__auto__ == null))){
return h__4343__auto__;
} else {
var h__4343__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__4343__auto____$1;

return h__4343__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__18338 = null;
var G__18338__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__18338__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__18338 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__18338__2.call(this,self__,coll);
case 3:
return G__18338__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__18338.cljs$core$IFn$_invoke$arity$2 = G__18338__2;
G__18338.cljs$core$IFn$_invoke$arity$3 = G__18338__3;
return G__18338;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args18337){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args18337)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__18386 = null;
var G__18386__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__18386__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__18386__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__18386__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__18386__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__18386__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__18386__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__18386__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__18386__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__18386__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__18386__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__18386__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__18386__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__18386__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__18386__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__18386__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__18386__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__18386__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__18386__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__18386__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__18386__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__18386__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18342 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__18343 = a;
var G__18344 = b;
var G__18345 = c;
var G__18346 = d;
var G__18347 = e;
var G__18348 = f;
var G__18349 = g;
var G__18350 = h;
var G__18351 = i;
var G__18352 = j;
var G__18353 = k;
var G__18354 = l;
var G__18355 = m;
var G__18356 = n;
var G__18357 = o;
var G__18358 = p;
var G__18359 = q;
var G__18360 = r;
var G__18361 = s;
var G__18362 = t;
var G__18363 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__18342,G__18343,G__18344,G__18345,G__18346,G__18347,G__18348,G__18349,G__18350,G__18351,G__18352,G__18353,G__18354,G__18355,G__18356,G__18357,G__18358,G__18359,G__18360,G__18361,G__18362,G__18363) : cljs.core.apply.call(null,G__18342,G__18343,G__18344,G__18345,G__18346,G__18347,G__18348,G__18349,G__18350,G__18351,G__18352,G__18353,G__18354,G__18355,G__18356,G__18357,G__18358,G__18359,G__18360,G__18361,G__18362,G__18363));
});
G__18386 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__18386__1.call(this,self__);
case 2:
return G__18386__2.call(this,self__,a);
case 3:
return G__18386__3.call(this,self__,a,b);
case 4:
return G__18386__4.call(this,self__,a,b,c);
case 5:
return G__18386__5.call(this,self__,a,b,c,d);
case 6:
return G__18386__6.call(this,self__,a,b,c,d,e);
case 7:
return G__18386__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__18386__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__18386__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__18386__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__18386__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__18386__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__18386__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__18386__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__18386__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__18386__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__18386__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__18386__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__18386__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__18386__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__18386__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__18386__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__18386.cljs$core$IFn$_invoke$arity$1 = G__18386__1;
G__18386.cljs$core$IFn$_invoke$arity$2 = G__18386__2;
G__18386.cljs$core$IFn$_invoke$arity$3 = G__18386__3;
G__18386.cljs$core$IFn$_invoke$arity$4 = G__18386__4;
G__18386.cljs$core$IFn$_invoke$arity$5 = G__18386__5;
G__18386.cljs$core$IFn$_invoke$arity$6 = G__18386__6;
G__18386.cljs$core$IFn$_invoke$arity$7 = G__18386__7;
G__18386.cljs$core$IFn$_invoke$arity$8 = G__18386__8;
G__18386.cljs$core$IFn$_invoke$arity$9 = G__18386__9;
G__18386.cljs$core$IFn$_invoke$arity$10 = G__18386__10;
G__18386.cljs$core$IFn$_invoke$arity$11 = G__18386__11;
G__18386.cljs$core$IFn$_invoke$arity$12 = G__18386__12;
G__18386.cljs$core$IFn$_invoke$arity$13 = G__18386__13;
G__18386.cljs$core$IFn$_invoke$arity$14 = G__18386__14;
G__18386.cljs$core$IFn$_invoke$arity$15 = G__18386__15;
G__18386.cljs$core$IFn$_invoke$arity$16 = G__18386__16;
G__18386.cljs$core$IFn$_invoke$arity$17 = G__18386__17;
G__18386.cljs$core$IFn$_invoke$arity$18 = G__18386__18;
G__18386.cljs$core$IFn$_invoke$arity$19 = G__18386__19;
G__18386.cljs$core$IFn$_invoke$arity$20 = G__18386__20;
G__18386.cljs$core$IFn$_invoke$arity$21 = G__18386__21;
G__18386.cljs$core$IFn$_invoke$arity$22 = G__18386__22;
return G__18386;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args18341){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args18341)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__18364 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__18365 = a;
var G__18366 = b;
var G__18367 = c;
var G__18368 = d;
var G__18369 = e;
var G__18370 = f;
var G__18371 = g;
var G__18372 = h;
var G__18373 = i;
var G__18374 = j;
var G__18375 = k;
var G__18376 = l;
var G__18377 = m;
var G__18378 = n;
var G__18379 = o;
var G__18380 = p;
var G__18381 = q;
var G__18382 = r;
var G__18383 = s;
var G__18384 = t;
var G__18385 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__18364,G__18365,G__18366,G__18367,G__18368,G__18369,G__18370,G__18371,G__18372,G__18373,G__18374,G__18375,G__18376,G__18377,G__18378,G__18379,G__18380,G__18381,G__18382,G__18383,G__18384,G__18385) : cljs.core.apply.call(null,G__18364,G__18365,G__18366,G__18367,G__18368,G__18369,G__18370,G__18371,G__18372,G__18373,G__18374,G__18375,G__18376,G__18377,G__18378,G__18379,G__18380,G__18381,G__18382,G__18383,G__18384,G__18385));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__18388 = x;
if(G__18388){
var bit__4603__auto__ = null;
if(cljs.core.truth_((function (){var or__3922__auto__ = bit__4603__auto__;
if(cljs.core.truth_(or__3922__auto__)){
return or__3922__auto__;
} else {
return G__18388.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__18388.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__18388);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__18388);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__18390 = value;
if(G__18390){
var bit__4603__auto__ = (G__18390.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__4603__auto__) || (G__18390.cljs$core$ICloneable$)){
return true;
} else {
if((!G__18390.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__18390);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__18390);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__18392 = coll;
if(G__18392){
var bit__4596__auto__ = (G__18392.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4596__auto__) || (G__18392.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__18394 = coll;
if(G__18394){
var bit__4596__auto__ = (G__18394.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4596__auto__) || (G__18394.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__18396 = coll;
if(G__18396){
var bit__4596__auto__ = (G__18396.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4596__auto__) || (G__18396.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__18398 = coll;
if(G__18398){
var bit__4596__auto__ = (G__18398.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4596__auto__) || (G__18398.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__18403__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__18404 = y;
var G__18405 = cljs.core.first(more);
var G__18406 = cljs.core.next(more);
x = G__18404;
y = G__18405;
more = G__18406;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__18403 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__18407__i = 0, G__18407__a = new Array(arguments.length -  2);
while (G__18407__i < G__18407__a.length) {G__18407__a[G__18407__i] = arguments[G__18407__i + 2]; ++G__18407__i;}
  more = new cljs.core.IndexedSeq(G__18407__a,0);
} 
return G__18403__delegate.call(this,x,y,more);};
G__18403.cljs$lang$maxFixedArity = 2;
G__18403.cljs$lang$applyTo = (function (arglist__18408){
var x = cljs.core.first(arglist__18408);
arglist__18408 = cljs.core.next(arglist__18408);
var y = cljs.core.first(arglist__18408);
var more = cljs.core.rest(arglist__18408);
return G__18403__delegate(x,y,more);
});
G__18403.cljs$core$IFn$_invoke$arity$variadic = G__18403__delegate;
return G__18403;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__18409 = null;
if (arguments.length > 2) {
var G__18410__i = 0, G__18410__a = new Array(arguments.length -  2);
while (G__18410__i < G__18410__a.length) {G__18410__a[G__18410__i] = arguments[G__18410__i + 2]; ++G__18410__i;}
G__18409 = new cljs.core.IndexedSeq(G__18410__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__18409);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__18411 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__18411) : cljs.core.es6_iterator_seq.call(null,G__18411));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__18412 = (n + (1));
var G__18413 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__18414 = cljs.core.next(coll__$1);
n = G__18412;
hash_code = G__18413;
coll__$1 = G__18414;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__18415 = (n + (1));
var G__18416 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__18417 = cljs.core.next(coll__$1);
n = G__18415;
hash_code = G__18416;
coll__$1 = G__18417;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__18418 = o;
return goog.getUid(G__18418);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__18420 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18420) : cljs.core.deref.call(null,G__18420));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__18427 = val;
var G__18428 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18427,G__18428) : f.call(null,G__18427,G__18428));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__18433 = nval;
var G__18434 = (n + (1));
val = G__18433;
n = G__18434;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__18429 = val__$1;
var G__18430 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18429,G__18430) : f.call(null,G__18429,G__18430));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__18435 = nval;
var G__18436 = (n + (1));
val__$1 = G__18435;
n = G__18436;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__18431 = val__$1;
var G__18432 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18431,G__18432) : f.call(null,G__18431,G__18432));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__18437 = nval;
var G__18438 = (n + (1));
val__$1 = G__18437;
n = G__18438;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__18445 = val;
var G__18446 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18445,G__18446) : f.call(null,G__18445,G__18446));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__18451 = nval;
var G__18452 = (n + (1));
val = G__18451;
n = G__18452;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__18447 = val__$1;
var G__18448 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18447,G__18448) : f.call(null,G__18447,G__18448));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__18453 = nval;
var G__18454 = (n + (1));
val__$1 = G__18453;
n = G__18454;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__18449 = val__$1;
var G__18450 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18449,G__18450) : f.call(null,G__18449,G__18450));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__18455 = nval;
var G__18456 = (n + (1));
val__$1 = G__18455;
n = G__18456;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__18458 = x;
if(G__18458){
var bit__4603__auto__ = (G__18458.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4603__auto__) || (G__18458.cljs$core$ICounted$)){
return true;
} else {
if((!G__18458.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__18458);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__18458);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__18460 = x;
if(G__18460){
var bit__4603__auto__ = (G__18460.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4603__auto__) || (G__18460.cljs$core$IIndexed$)){
return true;
} else {
if((!G__18460.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__18460);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__18460);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__18461 = coll__$1;
var G__18462 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__18461,G__18462) : cljs.core.equiv_sequential.call(null,G__18461,G__18462));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__18463 = o;
var G__18464 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__18463,G__18464) : cljs.core.cons.call(null,G__18463,G__18464));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4900__auto__ = this;
return cljs.core.es6_iterator(this__4900__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__18467 = coll__$1;
var G__18468 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__18467,G__18468) : cljs.core.equiv_sequential.call(null,G__18467,G__18468));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__18469 = cljs.core.List.EMPTY;
var G__18470 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__18469,G__18470) : cljs.core.with_meta.call(null,G__18469,G__18470));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__18471 = f;
var G__18472 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__18471,G__18472) : cljs.core.seq_reduce.call(null,G__18471,G__18472));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__18473 = f;
var G__18474 = start;
var G__18475 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__18473,G__18474,G__18475) : cljs.core.seq_reduce.call(null,G__18473,G__18474,G__18475));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__18476 = o;
var G__18477 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__18476,G__18477) : cljs.core.cons.call(null,G__18476,G__18477));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4900__auto__ = this;
return cljs.core.es6_iterator(this__4900__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__18478 = sn;
s = G__18478;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__18483__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__18484 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__18485 = cljs.core.first(xs);
var G__18486 = cljs.core.next(xs);
coll = G__18484;
x = G__18485;
xs = G__18486;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__18483 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__18487__i = 0, G__18487__a = new Array(arguments.length -  2);
while (G__18487__i < G__18487__a.length) {G__18487__a[G__18487__i] = arguments[G__18487__i + 2]; ++G__18487__i;}
  xs = new cljs.core.IndexedSeq(G__18487__a,0);
} 
return G__18483__delegate.call(this,coll,x,xs);};
G__18483.cljs$lang$maxFixedArity = 2;
G__18483.cljs$lang$applyTo = (function (arglist__18488){
var coll = cljs.core.first(arglist__18488);
arglist__18488 = cljs.core.next(arglist__18488);
var x = cljs.core.first(arglist__18488);
var xs = cljs.core.rest(arglist__18488);
return G__18483__delegate(coll,x,xs);
});
G__18483.cljs$core$IFn$_invoke$arity$variadic = G__18483__delegate;
return G__18483;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__18489 = null;
if (arguments.length > 2) {
var G__18490__i = 0, G__18490__a = new Array(arguments.length -  2);
while (G__18490__i < G__18490__a.length) {G__18490__a[G__18490__i] = arguments[G__18490__i + 2]; ++G__18490__i;}
G__18489 = new cljs.core.IndexedSeq(G__18490__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__18489);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__18491 = cljs.core.next(s);
var G__18492 = (acc + (1));
s = G__18491;
acc = G__18492;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__18494 = coll;
if(G__18494){
var bit__4596__auto__ = (G__18494.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4596__auto__) || (G__18494.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__18495 = cljs.core.next(coll);
var G__18496 = (n - (1));
coll = G__18495;
n = G__18496;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__18497 = cljs.core.next(coll);
var G__18498 = (n - (1));
var G__18499 = not_found;
coll = G__18497;
n = G__18498;
not_found = G__18499;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__18504 = coll;
if(G__18504){
var bit__4596__auto__ = (G__18504.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4596__auto__) || (G__18504.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__18505 = coll;
if(G__18505){
var bit__4603__auto__ = (G__18505.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4603__auto__) || (G__18505.cljs$core$ISeq$)){
return true;
} else {
if((!G__18505.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__18505);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__18505);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__18506 = coll;
if(G__18506){
var bit__4596__auto__ = (G__18506.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4596__auto__) || (G__18506.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__18507 = coll;
if(G__18507){
var bit__4603__auto__ = (G__18507.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4603__auto__) || (G__18507.cljs$core$ISeq$)){
return true;
} else {
if((!G__18507.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__18507);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__18507);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__18508 = (n__$1 - (1));
var G__18509 = cljs.core.rest(xs);
n__$1 = G__18508;
xs = G__18509;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__18512 = o;
if(G__18512){
var bit__4596__auto__ = (G__18512.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4596__auto__) || (G__18512.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__18513 = o;
if(G__18513){
var bit__4596__auto__ = (G__18513.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4596__auto__) || (G__18513.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__18517__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__18518 = ret;
var G__18519 = cljs.core.first(kvs);
var G__18520 = cljs.core.second(kvs);
var G__18521 = cljs.core.nnext(kvs);
coll = G__18518;
k = G__18519;
v = G__18520;
kvs = G__18521;
continue;
} else {
return ret;
}
break;
}
};
var G__18517 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__18522__i = 0, G__18522__a = new Array(arguments.length -  3);
while (G__18522__i < G__18522__a.length) {G__18522__a[G__18522__i] = arguments[G__18522__i + 3]; ++G__18522__i;}
  kvs = new cljs.core.IndexedSeq(G__18522__a,0);
} 
return G__18517__delegate.call(this,coll,k,v,kvs);};
G__18517.cljs$lang$maxFixedArity = 3;
G__18517.cljs$lang$applyTo = (function (arglist__18523){
var coll = cljs.core.first(arglist__18523);
arglist__18523 = cljs.core.next(arglist__18523);
var k = cljs.core.first(arglist__18523);
arglist__18523 = cljs.core.next(arglist__18523);
var v = cljs.core.first(arglist__18523);
var kvs = cljs.core.rest(arglist__18523);
return G__18517__delegate(coll,k,v,kvs);
});
G__18517.cljs$core$IFn$_invoke$arity$variadic = G__18517__delegate;
return G__18517;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__18524 = null;
if (arguments.length > 3) {
var G__18525__i = 0, G__18525__a = new Array(arguments.length -  3);
while (G__18525__i < G__18525__a.length) {G__18525__a[G__18525__i] = arguments[G__18525__i + 3]; ++G__18525__i;}
G__18524 = new cljs.core.IndexedSeq(G__18525__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__18524);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__18528__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__18529 = ret;
var G__18530 = cljs.core.first(ks);
var G__18531 = cljs.core.next(ks);
coll = G__18529;
k = G__18530;
ks = G__18531;
continue;
} else {
return ret;
}
}
break;
}
};
var G__18528 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__18532__i = 0, G__18532__a = new Array(arguments.length -  2);
while (G__18532__i < G__18532__a.length) {G__18532__a[G__18532__i] = arguments[G__18532__i + 2]; ++G__18532__i;}
  ks = new cljs.core.IndexedSeq(G__18532__a,0);
} 
return G__18528__delegate.call(this,coll,k,ks);};
G__18528.cljs$lang$maxFixedArity = 2;
G__18528.cljs$lang$applyTo = (function (arglist__18533){
var coll = cljs.core.first(arglist__18533);
arglist__18533 = cljs.core.next(arglist__18533);
var k = cljs.core.first(arglist__18533);
var ks = cljs.core.rest(arglist__18533);
return G__18528__delegate(coll,k,ks);
});
G__18528.cljs$core$IFn$_invoke$arity$variadic = G__18528__delegate;
return G__18528;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__18534 = null;
if (arguments.length > 2) {
var G__18535__i = 0, G__18535__a = new Array(arguments.length -  2);
while (G__18535__i < G__18535__a.length) {G__18535__a[G__18535__i] = arguments[G__18535__i + 2]; ++G__18535__i;}
G__18534 = new cljs.core.IndexedSeq(G__18535__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__18534);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__3922__auto__ = (function (){var G__18540 = f;
return goog.isFunction(G__18540);
})();
if(cljs.core.truth_(or__3922__auto__)){
return or__3922__auto__;
} else {
var G__18541 = f;
if(G__18541){
var bit__4603__auto__ = null;
if(cljs.core.truth_((function (){var or__3922__auto____$1 = bit__4603__auto__;
if(cljs.core.truth_(or__3922__auto____$1)){
return or__3922__auto____$1;
} else {
return G__18541.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__18541.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__18541);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__18541);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__19007 = null;
var G__19007__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__19007__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18543 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__18543) : self__.afn.call(null,G__18543));
});
var G__19007__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18544 = a;
var G__18545 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__18544,G__18545) : self__.afn.call(null,G__18544,G__18545));
});
var G__19007__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18546 = a;
var G__18547 = b;
var G__18548 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__18546,G__18547,G__18548) : self__.afn.call(null,G__18546,G__18547,G__18548));
});
var G__19007__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18549 = a;
var G__18550 = b;
var G__18551 = c;
var G__18552 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__18549,G__18550,G__18551,G__18552) : self__.afn.call(null,G__18549,G__18550,G__18551,G__18552));
});
var G__19007__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18553 = a;
var G__18554 = b;
var G__18555 = c;
var G__18556 = d;
var G__18557 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__18553,G__18554,G__18555,G__18556,G__18557) : self__.afn.call(null,G__18553,G__18554,G__18555,G__18556,G__18557));
});
var G__19007__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18558 = a;
var G__18559 = b;
var G__18560 = c;
var G__18561 = d;
var G__18562 = e;
var G__18563 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__18558,G__18559,G__18560,G__18561,G__18562,G__18563) : self__.afn.call(null,G__18558,G__18559,G__18560,G__18561,G__18562,G__18563));
});
var G__19007__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18564 = a;
var G__18565 = b;
var G__18566 = c;
var G__18567 = d;
var G__18568 = e;
var G__18569 = f;
var G__18570 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__18564,G__18565,G__18566,G__18567,G__18568,G__18569,G__18570) : self__.afn.call(null,G__18564,G__18565,G__18566,G__18567,G__18568,G__18569,G__18570));
});
var G__19007__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18571 = a;
var G__18572 = b;
var G__18573 = c;
var G__18574 = d;
var G__18575 = e;
var G__18576 = f;
var G__18577 = g;
var G__18578 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__18571,G__18572,G__18573,G__18574,G__18575,G__18576,G__18577,G__18578) : self__.afn.call(null,G__18571,G__18572,G__18573,G__18574,G__18575,G__18576,G__18577,G__18578));
});
var G__19007__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18579 = a;
var G__18580 = b;
var G__18581 = c;
var G__18582 = d;
var G__18583 = e;
var G__18584 = f;
var G__18585 = g;
var G__18586 = h;
var G__18587 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__18579,G__18580,G__18581,G__18582,G__18583,G__18584,G__18585,G__18586,G__18587) : self__.afn.call(null,G__18579,G__18580,G__18581,G__18582,G__18583,G__18584,G__18585,G__18586,G__18587));
});
var G__19007__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18588 = a;
var G__18589 = b;
var G__18590 = c;
var G__18591 = d;
var G__18592 = e;
var G__18593 = f;
var G__18594 = g;
var G__18595 = h;
var G__18596 = i;
var G__18597 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__18588,G__18589,G__18590,G__18591,G__18592,G__18593,G__18594,G__18595,G__18596,G__18597) : self__.afn.call(null,G__18588,G__18589,G__18590,G__18591,G__18592,G__18593,G__18594,G__18595,G__18596,G__18597));
});
var G__19007__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18598 = a;
var G__18599 = b;
var G__18600 = c;
var G__18601 = d;
var G__18602 = e;
var G__18603 = f;
var G__18604 = g;
var G__18605 = h;
var G__18606 = i;
var G__18607 = j;
var G__18608 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__18598,G__18599,G__18600,G__18601,G__18602,G__18603,G__18604,G__18605,G__18606,G__18607,G__18608) : self__.afn.call(null,G__18598,G__18599,G__18600,G__18601,G__18602,G__18603,G__18604,G__18605,G__18606,G__18607,G__18608));
});
var G__19007__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18609 = a;
var G__18610 = b;
var G__18611 = c;
var G__18612 = d;
var G__18613 = e;
var G__18614 = f;
var G__18615 = g;
var G__18616 = h;
var G__18617 = i;
var G__18618 = j;
var G__18619 = k;
var G__18620 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__18609,G__18610,G__18611,G__18612,G__18613,G__18614,G__18615,G__18616,G__18617,G__18618,G__18619,G__18620) : self__.afn.call(null,G__18609,G__18610,G__18611,G__18612,G__18613,G__18614,G__18615,G__18616,G__18617,G__18618,G__18619,G__18620));
});
var G__19007__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18621 = a;
var G__18622 = b;
var G__18623 = c;
var G__18624 = d;
var G__18625 = e;
var G__18626 = f;
var G__18627 = g;
var G__18628 = h;
var G__18629 = i;
var G__18630 = j;
var G__18631 = k;
var G__18632 = l;
var G__18633 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__18621,G__18622,G__18623,G__18624,G__18625,G__18626,G__18627,G__18628,G__18629,G__18630,G__18631,G__18632,G__18633) : self__.afn.call(null,G__18621,G__18622,G__18623,G__18624,G__18625,G__18626,G__18627,G__18628,G__18629,G__18630,G__18631,G__18632,G__18633));
});
var G__19007__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18634 = a;
var G__18635 = b;
var G__18636 = c;
var G__18637 = d;
var G__18638 = e;
var G__18639 = f;
var G__18640 = g;
var G__18641 = h;
var G__18642 = i;
var G__18643 = j;
var G__18644 = k;
var G__18645 = l;
var G__18646 = m;
var G__18647 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__18634,G__18635,G__18636,G__18637,G__18638,G__18639,G__18640,G__18641,G__18642,G__18643,G__18644,G__18645,G__18646,G__18647) : self__.afn.call(null,G__18634,G__18635,G__18636,G__18637,G__18638,G__18639,G__18640,G__18641,G__18642,G__18643,G__18644,G__18645,G__18646,G__18647));
});
var G__19007__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18648 = a;
var G__18649 = b;
var G__18650 = c;
var G__18651 = d;
var G__18652 = e;
var G__18653 = f;
var G__18654 = g;
var G__18655 = h;
var G__18656 = i;
var G__18657 = j;
var G__18658 = k;
var G__18659 = l;
var G__18660 = m;
var G__18661 = n;
var G__18662 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__18648,G__18649,G__18650,G__18651,G__18652,G__18653,G__18654,G__18655,G__18656,G__18657,G__18658,G__18659,G__18660,G__18661,G__18662) : self__.afn.call(null,G__18648,G__18649,G__18650,G__18651,G__18652,G__18653,G__18654,G__18655,G__18656,G__18657,G__18658,G__18659,G__18660,G__18661,G__18662));
});
var G__19007__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18663 = a;
var G__18664 = b;
var G__18665 = c;
var G__18666 = d;
var G__18667 = e;
var G__18668 = f;
var G__18669 = g;
var G__18670 = h;
var G__18671 = i;
var G__18672 = j;
var G__18673 = k;
var G__18674 = l;
var G__18675 = m;
var G__18676 = n;
var G__18677 = o;
var G__18678 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__18663,G__18664,G__18665,G__18666,G__18667,G__18668,G__18669,G__18670,G__18671,G__18672,G__18673,G__18674,G__18675,G__18676,G__18677,G__18678) : self__.afn.call(null,G__18663,G__18664,G__18665,G__18666,G__18667,G__18668,G__18669,G__18670,G__18671,G__18672,G__18673,G__18674,G__18675,G__18676,G__18677,G__18678));
});
var G__19007__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18679 = a;
var G__18680 = b;
var G__18681 = c;
var G__18682 = d;
var G__18683 = e;
var G__18684 = f;
var G__18685 = g;
var G__18686 = h;
var G__18687 = i;
var G__18688 = j;
var G__18689 = k;
var G__18690 = l;
var G__18691 = m;
var G__18692 = n;
var G__18693 = o;
var G__18694 = p;
var G__18695 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__18679,G__18680,G__18681,G__18682,G__18683,G__18684,G__18685,G__18686,G__18687,G__18688,G__18689,G__18690,G__18691,G__18692,G__18693,G__18694,G__18695) : self__.afn.call(null,G__18679,G__18680,G__18681,G__18682,G__18683,G__18684,G__18685,G__18686,G__18687,G__18688,G__18689,G__18690,G__18691,G__18692,G__18693,G__18694,G__18695));
});
var G__19007__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18696 = a;
var G__18697 = b;
var G__18698 = c;
var G__18699 = d;
var G__18700 = e;
var G__18701 = f;
var G__18702 = g;
var G__18703 = h;
var G__18704 = i;
var G__18705 = j;
var G__18706 = k;
var G__18707 = l;
var G__18708 = m;
var G__18709 = n;
var G__18710 = o;
var G__18711 = p;
var G__18712 = q;
var G__18713 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__18696,G__18697,G__18698,G__18699,G__18700,G__18701,G__18702,G__18703,G__18704,G__18705,G__18706,G__18707,G__18708,G__18709,G__18710,G__18711,G__18712,G__18713) : self__.afn.call(null,G__18696,G__18697,G__18698,G__18699,G__18700,G__18701,G__18702,G__18703,G__18704,G__18705,G__18706,G__18707,G__18708,G__18709,G__18710,G__18711,G__18712,G__18713));
});
var G__19007__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18714 = a;
var G__18715 = b;
var G__18716 = c;
var G__18717 = d;
var G__18718 = e;
var G__18719 = f;
var G__18720 = g;
var G__18721 = h;
var G__18722 = i;
var G__18723 = j;
var G__18724 = k;
var G__18725 = l;
var G__18726 = m;
var G__18727 = n;
var G__18728 = o;
var G__18729 = p;
var G__18730 = q;
var G__18731 = r;
var G__18732 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__18714,G__18715,G__18716,G__18717,G__18718,G__18719,G__18720,G__18721,G__18722,G__18723,G__18724,G__18725,G__18726,G__18727,G__18728,G__18729,G__18730,G__18731,G__18732) : self__.afn.call(null,G__18714,G__18715,G__18716,G__18717,G__18718,G__18719,G__18720,G__18721,G__18722,G__18723,G__18724,G__18725,G__18726,G__18727,G__18728,G__18729,G__18730,G__18731,G__18732));
});
var G__19007__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18733 = a;
var G__18734 = b;
var G__18735 = c;
var G__18736 = d;
var G__18737 = e;
var G__18738 = f;
var G__18739 = g;
var G__18740 = h;
var G__18741 = i;
var G__18742 = j;
var G__18743 = k;
var G__18744 = l;
var G__18745 = m;
var G__18746 = n;
var G__18747 = o;
var G__18748 = p;
var G__18749 = q;
var G__18750 = r;
var G__18751 = s;
var G__18752 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__18733,G__18734,G__18735,G__18736,G__18737,G__18738,G__18739,G__18740,G__18741,G__18742,G__18743,G__18744,G__18745,G__18746,G__18747,G__18748,G__18749,G__18750,G__18751,G__18752) : self__.afn.call(null,G__18733,G__18734,G__18735,G__18736,G__18737,G__18738,G__18739,G__18740,G__18741,G__18742,G__18743,G__18744,G__18745,G__18746,G__18747,G__18748,G__18749,G__18750,G__18751,G__18752));
});
var G__19007__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18753 = self__.afn;
var G__18754 = a;
var G__18755 = b;
var G__18756 = c;
var G__18757 = d;
var G__18758 = e;
var G__18759 = f;
var G__18760 = g;
var G__18761 = h;
var G__18762 = i;
var G__18763 = j;
var G__18764 = k;
var G__18765 = l;
var G__18766 = m;
var G__18767 = n;
var G__18768 = o;
var G__18769 = p;
var G__18770 = q;
var G__18771 = r;
var G__18772 = s;
var G__18773 = t;
var G__18774 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__18753,G__18754,G__18755,G__18756,G__18757,G__18758,G__18759,G__18760,G__18761,G__18762,G__18763,G__18764,G__18765,G__18766,G__18767,G__18768,G__18769,G__18770,G__18771,G__18772,G__18773,G__18774) : cljs.core.apply.call(null,G__18753,G__18754,G__18755,G__18756,G__18757,G__18758,G__18759,G__18760,G__18761,G__18762,G__18763,G__18764,G__18765,G__18766,G__18767,G__18768,G__18769,G__18770,G__18771,G__18772,G__18773,G__18774));
});
G__19007 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__19007__1.call(this,self__);
case 2:
return G__19007__2.call(this,self__,a);
case 3:
return G__19007__3.call(this,self__,a,b);
case 4:
return G__19007__4.call(this,self__,a,b,c);
case 5:
return G__19007__5.call(this,self__,a,b,c,d);
case 6:
return G__19007__6.call(this,self__,a,b,c,d,e);
case 7:
return G__19007__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__19007__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__19007__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__19007__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__19007__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__19007__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__19007__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__19007__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__19007__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__19007__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__19007__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__19007__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__19007__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__19007__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__19007__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__19007__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19007.cljs$core$IFn$_invoke$arity$1 = G__19007__1;
G__19007.cljs$core$IFn$_invoke$arity$2 = G__19007__2;
G__19007.cljs$core$IFn$_invoke$arity$3 = G__19007__3;
G__19007.cljs$core$IFn$_invoke$arity$4 = G__19007__4;
G__19007.cljs$core$IFn$_invoke$arity$5 = G__19007__5;
G__19007.cljs$core$IFn$_invoke$arity$6 = G__19007__6;
G__19007.cljs$core$IFn$_invoke$arity$7 = G__19007__7;
G__19007.cljs$core$IFn$_invoke$arity$8 = G__19007__8;
G__19007.cljs$core$IFn$_invoke$arity$9 = G__19007__9;
G__19007.cljs$core$IFn$_invoke$arity$10 = G__19007__10;
G__19007.cljs$core$IFn$_invoke$arity$11 = G__19007__11;
G__19007.cljs$core$IFn$_invoke$arity$12 = G__19007__12;
G__19007.cljs$core$IFn$_invoke$arity$13 = G__19007__13;
G__19007.cljs$core$IFn$_invoke$arity$14 = G__19007__14;
G__19007.cljs$core$IFn$_invoke$arity$15 = G__19007__15;
G__19007.cljs$core$IFn$_invoke$arity$16 = G__19007__16;
G__19007.cljs$core$IFn$_invoke$arity$17 = G__19007__17;
G__19007.cljs$core$IFn$_invoke$arity$18 = G__19007__18;
G__19007.cljs$core$IFn$_invoke$arity$19 = G__19007__19;
G__19007.cljs$core$IFn$_invoke$arity$20 = G__19007__20;
G__19007.cljs$core$IFn$_invoke$arity$21 = G__19007__21;
G__19007.cljs$core$IFn$_invoke$arity$22 = G__19007__22;
return G__19007;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args18542){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args18542)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__18775 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__18775) : self__.afn.call(null,G__18775));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__18776 = a;
var G__18777 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__18776,G__18777) : self__.afn.call(null,G__18776,G__18777));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__18778 = a;
var G__18779 = b;
var G__18780 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__18778,G__18779,G__18780) : self__.afn.call(null,G__18778,G__18779,G__18780));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__18781 = a;
var G__18782 = b;
var G__18783 = c;
var G__18784 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__18781,G__18782,G__18783,G__18784) : self__.afn.call(null,G__18781,G__18782,G__18783,G__18784));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__18785 = a;
var G__18786 = b;
var G__18787 = c;
var G__18788 = d;
var G__18789 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__18785,G__18786,G__18787,G__18788,G__18789) : self__.afn.call(null,G__18785,G__18786,G__18787,G__18788,G__18789));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__18790 = a;
var G__18791 = b;
var G__18792 = c;
var G__18793 = d;
var G__18794 = e;
var G__18795 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__18790,G__18791,G__18792,G__18793,G__18794,G__18795) : self__.afn.call(null,G__18790,G__18791,G__18792,G__18793,G__18794,G__18795));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__18796 = a;
var G__18797 = b;
var G__18798 = c;
var G__18799 = d;
var G__18800 = e;
var G__18801 = f;
var G__18802 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__18796,G__18797,G__18798,G__18799,G__18800,G__18801,G__18802) : self__.afn.call(null,G__18796,G__18797,G__18798,G__18799,G__18800,G__18801,G__18802));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__18803 = a;
var G__18804 = b;
var G__18805 = c;
var G__18806 = d;
var G__18807 = e;
var G__18808 = f;
var G__18809 = g;
var G__18810 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__18803,G__18804,G__18805,G__18806,G__18807,G__18808,G__18809,G__18810) : self__.afn.call(null,G__18803,G__18804,G__18805,G__18806,G__18807,G__18808,G__18809,G__18810));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__18811 = a;
var G__18812 = b;
var G__18813 = c;
var G__18814 = d;
var G__18815 = e;
var G__18816 = f;
var G__18817 = g;
var G__18818 = h;
var G__18819 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__18811,G__18812,G__18813,G__18814,G__18815,G__18816,G__18817,G__18818,G__18819) : self__.afn.call(null,G__18811,G__18812,G__18813,G__18814,G__18815,G__18816,G__18817,G__18818,G__18819));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__18820 = a;
var G__18821 = b;
var G__18822 = c;
var G__18823 = d;
var G__18824 = e;
var G__18825 = f;
var G__18826 = g;
var G__18827 = h;
var G__18828 = i;
var G__18829 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__18820,G__18821,G__18822,G__18823,G__18824,G__18825,G__18826,G__18827,G__18828,G__18829) : self__.afn.call(null,G__18820,G__18821,G__18822,G__18823,G__18824,G__18825,G__18826,G__18827,G__18828,G__18829));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__18830 = a;
var G__18831 = b;
var G__18832 = c;
var G__18833 = d;
var G__18834 = e;
var G__18835 = f;
var G__18836 = g;
var G__18837 = h;
var G__18838 = i;
var G__18839 = j;
var G__18840 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__18830,G__18831,G__18832,G__18833,G__18834,G__18835,G__18836,G__18837,G__18838,G__18839,G__18840) : self__.afn.call(null,G__18830,G__18831,G__18832,G__18833,G__18834,G__18835,G__18836,G__18837,G__18838,G__18839,G__18840));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__18841 = a;
var G__18842 = b;
var G__18843 = c;
var G__18844 = d;
var G__18845 = e;
var G__18846 = f;
var G__18847 = g;
var G__18848 = h;
var G__18849 = i;
var G__18850 = j;
var G__18851 = k;
var G__18852 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__18841,G__18842,G__18843,G__18844,G__18845,G__18846,G__18847,G__18848,G__18849,G__18850,G__18851,G__18852) : self__.afn.call(null,G__18841,G__18842,G__18843,G__18844,G__18845,G__18846,G__18847,G__18848,G__18849,G__18850,G__18851,G__18852));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__18853 = a;
var G__18854 = b;
var G__18855 = c;
var G__18856 = d;
var G__18857 = e;
var G__18858 = f;
var G__18859 = g;
var G__18860 = h;
var G__18861 = i;
var G__18862 = j;
var G__18863 = k;
var G__18864 = l;
var G__18865 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__18853,G__18854,G__18855,G__18856,G__18857,G__18858,G__18859,G__18860,G__18861,G__18862,G__18863,G__18864,G__18865) : self__.afn.call(null,G__18853,G__18854,G__18855,G__18856,G__18857,G__18858,G__18859,G__18860,G__18861,G__18862,G__18863,G__18864,G__18865));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__18866 = a;
var G__18867 = b;
var G__18868 = c;
var G__18869 = d;
var G__18870 = e;
var G__18871 = f;
var G__18872 = g;
var G__18873 = h;
var G__18874 = i;
var G__18875 = j;
var G__18876 = k;
var G__18877 = l;
var G__18878 = m;
var G__18879 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__18866,G__18867,G__18868,G__18869,G__18870,G__18871,G__18872,G__18873,G__18874,G__18875,G__18876,G__18877,G__18878,G__18879) : self__.afn.call(null,G__18866,G__18867,G__18868,G__18869,G__18870,G__18871,G__18872,G__18873,G__18874,G__18875,G__18876,G__18877,G__18878,G__18879));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__18880 = a;
var G__18881 = b;
var G__18882 = c;
var G__18883 = d;
var G__18884 = e;
var G__18885 = f;
var G__18886 = g;
var G__18887 = h;
var G__18888 = i;
var G__18889 = j;
var G__18890 = k;
var G__18891 = l;
var G__18892 = m;
var G__18893 = n;
var G__18894 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__18880,G__18881,G__18882,G__18883,G__18884,G__18885,G__18886,G__18887,G__18888,G__18889,G__18890,G__18891,G__18892,G__18893,G__18894) : self__.afn.call(null,G__18880,G__18881,G__18882,G__18883,G__18884,G__18885,G__18886,G__18887,G__18888,G__18889,G__18890,G__18891,G__18892,G__18893,G__18894));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__18895 = a;
var G__18896 = b;
var G__18897 = c;
var G__18898 = d;
var G__18899 = e;
var G__18900 = f;
var G__18901 = g;
var G__18902 = h;
var G__18903 = i;
var G__18904 = j;
var G__18905 = k;
var G__18906 = l;
var G__18907 = m;
var G__18908 = n;
var G__18909 = o;
var G__18910 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__18895,G__18896,G__18897,G__18898,G__18899,G__18900,G__18901,G__18902,G__18903,G__18904,G__18905,G__18906,G__18907,G__18908,G__18909,G__18910) : self__.afn.call(null,G__18895,G__18896,G__18897,G__18898,G__18899,G__18900,G__18901,G__18902,G__18903,G__18904,G__18905,G__18906,G__18907,G__18908,G__18909,G__18910));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__18911 = a;
var G__18912 = b;
var G__18913 = c;
var G__18914 = d;
var G__18915 = e;
var G__18916 = f;
var G__18917 = g;
var G__18918 = h;
var G__18919 = i;
var G__18920 = j;
var G__18921 = k;
var G__18922 = l;
var G__18923 = m;
var G__18924 = n;
var G__18925 = o;
var G__18926 = p;
var G__18927 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__18911,G__18912,G__18913,G__18914,G__18915,G__18916,G__18917,G__18918,G__18919,G__18920,G__18921,G__18922,G__18923,G__18924,G__18925,G__18926,G__18927) : self__.afn.call(null,G__18911,G__18912,G__18913,G__18914,G__18915,G__18916,G__18917,G__18918,G__18919,G__18920,G__18921,G__18922,G__18923,G__18924,G__18925,G__18926,G__18927));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__18928 = a;
var G__18929 = b;
var G__18930 = c;
var G__18931 = d;
var G__18932 = e;
var G__18933 = f;
var G__18934 = g;
var G__18935 = h;
var G__18936 = i;
var G__18937 = j;
var G__18938 = k;
var G__18939 = l;
var G__18940 = m;
var G__18941 = n;
var G__18942 = o;
var G__18943 = p;
var G__18944 = q;
var G__18945 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__18928,G__18929,G__18930,G__18931,G__18932,G__18933,G__18934,G__18935,G__18936,G__18937,G__18938,G__18939,G__18940,G__18941,G__18942,G__18943,G__18944,G__18945) : self__.afn.call(null,G__18928,G__18929,G__18930,G__18931,G__18932,G__18933,G__18934,G__18935,G__18936,G__18937,G__18938,G__18939,G__18940,G__18941,G__18942,G__18943,G__18944,G__18945));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__18946 = a;
var G__18947 = b;
var G__18948 = c;
var G__18949 = d;
var G__18950 = e;
var G__18951 = f;
var G__18952 = g;
var G__18953 = h;
var G__18954 = i;
var G__18955 = j;
var G__18956 = k;
var G__18957 = l;
var G__18958 = m;
var G__18959 = n;
var G__18960 = o;
var G__18961 = p;
var G__18962 = q;
var G__18963 = r;
var G__18964 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__18946,G__18947,G__18948,G__18949,G__18950,G__18951,G__18952,G__18953,G__18954,G__18955,G__18956,G__18957,G__18958,G__18959,G__18960,G__18961,G__18962,G__18963,G__18964) : self__.afn.call(null,G__18946,G__18947,G__18948,G__18949,G__18950,G__18951,G__18952,G__18953,G__18954,G__18955,G__18956,G__18957,G__18958,G__18959,G__18960,G__18961,G__18962,G__18963,G__18964));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__18965 = a;
var G__18966 = b;
var G__18967 = c;
var G__18968 = d;
var G__18969 = e;
var G__18970 = f;
var G__18971 = g;
var G__18972 = h;
var G__18973 = i;
var G__18974 = j;
var G__18975 = k;
var G__18976 = l;
var G__18977 = m;
var G__18978 = n;
var G__18979 = o;
var G__18980 = p;
var G__18981 = q;
var G__18982 = r;
var G__18983 = s;
var G__18984 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__18965,G__18966,G__18967,G__18968,G__18969,G__18970,G__18971,G__18972,G__18973,G__18974,G__18975,G__18976,G__18977,G__18978,G__18979,G__18980,G__18981,G__18982,G__18983,G__18984) : self__.afn.call(null,G__18965,G__18966,G__18967,G__18968,G__18969,G__18970,G__18971,G__18972,G__18973,G__18974,G__18975,G__18976,G__18977,G__18978,G__18979,G__18980,G__18981,G__18982,G__18983,G__18984));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__18985 = self__.afn;
var G__18986 = a;
var G__18987 = b;
var G__18988 = c;
var G__18989 = d;
var G__18990 = e;
var G__18991 = f;
var G__18992 = g;
var G__18993 = h;
var G__18994 = i;
var G__18995 = j;
var G__18996 = k;
var G__18997 = l;
var G__18998 = m;
var G__18999 = n;
var G__19000 = o;
var G__19001 = p;
var G__19002 = q;
var G__19003 = r;
var G__19004 = s;
var G__19005 = t;
var G__19006 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__18985,G__18986,G__18987,G__18988,G__18989,G__18990,G__18991,G__18992,G__18993,G__18994,G__18995,G__18996,G__18997,G__18998,G__18999,G__19000,G__19001,G__19002,G__19003,G__19004,G__19005,G__19006) : cljs.core.apply.call(null,G__18985,G__18986,G__18987,G__18988,G__18989,G__18990,G__18991,G__18992,G__18993,G__18994,G__18995,G__18996,G__18997,G__18998,G__18999,G__19000,G__19001,G__19002,G__19003,G__19004,G__19005,G__19006));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__19011 = o;
if(G__19011){
var bit__4603__auto__ = (G__19011.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__4603__auto__) || (G__19011.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__19011.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__19011);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__19011);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__3910__auto__ = !((o == null));
if(and__3910__auto__){
var G__19015 = o;
if(G__19015){
var bit__4603__auto__ = (G__19015.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4603__auto__) || (G__19015.cljs$core$IMeta$)){
return true;
} else {
if((!G__19015.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__19015);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__19015);
}
} else {
return and__3910__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__19018__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__19019 = ret;
var G__19020 = cljs.core.first(ks);
var G__19021 = cljs.core.next(ks);
coll = G__19019;
k = G__19020;
ks = G__19021;
continue;
} else {
return ret;
}
}
break;
}
};
var G__19018 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__19022__i = 0, G__19022__a = new Array(arguments.length -  2);
while (G__19022__i < G__19022__a.length) {G__19022__a[G__19022__i] = arguments[G__19022__i + 2]; ++G__19022__i;}
  ks = new cljs.core.IndexedSeq(G__19022__a,0);
} 
return G__19018__delegate.call(this,coll,k,ks);};
G__19018.cljs$lang$maxFixedArity = 2;
G__19018.cljs$lang$applyTo = (function (arglist__19023){
var coll = cljs.core.first(arglist__19023);
arglist__19023 = cljs.core.next(arglist__19023);
var k = cljs.core.first(arglist__19023);
var ks = cljs.core.rest(arglist__19023);
return G__19018__delegate(coll,k,ks);
});
G__19018.cljs$core$IFn$_invoke$arity$variadic = G__19018__delegate;
return G__19018;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__19024 = null;
if (arguments.length > 2) {
var G__19025__i = 0, G__19025__a = new Array(arguments.length -  2);
while (G__19025__i < G__19025__a.length) {G__19025__a[G__19025__i] = arguments[G__19025__i + 2]; ++G__19025__i;}
G__19024 = new cljs.core.IndexedSeq(G__19025__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__19024);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__19027 = x;
if(G__19027){
var bit__4603__auto__ = (G__19027.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__4603__auto__) || (G__19027.cljs$core$ICollection$)){
return true;
} else {
if((!G__19027.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__19027);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__19027);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__19029 = x;
if(G__19029){
var bit__4603__auto__ = (G__19029.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__4603__auto__) || (G__19029.cljs$core$ISet$)){
return true;
} else {
if((!G__19029.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__19029);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__19029);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__19031 = x;
if(G__19031){
var bit__4603__auto__ = (G__19031.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__4603__auto__) || (G__19031.cljs$core$IAssociative$)){
return true;
} else {
if((!G__19031.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__19031);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__19031);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__19033 = x;
if(G__19033){
var bit__4603__auto__ = (G__19033.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__4603__auto__) || (G__19033.cljs$core$ISequential$)){
return true;
} else {
if((!G__19033.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__19033);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__19033);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__19035 = x;
if(G__19035){
var bit__4603__auto__ = (G__19035.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__4603__auto__) || (G__19035.cljs$core$ISorted$)){
return true;
} else {
if((!G__19035.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__19035);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__19035);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__19037 = x;
if(G__19037){
var bit__4603__auto__ = (G__19037.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4603__auto__) || (G__19037.cljs$core$IReduce$)){
return true;
} else {
if((!G__19037.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__19037);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__19037);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__19039 = x;
if(G__19039){
var bit__4603__auto__ = (G__19039.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4603__auto__) || (G__19039.cljs$core$IMap$)){
return true;
} else {
if((!G__19039.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__19039);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__19039);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__19041 = x;
if(G__19041){
var bit__4603__auto__ = (G__19041.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__4603__auto__) || (G__19041.cljs$core$IVector$)){
return true;
} else {
if((!G__19041.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__19041);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__19041);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__19043 = x;
if(G__19043){
var bit__4596__auto__ = (G__19043.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__4596__auto__) || (G__19043.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj19049 = {};
return obj19049;
});
var js_obj__1 = (function() { 
var G__19052__delegate = function (keyvals){
var G__19050 = goog.object.create;
var G__19051 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__19050,G__19051) : cljs.core.apply.call(null,G__19050,G__19051));
};
var G__19052 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__19053__i = 0, G__19053__a = new Array(arguments.length -  0);
while (G__19053__i < G__19053__a.length) {G__19053__a[G__19053__i] = arguments[G__19053__i + 0]; ++G__19053__i;}
  keyvals = new cljs.core.IndexedSeq(G__19053__a,0);
} 
return G__19052__delegate.call(this,keyvals);};
G__19052.cljs$lang$maxFixedArity = 0;
G__19052.cljs$lang$applyTo = (function (arglist__19054){
var keyvals = cljs.core.seq(arglist__19054);
return G__19052__delegate(keyvals);
});
G__19052.cljs$core$IFn$_invoke$arity$variadic = G__19052__delegate;
return G__19052;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__19055 = null;
if (arguments.length > 0) {
var G__19056__i = 0, G__19056__a = new Array(arguments.length -  0);
while (G__19056__i < G__19056__a.length) {G__19056__a[G__19056__i] = arguments[G__19056__i + 0]; ++G__19056__i;}
G__19055 = new cljs.core.IndexedSeq(G__19056__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__19055);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__19059_19061 = obj;
var G__19060_19062 = ((function (G__19059_19061,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__19059_19061,keys))
;
goog.object.forEach(G__19059_19061,G__19060_19062);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__19063 = (i__$1 + (1));
var G__19064 = (j__$1 + (1));
var G__19065 = (len__$1 - (1));
i__$1 = G__19063;
j__$1 = G__19064;
len__$1 = G__19065;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__19066 = (i__$1 - (1));
var G__19067 = (j__$1 - (1));
var G__19068 = (len__$1 - (1));
i__$1 = G__19066;
j__$1 = G__19067;
len__$1 = G__19068;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj19070 = {};
return obj19070;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__19072 = s;
if(G__19072){
var bit__4603__auto__ = (G__19072.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4603__auto__) || (G__19072.cljs$core$ISeq$)){
return true;
} else {
if((!G__19072.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__19072);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__19072);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__19074 = s;
if(G__19074){
var bit__4603__auto__ = (G__19074.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4603__auto__) || (G__19074.cljs$core$ISeqable$)){
return true;
} else {
if((!G__19074.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__19074);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__19074);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__3922__auto__ = cljs.core.fn_QMARK_(f);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var G__19078 = f;
if(G__19078){
var bit__4603__auto__ = (G__19078.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__4603__auto__) || (G__19078.cljs$core$IFn$)){
return true;
} else {
if((!G__19078.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__19078);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__19078);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__19091 = n;
return isNaN(G__19091);
})())) && (!((n === Infinity))) && (((function (){var G__19092 = n;
return parseFloat(G__19092);
})() === (function (){var G__19093 = n;
var G__19094 = (10);
return parseInt(G__19093,G__19094);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__19095__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__19096 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__19097 = etc;
s = G__19096;
xs = G__19097;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__19095 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19098__i = 0, G__19098__a = new Array(arguments.length -  2);
while (G__19098__i < G__19098__a.length) {G__19098__a[G__19098__i] = arguments[G__19098__i + 2]; ++G__19098__i;}
  more = new cljs.core.IndexedSeq(G__19098__a,0);
} 
return G__19095__delegate.call(this,x,y,more);};
G__19095.cljs$lang$maxFixedArity = 2;
G__19095.cljs$lang$applyTo = (function (arglist__19099){
var x = cljs.core.first(arglist__19099);
arglist__19099 = cljs.core.next(arglist__19099);
var y = cljs.core.first(arglist__19099);
var more = cljs.core.rest(arglist__19099);
return G__19095__delegate(x,y,more);
});
G__19095.cljs$core$IFn$_invoke$arity$variadic = G__19095__delegate;
return G__19095;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__19100 = null;
if (arguments.length > 2) {
var G__19101__i = 0, G__19101__a = new Array(arguments.length -  2);
while (G__19101__i < G__19101__a.length) {G__19101__a[G__19101__i] = arguments[G__19101__i + 2]; ++G__19101__i;}
G__19100 = new cljs.core.IndexedSeq(G__19101__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19100);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__19105 = x;
if(G__19105){
var bit__4596__auto__ = (G__19105.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__4596__auto__) || (G__19105.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__19106 = x;
var G__19107 = y;
return goog.array.defaultCompare(G__19106,G__19107);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__19112 = xs;
var G__19113 = ys;
var G__19114 = len;
var G__19115 = (n + (1));
xs = G__19112;
ys = G__19113;
len = G__19114;
n = G__19115;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__19120 = x;
var G__19121 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19120,G__19121) : f.call(null,G__19120,G__19121));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__19122 = y;
var G__19123 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19122,G__19123) : f.call(null,G__19122,G__19123));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__19129 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__19129) : cljs.core.to_array.call(null,G__19129));
})();
var G__19130_19132 = a;
var G__19131_19133 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__19130_19132,G__19131_19133);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__19139 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__19139) : keyfn.call(null,G__19139));
})(),(function (){var G__19140 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__19140) : keyfn.call(null,G__19140));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__19146 = f;
var G__19147 = cljs.core.first(s);
var G__19148 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__19146,G__19147,G__19148) : cljs.core.reduce.call(null,G__19146,G__19147,G__19148));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__19149 = val__$1;
var G__19150 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19149,G__19150) : f.call(null,G__19149,G__19150));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__19151 = nval;
var G__19152 = cljs.core.next(coll__$1);
val__$1 = G__19151;
coll__$1 = G__19152;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__19156 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__19156) : cljs.core.to_array.call(null,G__19156));
})();
var G__19157_19159 = a;
goog.array.shuffle(G__19157_19159);

var G__19158 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__19158) : cljs.core.vec.call(null,G__19158));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__19162 = coll;
if(G__19162){
var bit__4596__auto__ = (G__19162.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4596__auto__) || (G__19162.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__19163 = coll;
if(G__19163){
var bit__4596__auto__ = (G__19163.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4596__auto__) || (G__19163.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__19172 = null;
var G__19172__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__19172__1 = (function (x){
var G__19169 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__19169) : cf.call(null,G__19169));
});
var G__19172__2 = (function (x,y){
var G__19170 = x;
var G__19171 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19170,G__19171) : f.call(null,G__19170,G__19171));
});
G__19172 = function(x,y){
switch(arguments.length){
case 0:
return G__19172__0.call(this);
case 1:
return G__19172__1.call(this,x);
case 2:
return G__19172__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19172.cljs$core$IFn$_invoke$arity$0 = G__19172__0;
G__19172.cljs$core$IFn$_invoke$arity$1 = G__19172__1;
G__19172.cljs$core$IFn$_invoke$arity$2 = G__19172__2;
return G__19172;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__19179 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__19179) : xform.call(null,G__19179));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__19180 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__19180) : f__$1.call(null,G__19180));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__19181__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__19181 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19182__i = 0, G__19182__a = new Array(arguments.length -  2);
while (G__19182__i < G__19182__a.length) {G__19182__a[G__19182__i] = arguments[G__19182__i + 2]; ++G__19182__i;}
  more = new cljs.core.IndexedSeq(G__19182__a,0);
} 
return G__19181__delegate.call(this,x,y,more);};
G__19181.cljs$lang$maxFixedArity = 2;
G__19181.cljs$lang$applyTo = (function (arglist__19183){
var x = cljs.core.first(arglist__19183);
arglist__19183 = cljs.core.next(arglist__19183);
var y = cljs.core.first(arglist__19183);
var more = cljs.core.rest(arglist__19183);
return G__19181__delegate(x,y,more);
});
G__19181.cljs$core$IFn$_invoke$arity$variadic = G__19181__delegate;
return G__19181;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__19184 = null;
if (arguments.length > 2) {
var G__19185__i = 0, G__19185__a = new Array(arguments.length -  2);
while (G__19185__i < G__19185__a.length) {G__19185__a[G__19185__i] = arguments[G__19185__i + 2]; ++G__19185__i;}
G__19184 = new cljs.core.IndexedSeq(G__19185__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19184);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__19186__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__19186 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19187__i = 0, G__19187__a = new Array(arguments.length -  2);
while (G__19187__i < G__19187__a.length) {G__19187__a[G__19187__i] = arguments[G__19187__i + 2]; ++G__19187__i;}
  more = new cljs.core.IndexedSeq(G__19187__a,0);
} 
return G__19186__delegate.call(this,x,y,more);};
G__19186.cljs$lang$maxFixedArity = 2;
G__19186.cljs$lang$applyTo = (function (arglist__19188){
var x = cljs.core.first(arglist__19188);
arglist__19188 = cljs.core.next(arglist__19188);
var y = cljs.core.first(arglist__19188);
var more = cljs.core.rest(arglist__19188);
return G__19186__delegate(x,y,more);
});
G__19186.cljs$core$IFn$_invoke$arity$variadic = G__19186__delegate;
return G__19186;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__19189 = null;
if (arguments.length > 2) {
var G__19190__i = 0, G__19190__a = new Array(arguments.length -  2);
while (G__19190__i < G__19190__a.length) {G__19190__a[G__19190__i] = arguments[G__19190__i + 2]; ++G__19190__i;}
G__19189 = new cljs.core.IndexedSeq(G__19190__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19189);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__19191__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__19191 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19192__i = 0, G__19192__a = new Array(arguments.length -  2);
while (G__19192__i < G__19192__a.length) {G__19192__a[G__19192__i] = arguments[G__19192__i + 2]; ++G__19192__i;}
  more = new cljs.core.IndexedSeq(G__19192__a,0);
} 
return G__19191__delegate.call(this,x,y,more);};
G__19191.cljs$lang$maxFixedArity = 2;
G__19191.cljs$lang$applyTo = (function (arglist__19193){
var x = cljs.core.first(arglist__19193);
arglist__19193 = cljs.core.next(arglist__19193);
var y = cljs.core.first(arglist__19193);
var more = cljs.core.rest(arglist__19193);
return G__19191__delegate(x,y,more);
});
G__19191.cljs$core$IFn$_invoke$arity$variadic = G__19191__delegate;
return G__19191;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__19194 = null;
if (arguments.length > 2) {
var G__19195__i = 0, G__19195__a = new Array(arguments.length -  2);
while (G__19195__i < G__19195__a.length) {G__19195__a[G__19195__i] = arguments[G__19195__i + 2]; ++G__19195__i;}
G__19194 = new cljs.core.IndexedSeq(G__19195__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19194);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__19200__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__19200 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19201__i = 0, G__19201__a = new Array(arguments.length -  2);
while (G__19201__i < G__19201__a.length) {G__19201__a[G__19201__i] = arguments[G__19201__i + 2]; ++G__19201__i;}
  more = new cljs.core.IndexedSeq(G__19201__a,0);
} 
return G__19200__delegate.call(this,x,y,more);};
G__19200.cljs$lang$maxFixedArity = 2;
G__19200.cljs$lang$applyTo = (function (arglist__19202){
var x = cljs.core.first(arglist__19202);
arglist__19202 = cljs.core.next(arglist__19202);
var y = cljs.core.first(arglist__19202);
var more = cljs.core.rest(arglist__19202);
return G__19200__delegate(x,y,more);
});
G__19200.cljs$core$IFn$_invoke$arity$variadic = G__19200__delegate;
return G__19200;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__19203 = null;
if (arguments.length > 2) {
var G__19204__i = 0, G__19204__a = new Array(arguments.length -  2);
while (G__19204__i < G__19204__a.length) {G__19204__a[G__19204__i] = arguments[G__19204__i + 2]; ++G__19204__i;}
G__19203 = new cljs.core.IndexedSeq(G__19204__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19203);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__19205__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__19206 = y;
var G__19207 = cljs.core.first(more);
var G__19208 = cljs.core.next(more);
x = G__19206;
y = G__19207;
more = G__19208;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__19205 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19209__i = 0, G__19209__a = new Array(arguments.length -  2);
while (G__19209__i < G__19209__a.length) {G__19209__a[G__19209__i] = arguments[G__19209__i + 2]; ++G__19209__i;}
  more = new cljs.core.IndexedSeq(G__19209__a,0);
} 
return G__19205__delegate.call(this,x,y,more);};
G__19205.cljs$lang$maxFixedArity = 2;
G__19205.cljs$lang$applyTo = (function (arglist__19210){
var x = cljs.core.first(arglist__19210);
arglist__19210 = cljs.core.next(arglist__19210);
var y = cljs.core.first(arglist__19210);
var more = cljs.core.rest(arglist__19210);
return G__19205__delegate(x,y,more);
});
G__19205.cljs$core$IFn$_invoke$arity$variadic = G__19205__delegate;
return G__19205;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__19211 = null;
if (arguments.length > 2) {
var G__19212__i = 0, G__19212__a = new Array(arguments.length -  2);
while (G__19212__i < G__19212__a.length) {G__19212__a[G__19212__i] = arguments[G__19212__i + 2]; ++G__19212__i;}
G__19211 = new cljs.core.IndexedSeq(G__19212__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19211);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__19213__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__19214 = y;
var G__19215 = cljs.core.first(more);
var G__19216 = cljs.core.next(more);
x = G__19214;
y = G__19215;
more = G__19216;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__19213 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19217__i = 0, G__19217__a = new Array(arguments.length -  2);
while (G__19217__i < G__19217__a.length) {G__19217__a[G__19217__i] = arguments[G__19217__i + 2]; ++G__19217__i;}
  more = new cljs.core.IndexedSeq(G__19217__a,0);
} 
return G__19213__delegate.call(this,x,y,more);};
G__19213.cljs$lang$maxFixedArity = 2;
G__19213.cljs$lang$applyTo = (function (arglist__19218){
var x = cljs.core.first(arglist__19218);
arglist__19218 = cljs.core.next(arglist__19218);
var y = cljs.core.first(arglist__19218);
var more = cljs.core.rest(arglist__19218);
return G__19213__delegate(x,y,more);
});
G__19213.cljs$core$IFn$_invoke$arity$variadic = G__19213__delegate;
return G__19213;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__19219 = null;
if (arguments.length > 2) {
var G__19220__i = 0, G__19220__a = new Array(arguments.length -  2);
while (G__19220__i < G__19220__a.length) {G__19220__a[G__19220__i] = arguments[G__19220__i + 2]; ++G__19220__i;}
G__19219 = new cljs.core.IndexedSeq(G__19220__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19219);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__19221__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__19222 = y;
var G__19223 = cljs.core.first(more);
var G__19224 = cljs.core.next(more);
x = G__19222;
y = G__19223;
more = G__19224;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__19221 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19225__i = 0, G__19225__a = new Array(arguments.length -  2);
while (G__19225__i < G__19225__a.length) {G__19225__a[G__19225__i] = arguments[G__19225__i + 2]; ++G__19225__i;}
  more = new cljs.core.IndexedSeq(G__19225__a,0);
} 
return G__19221__delegate.call(this,x,y,more);};
G__19221.cljs$lang$maxFixedArity = 2;
G__19221.cljs$lang$applyTo = (function (arglist__19226){
var x = cljs.core.first(arglist__19226);
arglist__19226 = cljs.core.next(arglist__19226);
var y = cljs.core.first(arglist__19226);
var more = cljs.core.rest(arglist__19226);
return G__19221__delegate(x,y,more);
});
G__19221.cljs$core$IFn$_invoke$arity$variadic = G__19221__delegate;
return G__19221;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__19227 = null;
if (arguments.length > 2) {
var G__19228__i = 0, G__19228__a = new Array(arguments.length -  2);
while (G__19228__i < G__19228__a.length) {G__19228__a[G__19228__i] = arguments[G__19228__i + 2]; ++G__19228__i;}
G__19227 = new cljs.core.IndexedSeq(G__19228__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19227);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__19229__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__19230 = y;
var G__19231 = cljs.core.first(more);
var G__19232 = cljs.core.next(more);
x = G__19230;
y = G__19231;
more = G__19232;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__19229 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19233__i = 0, G__19233__a = new Array(arguments.length -  2);
while (G__19233__i < G__19233__a.length) {G__19233__a[G__19233__i] = arguments[G__19233__i + 2]; ++G__19233__i;}
  more = new cljs.core.IndexedSeq(G__19233__a,0);
} 
return G__19229__delegate.call(this,x,y,more);};
G__19229.cljs$lang$maxFixedArity = 2;
G__19229.cljs$lang$applyTo = (function (arglist__19234){
var x = cljs.core.first(arglist__19234);
arglist__19234 = cljs.core.next(arglist__19234);
var y = cljs.core.first(arglist__19234);
var more = cljs.core.rest(arglist__19234);
return G__19229__delegate(x,y,more);
});
G__19229.cljs$core$IFn$_invoke$arity$variadic = G__19229__delegate;
return G__19229;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__19235 = null;
if (arguments.length > 2) {
var G__19236__i = 0, G__19236__a = new Array(arguments.length -  2);
while (G__19236__i < G__19236__a.length) {G__19236__a[G__19236__i] = arguments[G__19236__i + 2]; ++G__19236__i;}
G__19235 = new cljs.core.IndexedSeq(G__19236__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19235);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__4239__auto__ = x;
var y__4240__auto__ = y;
return ((x__4239__auto__ > y__4240__auto__) ? x__4239__auto__ : y__4240__auto__);
});
var max__3 = (function() { 
var G__19237__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__4239__auto__ = x;
var y__4240__auto__ = y;
return ((x__4239__auto__ > y__4240__auto__) ? x__4239__auto__ : y__4240__auto__);
})(),more);
};
var G__19237 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19238__i = 0, G__19238__a = new Array(arguments.length -  2);
while (G__19238__i < G__19238__a.length) {G__19238__a[G__19238__i] = arguments[G__19238__i + 2]; ++G__19238__i;}
  more = new cljs.core.IndexedSeq(G__19238__a,0);
} 
return G__19237__delegate.call(this,x,y,more);};
G__19237.cljs$lang$maxFixedArity = 2;
G__19237.cljs$lang$applyTo = (function (arglist__19239){
var x = cljs.core.first(arglist__19239);
arglist__19239 = cljs.core.next(arglist__19239);
var y = cljs.core.first(arglist__19239);
var more = cljs.core.rest(arglist__19239);
return G__19237__delegate(x,y,more);
});
G__19237.cljs$core$IFn$_invoke$arity$variadic = G__19237__delegate;
return G__19237;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__19240 = null;
if (arguments.length > 2) {
var G__19241__i = 0, G__19241__a = new Array(arguments.length -  2);
while (G__19241__i < G__19241__a.length) {G__19241__a[G__19241__i] = arguments[G__19241__i + 2]; ++G__19241__i;}
G__19240 = new cljs.core.IndexedSeq(G__19241__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19240);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__4246__auto__ = x;
var y__4247__auto__ = y;
return ((x__4246__auto__ < y__4247__auto__) ? x__4246__auto__ : y__4247__auto__);
});
var min__3 = (function() { 
var G__19242__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__4246__auto__ = x;
var y__4247__auto__ = y;
return ((x__4246__auto__ < y__4247__auto__) ? x__4246__auto__ : y__4247__auto__);
})(),more);
};
var G__19242 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19243__i = 0, G__19243__a = new Array(arguments.length -  2);
while (G__19243__i < G__19243__a.length) {G__19243__a[G__19243__i] = arguments[G__19243__i + 2]; ++G__19243__i;}
  more = new cljs.core.IndexedSeq(G__19243__a,0);
} 
return G__19242__delegate.call(this,x,y,more);};
G__19242.cljs$lang$maxFixedArity = 2;
G__19242.cljs$lang$applyTo = (function (arglist__19244){
var x = cljs.core.first(arglist__19244);
arglist__19244 = cljs.core.next(arglist__19244);
var y = cljs.core.first(arglist__19244);
var more = cljs.core.rest(arglist__19244);
return G__19242__delegate(x,y,more);
});
G__19242.cljs$core$IFn$_invoke$arity$variadic = G__19242__delegate;
return G__19242;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__19245 = null;
if (arguments.length > 2) {
var G__19246__i = 0, G__19246__a = new Array(arguments.length -  2);
while (G__19246__i < G__19246__a.length) {G__19246__a[G__19246__i] = arguments[G__19246__i + 2]; ++G__19246__i;}
G__19245 = new cljs.core.IndexedSeq(G__19246__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19245);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__19247__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__19247 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19248__i = 0, G__19248__a = new Array(arguments.length -  2);
while (G__19248__i < G__19248__a.length) {G__19248__a[G__19248__i] = arguments[G__19248__i + 2]; ++G__19248__i;}
  more = new cljs.core.IndexedSeq(G__19248__a,0);
} 
return G__19247__delegate.call(this,x,y,more);};
G__19247.cljs$lang$maxFixedArity = 2;
G__19247.cljs$lang$applyTo = (function (arglist__19249){
var x = cljs.core.first(arglist__19249);
arglist__19249 = cljs.core.next(arglist__19249);
var y = cljs.core.first(arglist__19249);
var more = cljs.core.rest(arglist__19249);
return G__19247__delegate(x,y,more);
});
G__19247.cljs$core$IFn$_invoke$arity$variadic = G__19247__delegate;
return G__19247;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__19250 = null;
if (arguments.length > 2) {
var G__19251__i = 0, G__19251__a = new Array(arguments.length -  2);
while (G__19251__i < G__19251__a.length) {G__19251__a[G__19251__i] = arguments[G__19251__i + 2]; ++G__19251__i;}
G__19250 = new cljs.core.IndexedSeq(G__19251__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19250);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__19252__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__19252 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19253__i = 0, G__19253__a = new Array(arguments.length -  2);
while (G__19253__i < G__19253__a.length) {G__19253__a[G__19253__i] = arguments[G__19253__i + 2]; ++G__19253__i;}
  more = new cljs.core.IndexedSeq(G__19253__a,0);
} 
return G__19252__delegate.call(this,x,y,more);};
G__19252.cljs$lang$maxFixedArity = 2;
G__19252.cljs$lang$applyTo = (function (arglist__19254){
var x = cljs.core.first(arglist__19254);
arglist__19254 = cljs.core.next(arglist__19254);
var y = cljs.core.first(arglist__19254);
var more = cljs.core.rest(arglist__19254);
return G__19252__delegate(x,y,more);
});
G__19252.cljs$core$IFn$_invoke$arity$variadic = G__19252__delegate;
return G__19252;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__19255 = null;
if (arguments.length > 2) {
var G__19256__i = 0, G__19256__a = new Array(arguments.length -  2);
while (G__19256__i < G__19256__a.length) {G__19256__a[G__19256__i] = arguments[G__19256__i + 2]; ++G__19256__i;}
G__19255 = new cljs.core.IndexedSeq(G__19256__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19255);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__19261__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__19261 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19262__i = 0, G__19262__a = new Array(arguments.length -  2);
while (G__19262__i < G__19262__a.length) {G__19262__a[G__19262__i] = arguments[G__19262__i + 2]; ++G__19262__i;}
  more = new cljs.core.IndexedSeq(G__19262__a,0);
} 
return G__19261__delegate.call(this,x,y,more);};
G__19261.cljs$lang$maxFixedArity = 2;
G__19261.cljs$lang$applyTo = (function (arglist__19263){
var x = cljs.core.first(arglist__19263);
arglist__19263 = cljs.core.next(arglist__19263);
var y = cljs.core.first(arglist__19263);
var more = cljs.core.rest(arglist__19263);
return G__19261__delegate(x,y,more);
});
G__19261.cljs$core$IFn$_invoke$arity$variadic = G__19261__delegate;
return G__19261;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__19264 = null;
if (arguments.length > 2) {
var G__19265__i = 0, G__19265__a = new Array(arguments.length -  2);
while (G__19265__i < G__19265__a.length) {G__19265__a[G__19265__i] = arguments[G__19265__i + 2]; ++G__19265__i;}
G__19264 = new cljs.core.IndexedSeq(G__19265__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19264);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__19266__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__19266 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19267__i = 0, G__19267__a = new Array(arguments.length -  2);
while (G__19267__i < G__19267__a.length) {G__19267__a[G__19267__i] = arguments[G__19267__i + 2]; ++G__19267__i;}
  more = new cljs.core.IndexedSeq(G__19267__a,0);
} 
return G__19266__delegate.call(this,x,y,more);};
G__19266.cljs$lang$maxFixedArity = 2;
G__19266.cljs$lang$applyTo = (function (arglist__19268){
var x = cljs.core.first(arglist__19268);
arglist__19268 = cljs.core.next(arglist__19268);
var y = cljs.core.first(arglist__19268);
var more = cljs.core.rest(arglist__19268);
return G__19266__delegate(x,y,more);
});
G__19266.cljs$core$IFn$_invoke$arity$variadic = G__19266__delegate;
return G__19266;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__19269 = null;
if (arguments.length > 2) {
var G__19270__i = 0, G__19270__a = new Array(arguments.length -  2);
while (G__19270__i < G__19270__a.length) {G__19270__a[G__19270__i] = arguments[G__19270__i + 2]; ++G__19270__i;}
G__19269 = new cljs.core.IndexedSeq(G__19270__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19269);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__19271__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__19271 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19272__i = 0, G__19272__a = new Array(arguments.length -  2);
while (G__19272__i < G__19272__a.length) {G__19272__a[G__19272__i] = arguments[G__19272__i + 2]; ++G__19272__i;}
  more = new cljs.core.IndexedSeq(G__19272__a,0);
} 
return G__19271__delegate.call(this,x,y,more);};
G__19271.cljs$lang$maxFixedArity = 2;
G__19271.cljs$lang$applyTo = (function (arglist__19273){
var x = cljs.core.first(arglist__19273);
arglist__19273 = cljs.core.next(arglist__19273);
var y = cljs.core.first(arglist__19273);
var more = cljs.core.rest(arglist__19273);
return G__19271__delegate(x,y,more);
});
G__19271.cljs$core$IFn$_invoke$arity$variadic = G__19271__delegate;
return G__19271;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__19274 = null;
if (arguments.length > 2) {
var G__19275__i = 0, G__19275__a = new Array(arguments.length -  2);
while (G__19275__i < G__19275__a.length) {G__19275__a[G__19275__i] = arguments[G__19275__i + 2]; ++G__19275__i;}
G__19274 = new cljs.core.IndexedSeq(G__19275__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19274);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__19278 = x;
var G__19279 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__19278,G__19279) : cljs.core.mod.call(null,G__19278,G__19279));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__19280__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__19280 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19281__i = 0, G__19281__a = new Array(arguments.length -  2);
while (G__19281__i < G__19281__a.length) {G__19281__a[G__19281__i] = arguments[G__19281__i + 2]; ++G__19281__i;}
  more = new cljs.core.IndexedSeq(G__19281__a,0);
} 
return G__19280__delegate.call(this,x,y,more);};
G__19280.cljs$lang$maxFixedArity = 2;
G__19280.cljs$lang$applyTo = (function (arglist__19282){
var x = cljs.core.first(arglist__19282);
arglist__19282 = cljs.core.next(arglist__19282);
var y = cljs.core.first(arglist__19282);
var more = cljs.core.rest(arglist__19282);
return G__19280__delegate(x,y,more);
});
G__19280.cljs$core$IFn$_invoke$arity$variadic = G__19280__delegate;
return G__19280;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__19283 = null;
if (arguments.length > 2) {
var G__19284__i = 0, G__19284__a = new Array(arguments.length -  2);
while (G__19284__i < G__19284__a.length) {G__19284__a[G__19284__i] = arguments[G__19284__i + 2]; ++G__19284__i;}
G__19283 = new cljs.core.IndexedSeq(G__19284__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19283);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__19285__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__19285 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19286__i = 0, G__19286__a = new Array(arguments.length -  2);
while (G__19286__i < G__19286__a.length) {G__19286__a[G__19286__i] = arguments[G__19286__i + 2]; ++G__19286__i;}
  more = new cljs.core.IndexedSeq(G__19286__a,0);
} 
return G__19285__delegate.call(this,x,y,more);};
G__19285.cljs$lang$maxFixedArity = 2;
G__19285.cljs$lang$applyTo = (function (arglist__19287){
var x = cljs.core.first(arglist__19287);
arglist__19287 = cljs.core.next(arglist__19287);
var y = cljs.core.first(arglist__19287);
var more = cljs.core.rest(arglist__19287);
return G__19285__delegate(x,y,more);
});
G__19285.cljs$core$IFn$_invoke$arity$variadic = G__19285__delegate;
return G__19285;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__19288 = null;
if (arguments.length > 2) {
var G__19289__i = 0, G__19289__a = new Array(arguments.length -  2);
while (G__19289__i < G__19289__a.length) {G__19289__a[G__19289__i] = arguments[G__19289__i + 2]; ++G__19289__i;}
G__19288 = new cljs.core.IndexedSeq(G__19289__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19288);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__19292 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__19292) : Math.floor.call(null,G__19292));
} else {
var G__19293 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__19293) : Math.ceil.call(null,G__19293));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__19294__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__19294 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19295__i = 0, G__19295__a = new Array(arguments.length -  2);
while (G__19295__i < G__19295__a.length) {G__19295__a[G__19295__i] = arguments[G__19295__i + 2]; ++G__19295__i;}
  more = new cljs.core.IndexedSeq(G__19295__a,0);
} 
return G__19294__delegate.call(this,x,y,more);};
G__19294.cljs$lang$maxFixedArity = 2;
G__19294.cljs$lang$applyTo = (function (arglist__19296){
var x = cljs.core.first(arglist__19296);
arglist__19296 = cljs.core.next(arglist__19296);
var y = cljs.core.first(arglist__19296);
var more = cljs.core.rest(arglist__19296);
return G__19294__delegate(x,y,more);
});
G__19294.cljs$core$IFn$_invoke$arity$variadic = G__19294__delegate;
return G__19294;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__19297 = null;
if (arguments.length > 2) {
var G__19298__i = 0, G__19298__a = new Array(arguments.length -  2);
while (G__19298__i < G__19298__a.length) {G__19298__a[G__19298__i] = arguments[G__19298__i + 2]; ++G__19298__i;}
G__19297 = new cljs.core.IndexedSeq(G__19298__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19297);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__19299__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__19299 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19300__i = 0, G__19300__a = new Array(arguments.length -  2);
while (G__19300__i < G__19300__a.length) {G__19300__a[G__19300__i] = arguments[G__19300__i + 2]; ++G__19300__i;}
  more = new cljs.core.IndexedSeq(G__19300__a,0);
} 
return G__19299__delegate.call(this,x,y,more);};
G__19299.cljs$lang$maxFixedArity = 2;
G__19299.cljs$lang$applyTo = (function (arglist__19301){
var x = cljs.core.first(arglist__19301);
arglist__19301 = cljs.core.next(arglist__19301);
var y = cljs.core.first(arglist__19301);
var more = cljs.core.rest(arglist__19301);
return G__19299__delegate(x,y,more);
});
G__19299.cljs$core$IFn$_invoke$arity$variadic = G__19299__delegate;
return G__19299;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__19302 = null;
if (arguments.length > 2) {
var G__19303__i = 0, G__19303__a = new Array(arguments.length -  2);
while (G__19303__i < G__19303__a.length) {G__19303__a[G__19303__i] = arguments[G__19303__i + 2]; ++G__19303__i;}
G__19302 = new cljs.core.IndexedSeq(G__19303__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19302);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__19304__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__19304 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19305__i = 0, G__19305__a = new Array(arguments.length -  2);
while (G__19305__i < G__19305__a.length) {G__19305__a[G__19305__i] = arguments[G__19305__i + 2]; ++G__19305__i;}
  more = new cljs.core.IndexedSeq(G__19305__a,0);
} 
return G__19304__delegate.call(this,x,y,more);};
G__19304.cljs$lang$maxFixedArity = 2;
G__19304.cljs$lang$applyTo = (function (arglist__19306){
var x = cljs.core.first(arglist__19306);
arglist__19306 = cljs.core.next(arglist__19306);
var y = cljs.core.first(arglist__19306);
var more = cljs.core.rest(arglist__19306);
return G__19304__delegate(x,y,more);
});
G__19304.cljs$core$IFn$_invoke$arity$variadic = G__19304__delegate;
return G__19304;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__19307 = null;
if (arguments.length > 2) {
var G__19308__i = 0, G__19308__a = new Array(arguments.length -  2);
while (G__19308__i < G__19308__a.length) {G__19308__a[G__19308__i] = arguments[G__19308__i + 2]; ++G__19308__i;}
G__19307 = new cljs.core.IndexedSeq(G__19308__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19307);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__19309__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__19309 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19310__i = 0, G__19310__a = new Array(arguments.length -  2);
while (G__19310__i < G__19310__a.length) {G__19310__a[G__19310__i] = arguments[G__19310__i + 2]; ++G__19310__i;}
  more = new cljs.core.IndexedSeq(G__19310__a,0);
} 
return G__19309__delegate.call(this,x,y,more);};
G__19309.cljs$lang$maxFixedArity = 2;
G__19309.cljs$lang$applyTo = (function (arglist__19311){
var x = cljs.core.first(arglist__19311);
arglist__19311 = cljs.core.next(arglist__19311);
var y = cljs.core.first(arglist__19311);
var more = cljs.core.rest(arglist__19311);
return G__19309__delegate(x,y,more);
});
G__19309.cljs$core$IFn$_invoke$arity$variadic = G__19309__delegate;
return G__19309;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__19312 = null;
if (arguments.length > 2) {
var G__19313__i = 0, G__19313__a = new Array(arguments.length -  2);
while (G__19313__i < G__19313__a.length) {G__19313__a[G__19313__i] = arguments[G__19313__i + 2]; ++G__19313__i;}
G__19312 = new cljs.core.IndexedSeq(G__19313__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19312);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__19318__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__19319 = y;
var G__19320 = cljs.core.first(more);
var G__19321 = cljs.core.next(more);
x = G__19319;
y = G__19320;
more = G__19321;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__19318 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19322__i = 0, G__19322__a = new Array(arguments.length -  2);
while (G__19322__i < G__19322__a.length) {G__19322__a[G__19322__i] = arguments[G__19322__i + 2]; ++G__19322__i;}
  more = new cljs.core.IndexedSeq(G__19322__a,0);
} 
return G__19318__delegate.call(this,x,y,more);};
G__19318.cljs$lang$maxFixedArity = 2;
G__19318.cljs$lang$applyTo = (function (arglist__19323){
var x = cljs.core.first(arglist__19323);
arglist__19323 = cljs.core.next(arglist__19323);
var y = cljs.core.first(arglist__19323);
var more = cljs.core.rest(arglist__19323);
return G__19318__delegate(x,y,more);
});
G__19318.cljs$core$IFn$_invoke$arity$variadic = G__19318__delegate;
return G__19318;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__19324 = null;
if (arguments.length > 2) {
var G__19325__i = 0, G__19325__a = new Array(arguments.length -  2);
while (G__19325__i < G__19325__a.length) {G__19325__a[G__19325__i] = arguments[G__19325__i + 2]; ++G__19325__i;}
G__19324 = new cljs.core.IndexedSeq(G__19325__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19324);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__19326 = (n__$1 - (1));
var G__19327 = cljs.core.next(xs);
n__$1 = G__19326;
xs = G__19327;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__19331 = x;
return goog.string.buildString(G__19331);
}
});
var str__2 = (function() { 
var G__19332__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__19333 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__19334 = cljs.core.next(more);
sb = G__19333;
more = G__19334;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__19332 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__19335__i = 0, G__19335__a = new Array(arguments.length -  1);
while (G__19335__i < G__19335__a.length) {G__19335__a[G__19335__i] = arguments[G__19335__i + 1]; ++G__19335__i;}
  ys = new cljs.core.IndexedSeq(G__19335__a,0);
} 
return G__19332__delegate.call(this,x,ys);};
G__19332.cljs$lang$maxFixedArity = 1;
G__19332.cljs$lang$applyTo = (function (arglist__19336){
var x = cljs.core.first(arglist__19336);
var ys = cljs.core.rest(arglist__19336);
return G__19332__delegate(x,ys);
});
G__19332.cljs$core$IFn$_invoke$arity$variadic = G__19332__delegate;
return G__19332;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__19337 = null;
if (arguments.length > 1) {
var G__19338__i = 0, G__19338__a = new Array(arguments.length -  1);
while (G__19338__i < G__19338__a.length) {G__19338__a[G__19338__i] = arguments[G__19338__i + 1]; ++G__19338__i;}
G__19337 = new cljs.core.IndexedSeq(G__19338__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__19337);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__19339 = cljs.core.next(xs);
var G__19340 = cljs.core.next(ys);
xs = G__19339;
ys = G__19340;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__19341 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__19342 = cljs.core.next(s);
res = G__19341;
s = G__19342;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__19347 = ((h + (cljs.core.hash((function (){var G__19345 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__19345) : cljs.core.key.call(null,G__19345));
})()) ^ cljs.core.hash((function (){var G__19346 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__19346) : cljs.core.val.call(null,G__19346));
})()))) % (4503599627370496));
var G__19348 = cljs.core.next(s);
h = G__19347;
s = G__19348;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__19349 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__19350 = cljs.core.next(s__$1);
h = G__19349;
s__$1 = G__19350;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__19361_19371 = cljs.core.seq(fn_map);
var chunk__19362_19372 = null;
var count__19363_19373 = (0);
var i__19364_19374 = (0);
while(true){
if((i__19364_19374 < count__19363_19373)){
var vec__19365_19375 = chunk__19362_19372.cljs$core$IIndexed$_nth$arity$2(null,i__19364_19374);
var key_name_19376 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19365_19375,(0),null);
var f_19377 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19365_19375,(1),null);
var str_name_19378 = (function (){var G__19366 = key_name_19376;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__19366) : cljs.core.name.call(null,G__19366));
})();
(obj[str_name_19378] = f_19377);

var G__19379 = seq__19361_19371;
var G__19380 = chunk__19362_19372;
var G__19381 = count__19363_19373;
var G__19382 = (i__19364_19374 + (1));
seq__19361_19371 = G__19379;
chunk__19362_19372 = G__19380;
count__19363_19373 = G__19381;
i__19364_19374 = G__19382;
continue;
} else {
var temp__4126__auto___19383 = cljs.core.seq(seq__19361_19371);
if(temp__4126__auto___19383){
var seq__19361_19384__$1 = temp__4126__auto___19383;
if(cljs.core.chunked_seq_QMARK_(seq__19361_19384__$1)){
var c__4709__auto___19385 = (function (){var G__19367 = seq__19361_19384__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__19367) : cljs.core.chunk_first.call(null,G__19367));
})();
var G__19386 = (function (){var G__19368 = seq__19361_19384__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__19368) : cljs.core.chunk_rest.call(null,G__19368));
})();
var G__19387 = c__4709__auto___19385;
var G__19388 = cljs.core.count(c__4709__auto___19385);
var G__19389 = (0);
seq__19361_19371 = G__19386;
chunk__19362_19372 = G__19387;
count__19363_19373 = G__19388;
i__19364_19374 = G__19389;
continue;
} else {
var vec__19369_19390 = cljs.core.first(seq__19361_19384__$1);
var key_name_19391 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19369_19390,(0),null);
var f_19392 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19369_19390,(1),null);
var str_name_19393 = (function (){var G__19370 = key_name_19391;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__19370) : cljs.core.name.call(null,G__19370));
})();
(obj[str_name_19393] = f_19392);

var G__19394 = cljs.core.next(seq__19361_19384__$1);
var G__19395 = null;
var G__19396 = (0);
var G__19397 = (0);
seq__19361_19371 = G__19394;
chunk__19362_19372 = G__19395;
count__19363_19373 = G__19396;
i__19364_19374 = G__19397;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4343__auto__ = self__.__hash;
if(!((h__4343__auto__ == null))){
return h__4343__auto__;
} else {
var h__4343__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4343__auto____$1;

return h__4343__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4900__auto__ = this;
return cljs.core.es6_iterator(this__4900__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4900__auto__ = this;
return cljs.core.es6_iterator(this__4900__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__19399 = coll;
if(G__19399){
var bit__4603__auto__ = (G__19399.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__4603__auto__) || (G__19399.cljs$core$IReversible$)){
return true;
} else {
if((!G__19399.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__19399);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__19399);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__19400 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__19400;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__19401 = (i - (1));
var G__19402 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__19401;
r = G__19402;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__19403__i = 0, G__19403__a = new Array(arguments.length -  0);
while (G__19403__i < G__19403__a.length) {G__19403__a[G__19403__i] = arguments[G__19403__i + 0]; ++G__19403__i;}
  xs = new cljs.core.IndexedSeq(G__19403__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__19404){
var xs = cljs.core.seq(arglist__19404);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4343__auto__ = self__.__hash;
if(!((h__4343__auto__ == null))){
return h__4343__auto__;
} else {
var h__4343__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4343__auto____$1;

return h__4343__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4900__auto__ = this;
return cljs.core.es6_iterator(this__4900__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__3922__auto__ = (coll == null);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var G__19408 = coll;
if(G__19408){
var bit__4596__auto__ = (G__19408.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4596__auto__) || (G__19408.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__19410 = x;
if(G__19410){
var bit__4603__auto__ = (G__19410.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__4603__auto__) || (G__19410.cljs$core$IList$)){
return true;
} else {
if((!G__19410.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__19410);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__19410);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3910__auto__ = cljs.core.not(a.ns);
if(and__3910__auto__){
return b.ns;
} else {
return and__3910__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__19417 = a.ns;
var G__19418 = b.ns;
return goog.array.defaultCompare(G__19417,G__19418);
})();
if(((0) === nsc)){
var G__19419 = a.name;
var G__19420 = b.name;
return goog.array.defaultCompare(G__19419,G__19420);
} else {
return nsc;
}
}
} else {
var G__19421 = a.name;
var G__19422 = b.name;
return goog.array.defaultCompare(G__19421,G__19422);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__4343__auto__ = self__._hash;
if(!((h__4343__auto__ == null))){
return h__4343__auto__;
} else {
var h__4343__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__4343__auto____$1;

return h__4343__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__19424 = null;
var G__19424__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__19424__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__19424 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__19424__2.call(this,self__,coll);
case 3:
return G__19424__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19424.cljs$core$IFn$_invoke$arity$2 = G__19424__2;
G__19424.cljs$core$IFn$_invoke$arity$3 = G__19424__3;
return G__19424;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args19423){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args19423)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__19426 = x;
if(G__19426){
var bit__4596__auto__ = (G__19426.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4596__auto__) || (G__19426.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__19428 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__19428) : cljs.core.name.call(null,G__19428));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4343__auto__ = self__.__hash;
if(!((h__4343__auto__ == null))){
return h__4343__auto__;
} else {
var h__4343__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4343__auto____$1;

return h__4343__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__19429 = ls.sval();
ls = G__19429;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4900__auto__ = this;
return cljs.core.es6_iterator(this__4900__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4343__auto__ = self__.__hash;
if(!((h__4343__auto__ == null))){
return h__4343__auto__;
} else {
var h__4343__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4343__auto____$1;

return h__4343__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4900__auto__ = this;
return cljs.core.es6_iterator(this__4900__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__19431 = s;
if(G__19431){
var bit__4596__auto__ = (G__19431.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__4596__auto__) || (G__19431.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__19432 = cljs.core.next(s__$1);
s__$1 = G__19432;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_19433 = (0);
var xs_19434 = cljs.core.seq(coll);
while(true){
if(xs_19434){
(ret[i_19433] = cljs.core.to_array(cljs.core.first(xs_19434)));

var G__19435 = (i_19433 + (1));
var G__19436 = cljs.core.next(xs_19434);
i_19433 = G__19435;
xs_19434 = G__19436;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__19439 = (i + (1));
var G__19440 = cljs.core.next(s__$1);
i = G__19439;
s__$1 = G__19440;
continue;
} else {
return a;
}
break;
}
} else {
var n__4809__auto___19441 = size;
var i_19442 = (0);
while(true){
if((i_19442 < n__4809__auto___19441)){
(a[i_19442] = init_val_or_seq);

var G__19443 = (i_19442 + (1));
i_19442 = G__19443;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__19446 = (i + (1));
var G__19447 = cljs.core.next(s__$1);
i = G__19446;
s__$1 = G__19447;
continue;
} else {
return a;
}
break;
}
} else {
var n__4809__auto___19448 = size;
var i_19449 = (0);
while(true){
if((i_19449 < n__4809__auto___19448)){
(a[i_19449] = init_val_or_seq);

var G__19450 = (i_19449 + (1));
i_19449 = G__19450;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__19453 = (i + (1));
var G__19454 = cljs.core.next(s__$1);
i = G__19453;
s__$1 = G__19454;
continue;
} else {
return a;
}
break;
}
} else {
var n__4809__auto___19455 = size;
var i_19456 = (0);
while(true){
if((i_19456 < n__4809__auto___19455)){
(a[i_19456] = init_val_or_seq);

var G__19457 = (i_19456 + (1));
i_19456 = G__19457;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__19460 = (i + (1));
var G__19461 = cljs.core.next(s__$1);
i = G__19460;
s__$1 = G__19461;
continue;
} else {
return a;
}
break;
}
} else {
var n__4809__auto___19462 = size;
var i_19463 = (0);
while(true){
if((i_19463 < n__4809__auto___19462)){
(a[i_19463] = init_val_or_seq);

var G__19464 = (i_19463 + (1));
i_19463 = G__19464;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__19465 = cljs.core.next(s__$1);
var G__19466 = (i - (1));
var G__19467 = (sum + (1));
s__$1 = G__19465;
i = G__19466;
sum = G__19467;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__19487__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__19487 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__19488__i = 0, G__19488__a = new Array(arguments.length -  2);
while (G__19488__i < G__19488__a.length) {G__19488__a[G__19488__i] = arguments[G__19488__i + 2]; ++G__19488__i;}
  zs = new cljs.core.IndexedSeq(G__19488__a,0);
} 
return G__19487__delegate.call(this,x,y,zs);};
G__19487.cljs$lang$maxFixedArity = 2;
G__19487.cljs$lang$applyTo = (function (arglist__19489){
var x = cljs.core.first(arglist__19489);
arglist__19489 = cljs.core.next(arglist__19489);
var y = cljs.core.first(arglist__19489);
var zs = cljs.core.rest(arglist__19489);
return G__19487__delegate(x,y,zs);
});
G__19487.cljs$core$IFn$_invoke$arity$variadic = G__19487__delegate;
return G__19487;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__19490 = null;
if (arguments.length > 2) {
var G__19491__i = 0, G__19491__a = new Array(arguments.length -  2);
while (G__19491__i < G__19491__a.length) {G__19491__a[G__19491__i] = arguments[G__19491__i + 2]; ++G__19491__i;}
G__19490 = new cljs.core.IndexedSeq(G__19491__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19490);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__19492__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__19492 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__19493__i = 0, G__19493__a = new Array(arguments.length -  4);
while (G__19493__i < G__19493__a.length) {G__19493__a[G__19493__i] = arguments[G__19493__i + 4]; ++G__19493__i;}
  more = new cljs.core.IndexedSeq(G__19493__a,0);
} 
return G__19492__delegate.call(this,a,b,c,d,more);};
G__19492.cljs$lang$maxFixedArity = 4;
G__19492.cljs$lang$applyTo = (function (arglist__19494){
var a = cljs.core.first(arglist__19494);
arglist__19494 = cljs.core.next(arglist__19494);
var b = cljs.core.first(arglist__19494);
arglist__19494 = cljs.core.next(arglist__19494);
var c = cljs.core.first(arglist__19494);
arglist__19494 = cljs.core.next(arglist__19494);
var d = cljs.core.first(arglist__19494);
var more = cljs.core.rest(arglist__19494);
return G__19492__delegate(a,b,c,d,more);
});
G__19492.cljs$core$IFn$_invoke$arity$variadic = G__19492__delegate;
return G__19492;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__19495 = null;
if (arguments.length > 4) {
var G__19496__i = 0, G__19496__a = new Array(arguments.length -  4);
while (G__19496__i < G__19496__a.length) {G__19496__a[G__19496__i] = arguments[G__19496__i + 4]; ++G__19496__i;}
G__19495 = new cljs.core.IndexedSeq(G__19496__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__19495);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__19497__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__19498 = ntcoll;
var G__19499 = cljs.core.first(vals);
var G__19500 = cljs.core.next(vals);
tcoll = G__19498;
val = G__19499;
vals = G__19500;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__19497 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__19501__i = 0, G__19501__a = new Array(arguments.length -  2);
while (G__19501__i < G__19501__a.length) {G__19501__a[G__19501__i] = arguments[G__19501__i + 2]; ++G__19501__i;}
  vals = new cljs.core.IndexedSeq(G__19501__a,0);
} 
return G__19497__delegate.call(this,tcoll,val,vals);};
G__19497.cljs$lang$maxFixedArity = 2;
G__19497.cljs$lang$applyTo = (function (arglist__19502){
var tcoll = cljs.core.first(arglist__19502);
arglist__19502 = cljs.core.next(arglist__19502);
var val = cljs.core.first(arglist__19502);
var vals = cljs.core.rest(arglist__19502);
return G__19497__delegate(tcoll,val,vals);
});
G__19497.cljs$core$IFn$_invoke$arity$variadic = G__19497__delegate;
return G__19497;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__19503 = null;
if (arguments.length > 2) {
var G__19504__i = 0, G__19504__a = new Array(arguments.length -  2);
while (G__19504__i < G__19504__a.length) {G__19504__a[G__19504__i] = arguments[G__19504__i + 2]; ++G__19504__i;}
G__19503 = new cljs.core.IndexedSeq(G__19504__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__19503);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__19505__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__19506 = ntcoll;
var G__19507 = cljs.core.first(kvs);
var G__19508 = cljs.core.second(kvs);
var G__19509 = cljs.core.nnext(kvs);
tcoll = G__19506;
key = G__19507;
val = G__19508;
kvs = G__19509;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__19505 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__19510__i = 0, G__19510__a = new Array(arguments.length -  3);
while (G__19510__i < G__19510__a.length) {G__19510__a[G__19510__i] = arguments[G__19510__i + 3]; ++G__19510__i;}
  kvs = new cljs.core.IndexedSeq(G__19510__a,0);
} 
return G__19505__delegate.call(this,tcoll,key,val,kvs);};
G__19505.cljs$lang$maxFixedArity = 3;
G__19505.cljs$lang$applyTo = (function (arglist__19511){
var tcoll = cljs.core.first(arglist__19511);
arglist__19511 = cljs.core.next(arglist__19511);
var key = cljs.core.first(arglist__19511);
arglist__19511 = cljs.core.next(arglist__19511);
var val = cljs.core.first(arglist__19511);
var kvs = cljs.core.rest(arglist__19511);
return G__19505__delegate(tcoll,key,val,kvs);
});
G__19505.cljs$core$IFn$_invoke$arity$variadic = G__19505__delegate;
return G__19505;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__19512 = null;
if (arguments.length > 3) {
var G__19513__i = 0, G__19513__a = new Array(arguments.length -  3);
while (G__19513__i < G__19513__a.length) {G__19513__a[G__19513__i] = arguments[G__19513__i + 3]; ++G__19513__i;}
G__19512 = new cljs.core.IndexedSeq(G__19513__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__19512);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__19514__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__19515 = ntcoll;
var G__19516 = cljs.core.first(ks);
var G__19517 = cljs.core.next(ks);
tcoll = G__19515;
key = G__19516;
ks = G__19517;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__19514 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__19518__i = 0, G__19518__a = new Array(arguments.length -  2);
while (G__19518__i < G__19518__a.length) {G__19518__a[G__19518__i] = arguments[G__19518__i + 2]; ++G__19518__i;}
  ks = new cljs.core.IndexedSeq(G__19518__a,0);
} 
return G__19514__delegate.call(this,tcoll,key,ks);};
G__19514.cljs$lang$maxFixedArity = 2;
G__19514.cljs$lang$applyTo = (function (arglist__19519){
var tcoll = cljs.core.first(arglist__19519);
arglist__19519 = cljs.core.next(arglist__19519);
var key = cljs.core.first(arglist__19519);
var ks = cljs.core.rest(arglist__19519);
return G__19514__delegate(tcoll,key,ks);
});
G__19514.cljs$core$IFn$_invoke$arity$variadic = G__19514__delegate;
return G__19514;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__19520 = null;
if (arguments.length > 2) {
var G__19521__i = 0, G__19521__a = new Array(arguments.length -  2);
while (G__19521__i < G__19521__a.length) {G__19521__a[G__19521__i] = arguments[G__19521__i + 2]; ++G__19521__i;}
G__19520 = new cljs.core.IndexedSeq(G__19521__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__19520);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__19522__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__19523 = ntcoll;
var G__19524 = cljs.core.first(vals);
var G__19525 = cljs.core.next(vals);
tcoll = G__19523;
val = G__19524;
vals = G__19525;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__19522 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__19526__i = 0, G__19526__a = new Array(arguments.length -  2);
while (G__19526__i < G__19526__a.length) {G__19526__a[G__19526__i] = arguments[G__19526__i + 2]; ++G__19526__i;}
  vals = new cljs.core.IndexedSeq(G__19526__a,0);
} 
return G__19522__delegate.call(this,tcoll,val,vals);};
G__19522.cljs$lang$maxFixedArity = 2;
G__19522.cljs$lang$applyTo = (function (arglist__19527){
var tcoll = cljs.core.first(arglist__19527);
arglist__19527 = cljs.core.next(arglist__19527);
var val = cljs.core.first(arglist__19527);
var vals = cljs.core.rest(arglist__19527);
return G__19522__delegate(tcoll,val,vals);
});
G__19522.cljs$core$IFn$_invoke$arity$variadic = G__19522__delegate;
return G__19522;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__19528 = null;
if (arguments.length > 2) {
var G__19529__i = 0, G__19529__a = new Array(arguments.length -  2);
while (G__19529__i < G__19529__a.length) {G__19529__a[G__19529__i] = arguments[G__19529__i + 2]; ++G__19529__i;}
G__19528 = new cljs.core.IndexedSeq(G__19529__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__19528);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a4853 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a4853);
} else {
var G__19740 = a4853;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19740) : f.call(null,G__19740));
}
} else {
var b4854 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a4853,b4854);
} else {
var G__19741 = a4853;
var G__19742 = b4854;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19741,G__19742) : f.call(null,G__19741,G__19742));
}
} else {
var c4855 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a4853,b4854,c4855);
} else {
var G__19743 = a4853;
var G__19744 = b4854;
var G__19745 = c4855;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19743,G__19744,G__19745) : f.call(null,G__19743,G__19744,G__19745));
}
} else {
var d4856 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a4853,b4854,c4855,d4856);
} else {
var G__19746 = a4853;
var G__19747 = b4854;
var G__19748 = c4855;
var G__19749 = d4856;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__19746,G__19747,G__19748,G__19749) : f.call(null,G__19746,G__19747,G__19748,G__19749));
}
} else {
var e4857 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a4853,b4854,c4855,d4856,e4857);
} else {
var G__19750 = a4853;
var G__19751 = b4854;
var G__19752 = c4855;
var G__19753 = d4856;
var G__19754 = e4857;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__19750,G__19751,G__19752,G__19753,G__19754) : f.call(null,G__19750,G__19751,G__19752,G__19753,G__19754));
}
} else {
var f4858 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a4853,b4854,c4855,d4856,e4857,f4858);
} else {
var G__19755 = a4853;
var G__19756 = b4854;
var G__19757 = c4855;
var G__19758 = d4856;
var G__19759 = e4857;
var G__19760 = f4858;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__19755,G__19756,G__19757,G__19758,G__19759,G__19760) : f.call(null,G__19755,G__19756,G__19757,G__19758,G__19759,G__19760));
}
} else {
var g4859 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a4853,b4854,c4855,d4856,e4857,f4858,g4859);
} else {
var G__19761 = a4853;
var G__19762 = b4854;
var G__19763 = c4855;
var G__19764 = d4856;
var G__19765 = e4857;
var G__19766 = f4858;
var G__19767 = g4859;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__19761,G__19762,G__19763,G__19764,G__19765,G__19766,G__19767) : f.call(null,G__19761,G__19762,G__19763,G__19764,G__19765,G__19766,G__19767));
}
} else {
var h4860 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a4853,b4854,c4855,d4856,e4857,f4858,g4859,h4860);
} else {
var G__19768 = a4853;
var G__19769 = b4854;
var G__19770 = c4855;
var G__19771 = d4856;
var G__19772 = e4857;
var G__19773 = f4858;
var G__19774 = g4859;
var G__19775 = h4860;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__19768,G__19769,G__19770,G__19771,G__19772,G__19773,G__19774,G__19775) : f.call(null,G__19768,G__19769,G__19770,G__19771,G__19772,G__19773,G__19774,G__19775));
}
} else {
var i4861 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a4853,b4854,c4855,d4856,e4857,f4858,g4859,h4860,i4861);
} else {
var G__19776 = a4853;
var G__19777 = b4854;
var G__19778 = c4855;
var G__19779 = d4856;
var G__19780 = e4857;
var G__19781 = f4858;
var G__19782 = g4859;
var G__19783 = h4860;
var G__19784 = i4861;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__19776,G__19777,G__19778,G__19779,G__19780,G__19781,G__19782,G__19783,G__19784) : f.call(null,G__19776,G__19777,G__19778,G__19779,G__19780,G__19781,G__19782,G__19783,G__19784));
}
} else {
var j4862 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a4853,b4854,c4855,d4856,e4857,f4858,g4859,h4860,i4861,j4862);
} else {
var G__19785 = a4853;
var G__19786 = b4854;
var G__19787 = c4855;
var G__19788 = d4856;
var G__19789 = e4857;
var G__19790 = f4858;
var G__19791 = g4859;
var G__19792 = h4860;
var G__19793 = i4861;
var G__19794 = j4862;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__19785,G__19786,G__19787,G__19788,G__19789,G__19790,G__19791,G__19792,G__19793,G__19794) : f.call(null,G__19785,G__19786,G__19787,G__19788,G__19789,G__19790,G__19791,G__19792,G__19793,G__19794));
}
} else {
var k4863 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a4853,b4854,c4855,d4856,e4857,f4858,g4859,h4860,i4861,j4862,k4863);
} else {
var G__19795 = a4853;
var G__19796 = b4854;
var G__19797 = c4855;
var G__19798 = d4856;
var G__19799 = e4857;
var G__19800 = f4858;
var G__19801 = g4859;
var G__19802 = h4860;
var G__19803 = i4861;
var G__19804 = j4862;
var G__19805 = k4863;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__19795,G__19796,G__19797,G__19798,G__19799,G__19800,G__19801,G__19802,G__19803,G__19804,G__19805) : f.call(null,G__19795,G__19796,G__19797,G__19798,G__19799,G__19800,G__19801,G__19802,G__19803,G__19804,G__19805));
}
} else {
var l4864 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a4853,b4854,c4855,d4856,e4857,f4858,g4859,h4860,i4861,j4862,k4863,l4864);
} else {
var G__19806 = a4853;
var G__19807 = b4854;
var G__19808 = c4855;
var G__19809 = d4856;
var G__19810 = e4857;
var G__19811 = f4858;
var G__19812 = g4859;
var G__19813 = h4860;
var G__19814 = i4861;
var G__19815 = j4862;
var G__19816 = k4863;
var G__19817 = l4864;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__19806,G__19807,G__19808,G__19809,G__19810,G__19811,G__19812,G__19813,G__19814,G__19815,G__19816,G__19817) : f.call(null,G__19806,G__19807,G__19808,G__19809,G__19810,G__19811,G__19812,G__19813,G__19814,G__19815,G__19816,G__19817));
}
} else {
var m4865 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a4853,b4854,c4855,d4856,e4857,f4858,g4859,h4860,i4861,j4862,k4863,l4864,m4865);
} else {
var G__19818 = a4853;
var G__19819 = b4854;
var G__19820 = c4855;
var G__19821 = d4856;
var G__19822 = e4857;
var G__19823 = f4858;
var G__19824 = g4859;
var G__19825 = h4860;
var G__19826 = i4861;
var G__19827 = j4862;
var G__19828 = k4863;
var G__19829 = l4864;
var G__19830 = m4865;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__19818,G__19819,G__19820,G__19821,G__19822,G__19823,G__19824,G__19825,G__19826,G__19827,G__19828,G__19829,G__19830) : f.call(null,G__19818,G__19819,G__19820,G__19821,G__19822,G__19823,G__19824,G__19825,G__19826,G__19827,G__19828,G__19829,G__19830));
}
} else {
var n4866 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a4853,b4854,c4855,d4856,e4857,f4858,g4859,h4860,i4861,j4862,k4863,l4864,m4865,n4866);
} else {
var G__19831 = a4853;
var G__19832 = b4854;
var G__19833 = c4855;
var G__19834 = d4856;
var G__19835 = e4857;
var G__19836 = f4858;
var G__19837 = g4859;
var G__19838 = h4860;
var G__19839 = i4861;
var G__19840 = j4862;
var G__19841 = k4863;
var G__19842 = l4864;
var G__19843 = m4865;
var G__19844 = n4866;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__19831,G__19832,G__19833,G__19834,G__19835,G__19836,G__19837,G__19838,G__19839,G__19840,G__19841,G__19842,G__19843,G__19844) : f.call(null,G__19831,G__19832,G__19833,G__19834,G__19835,G__19836,G__19837,G__19838,G__19839,G__19840,G__19841,G__19842,G__19843,G__19844));
}
} else {
var o4867 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a4853,b4854,c4855,d4856,e4857,f4858,g4859,h4860,i4861,j4862,k4863,l4864,m4865,n4866,o4867);
} else {
var G__19845 = a4853;
var G__19846 = b4854;
var G__19847 = c4855;
var G__19848 = d4856;
var G__19849 = e4857;
var G__19850 = f4858;
var G__19851 = g4859;
var G__19852 = h4860;
var G__19853 = i4861;
var G__19854 = j4862;
var G__19855 = k4863;
var G__19856 = l4864;
var G__19857 = m4865;
var G__19858 = n4866;
var G__19859 = o4867;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__19845,G__19846,G__19847,G__19848,G__19849,G__19850,G__19851,G__19852,G__19853,G__19854,G__19855,G__19856,G__19857,G__19858,G__19859) : f.call(null,G__19845,G__19846,G__19847,G__19848,G__19849,G__19850,G__19851,G__19852,G__19853,G__19854,G__19855,G__19856,G__19857,G__19858,G__19859));
}
} else {
var p4868 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a4853,b4854,c4855,d4856,e4857,f4858,g4859,h4860,i4861,j4862,k4863,l4864,m4865,n4866,o4867,p4868);
} else {
var G__19860 = a4853;
var G__19861 = b4854;
var G__19862 = c4855;
var G__19863 = d4856;
var G__19864 = e4857;
var G__19865 = f4858;
var G__19866 = g4859;
var G__19867 = h4860;
var G__19868 = i4861;
var G__19869 = j4862;
var G__19870 = k4863;
var G__19871 = l4864;
var G__19872 = m4865;
var G__19873 = n4866;
var G__19874 = o4867;
var G__19875 = p4868;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__19860,G__19861,G__19862,G__19863,G__19864,G__19865,G__19866,G__19867,G__19868,G__19869,G__19870,G__19871,G__19872,G__19873,G__19874,G__19875) : f.call(null,G__19860,G__19861,G__19862,G__19863,G__19864,G__19865,G__19866,G__19867,G__19868,G__19869,G__19870,G__19871,G__19872,G__19873,G__19874,G__19875));
}
} else {
var q4869 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a4853,b4854,c4855,d4856,e4857,f4858,g4859,h4860,i4861,j4862,k4863,l4864,m4865,n4866,o4867,p4868,q4869);
} else {
var G__19876 = a4853;
var G__19877 = b4854;
var G__19878 = c4855;
var G__19879 = d4856;
var G__19880 = e4857;
var G__19881 = f4858;
var G__19882 = g4859;
var G__19883 = h4860;
var G__19884 = i4861;
var G__19885 = j4862;
var G__19886 = k4863;
var G__19887 = l4864;
var G__19888 = m4865;
var G__19889 = n4866;
var G__19890 = o4867;
var G__19891 = p4868;
var G__19892 = q4869;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__19876,G__19877,G__19878,G__19879,G__19880,G__19881,G__19882,G__19883,G__19884,G__19885,G__19886,G__19887,G__19888,G__19889,G__19890,G__19891,G__19892) : f.call(null,G__19876,G__19877,G__19878,G__19879,G__19880,G__19881,G__19882,G__19883,G__19884,G__19885,G__19886,G__19887,G__19888,G__19889,G__19890,G__19891,G__19892));
}
} else {
var r4870 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a4853,b4854,c4855,d4856,e4857,f4858,g4859,h4860,i4861,j4862,k4863,l4864,m4865,n4866,o4867,p4868,q4869,r4870);
} else {
var G__19893 = a4853;
var G__19894 = b4854;
var G__19895 = c4855;
var G__19896 = d4856;
var G__19897 = e4857;
var G__19898 = f4858;
var G__19899 = g4859;
var G__19900 = h4860;
var G__19901 = i4861;
var G__19902 = j4862;
var G__19903 = k4863;
var G__19904 = l4864;
var G__19905 = m4865;
var G__19906 = n4866;
var G__19907 = o4867;
var G__19908 = p4868;
var G__19909 = q4869;
var G__19910 = r4870;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__19893,G__19894,G__19895,G__19896,G__19897,G__19898,G__19899,G__19900,G__19901,G__19902,G__19903,G__19904,G__19905,G__19906,G__19907,G__19908,G__19909,G__19910) : f.call(null,G__19893,G__19894,G__19895,G__19896,G__19897,G__19898,G__19899,G__19900,G__19901,G__19902,G__19903,G__19904,G__19905,G__19906,G__19907,G__19908,G__19909,G__19910));
}
} else {
var s4871 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a4853,b4854,c4855,d4856,e4857,f4858,g4859,h4860,i4861,j4862,k4863,l4864,m4865,n4866,o4867,p4868,q4869,r4870,s4871);
} else {
var G__19911 = a4853;
var G__19912 = b4854;
var G__19913 = c4855;
var G__19914 = d4856;
var G__19915 = e4857;
var G__19916 = f4858;
var G__19917 = g4859;
var G__19918 = h4860;
var G__19919 = i4861;
var G__19920 = j4862;
var G__19921 = k4863;
var G__19922 = l4864;
var G__19923 = m4865;
var G__19924 = n4866;
var G__19925 = o4867;
var G__19926 = p4868;
var G__19927 = q4869;
var G__19928 = r4870;
var G__19929 = s4871;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__19911,G__19912,G__19913,G__19914,G__19915,G__19916,G__19917,G__19918,G__19919,G__19920,G__19921,G__19922,G__19923,G__19924,G__19925,G__19926,G__19927,G__19928,G__19929) : f.call(null,G__19911,G__19912,G__19913,G__19914,G__19915,G__19916,G__19917,G__19918,G__19919,G__19920,G__19921,G__19922,G__19923,G__19924,G__19925,G__19926,G__19927,G__19928,G__19929));
}
} else {
var t4872 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a4853,b4854,c4855,d4856,e4857,f4858,g4859,h4860,i4861,j4862,k4863,l4864,m4865,n4866,o4867,p4868,q4869,r4870,s4871,t4872);
} else {
var G__19930 = a4853;
var G__19931 = b4854;
var G__19932 = c4855;
var G__19933 = d4856;
var G__19934 = e4857;
var G__19935 = f4858;
var G__19936 = g4859;
var G__19937 = h4860;
var G__19938 = i4861;
var G__19939 = j4862;
var G__19940 = k4863;
var G__19941 = l4864;
var G__19942 = m4865;
var G__19943 = n4866;
var G__19944 = o4867;
var G__19945 = p4868;
var G__19946 = q4869;
var G__19947 = r4870;
var G__19948 = s4871;
var G__19949 = t4872;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__19930,G__19931,G__19932,G__19933,G__19934,G__19935,G__19936,G__19937,G__19938,G__19939,G__19940,G__19941,G__19942,G__19943,G__19944,G__19945,G__19946,G__19947,G__19948,G__19949) : f.call(null,G__19930,G__19931,G__19932,G__19933,G__19934,G__19935,G__19936,G__19937,G__19938,G__19939,G__19940,G__19941,G__19942,G__19943,G__19944,G__19945,G__19946,G__19947,G__19948,G__19949));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__19950__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__19950 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__19951__i = 0, G__19951__a = new Array(arguments.length -  5);
while (G__19951__i < G__19951__a.length) {G__19951__a[G__19951__i] = arguments[G__19951__i + 5]; ++G__19951__i;}
  args = new cljs.core.IndexedSeq(G__19951__a,0);
} 
return G__19950__delegate.call(this,f,a,b,c,d,args);};
G__19950.cljs$lang$maxFixedArity = 5;
G__19950.cljs$lang$applyTo = (function (arglist__19952){
var f = cljs.core.first(arglist__19952);
arglist__19952 = cljs.core.next(arglist__19952);
var a = cljs.core.first(arglist__19952);
arglist__19952 = cljs.core.next(arglist__19952);
var b = cljs.core.first(arglist__19952);
arglist__19952 = cljs.core.next(arglist__19952);
var c = cljs.core.first(arglist__19952);
arglist__19952 = cljs.core.next(arglist__19952);
var d = cljs.core.first(arglist__19952);
var args = cljs.core.rest(arglist__19952);
return G__19950__delegate(f,a,b,c,d,args);
});
G__19950.cljs$core$IFn$_invoke$arity$variadic = G__19950__delegate;
return G__19950;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__19953 = null;
if (arguments.length > 5) {
var G__19954__i = 0, G__19954__a = new Array(arguments.length -  5);
while (G__19954__i < G__19954__a.length) {G__19954__a[G__19954__i] = arguments[G__19954__i + 5]; ++G__19954__i;}
G__19953 = new cljs.core.IndexedSeq(G__19954__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__19953);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__19970 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19970) : f.call(null,G__19970));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__19971 = cljs.core.meta(obj);
var G__19972 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19971,G__19972) : f.call(null,G__19971,G__19972));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__19973 = cljs.core.meta(obj);
var G__19974 = a;
var G__19975 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19973,G__19974,G__19975) : f.call(null,G__19973,G__19974,G__19975));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__19976 = cljs.core.meta(obj);
var G__19977 = a;
var G__19978 = b;
var G__19979 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__19976,G__19977,G__19978,G__19979) : f.call(null,G__19976,G__19977,G__19978,G__19979));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__19980 = cljs.core.meta(obj);
var G__19981 = a;
var G__19982 = b;
var G__19983 = c;
var G__19984 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__19980,G__19981,G__19982,G__19983,G__19984) : f.call(null,G__19980,G__19981,G__19982,G__19983,G__19984));
})());
});
var vary_meta__7 = (function() { 
var G__19985__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__19985 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__19986__i = 0, G__19986__a = new Array(arguments.length -  6);
while (G__19986__i < G__19986__a.length) {G__19986__a[G__19986__i] = arguments[G__19986__i + 6]; ++G__19986__i;}
  args = new cljs.core.IndexedSeq(G__19986__a,0);
} 
return G__19985__delegate.call(this,obj,f,a,b,c,d,args);};
G__19985.cljs$lang$maxFixedArity = 6;
G__19985.cljs$lang$applyTo = (function (arglist__19987){
var obj = cljs.core.first(arglist__19987);
arglist__19987 = cljs.core.next(arglist__19987);
var f = cljs.core.first(arglist__19987);
arglist__19987 = cljs.core.next(arglist__19987);
var a = cljs.core.first(arglist__19987);
arglist__19987 = cljs.core.next(arglist__19987);
var b = cljs.core.first(arglist__19987);
arglist__19987 = cljs.core.next(arglist__19987);
var c = cljs.core.first(arglist__19987);
arglist__19987 = cljs.core.next(arglist__19987);
var d = cljs.core.first(arglist__19987);
var args = cljs.core.rest(arglist__19987);
return G__19985__delegate(obj,f,a,b,c,d,args);
});
G__19985.cljs$core$IFn$_invoke$arity$variadic = G__19985__delegate;
return G__19985;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__19988 = null;
if (arguments.length > 6) {
var G__19989__i = 0, G__19989__a = new Array(arguments.length -  6);
while (G__19989__i < G__19989__a.length) {G__19989__a[G__19989__i] = arguments[G__19989__i + 6]; ++G__19989__i;}
G__19988 = new cljs.core.IndexedSeq(G__19989__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__19988);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__19990__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__19990 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19991__i = 0, G__19991__a = new Array(arguments.length -  2);
while (G__19991__i < G__19991__a.length) {G__19991__a[G__19991__i] = arguments[G__19991__i + 2]; ++G__19991__i;}
  more = new cljs.core.IndexedSeq(G__19991__a,0);
} 
return G__19990__delegate.call(this,x,y,more);};
G__19990.cljs$lang$maxFixedArity = 2;
G__19990.cljs$lang$applyTo = (function (arglist__19992){
var x = cljs.core.first(arglist__19992);
arglist__19992 = cljs.core.next(arglist__19992);
var y = cljs.core.first(arglist__19992);
var more = cljs.core.rest(arglist__19992);
return G__19990__delegate(x,y,more);
});
G__19990.cljs$core$IFn$_invoke$arity$variadic = G__19990__delegate;
return G__19990;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__19993 = null;
if (arguments.length > 2) {
var G__19994__i = 0, G__19994__a = new Array(arguments.length -  2);
while (G__19994__i < G__19994__a.length) {G__19994__a[G__19994__i] = arguments[G__19994__i + 2]; ++G__19994__i;}
G__19993 = new cljs.core.IndexedSeq(G__19994__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19993);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t19998 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t19998 = (function (nil_iter,meta19999){
this.nil_iter = nil_iter;
this.meta19999 = meta19999;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t19998.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t19998.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t19998.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t19998.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_20000){
var self__ = this;
var _20000__$1 = this;
return self__.meta19999;
});

cljs.core.t19998.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_20000,meta19999__$1){
var self__ = this;
var _20000__$1 = this;
return (new cljs.core.t19998(self__.nil_iter,meta19999__$1));
});

cljs.core.t19998.cljs$lang$type = true;

cljs.core.t19998.cljs$lang$ctorStr = "cljs.core/t19998";

cljs.core.t19998.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/t19998");
});

cljs.core.__GT_t19998 = (function __GT_t19998(nil_iter__$1,meta19999){
return (new cljs.core.t19998(nil_iter__$1,meta19999));
});

}

return (new cljs.core.t19998(nil_iter,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"end-column","end-column",1425389514),54,new cljs.core.Keyword(null,"end-line","end-line",1837326455),3063,new cljs.core.Keyword(null,"column","column",2078222095),3,new cljs.core.Keyword(null,"line","line",212345235),3059,new cljs.core.Keyword(null,"file","file",-1269645878),"/Users/bencohen/henderson/out/cljs/core.cljs"], null)));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3910__auto__ = !((lt.stepper == null));
if(and__3910__auto__){
return self__.iter.hasNext();
} else {
return and__3910__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__20001 = lt;
var G__20002 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__20001,G__20002) : self__.xform.call(null,G__20001,G__20002));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__20003 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__20003) : self__.xform.call(null,G__20003));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__20005 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__20005) : xform.call(null,G__20005));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__20007 = cljs.core.next(iters__$1);
iters__$1 = G__20007;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__4809__auto___20008 = self__.iters.length;
var i_20009 = (0);
while(true){
if((i_20009 < n__4809__auto___20008)){
(self__.nexts[i_20009] = (self__.iters[i_20009]).next());

var G__20010 = (i_20009 + (1));
i_20009 = G__20010;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3910__auto__ = !((lt.stepper == null));
if(and__3910__auto__){
return this$.hasNext();
} else {
return and__3910__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__20006 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__20006) : self__.xform.call(null,G__20006));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__20015 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__20015) : xform.call(null,G__20015));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4900__auto__ = this;
return cljs.core.es6_iterator(this__4900__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__20016_20020 = cljs.core.seq(colls);
var chunk__20017_20021 = null;
var count__20018_20022 = (0);
var i__20019_20023 = (0);
while(true){
if((i__20019_20023 < count__20018_20022)){
var coll_20024 = chunk__20017_20021.cljs$core$IIndexed$_nth$arity$2(null,i__20019_20023);
iters.push(cljs.core.iter(coll_20024));

var G__20025 = seq__20016_20020;
var G__20026 = chunk__20017_20021;
var G__20027 = count__20018_20022;
var G__20028 = (i__20019_20023 + (1));
seq__20016_20020 = G__20025;
chunk__20017_20021 = G__20026;
count__20018_20022 = G__20027;
i__20019_20023 = G__20028;
continue;
} else {
var temp__4126__auto___20029 = cljs.core.seq(seq__20016_20020);
if(temp__4126__auto___20029){
var seq__20016_20030__$1 = temp__4126__auto___20029;
if(cljs.core.chunked_seq_QMARK_(seq__20016_20030__$1)){
var c__4709__auto___20031 = cljs.core.chunk_first(seq__20016_20030__$1);
var G__20032 = cljs.core.chunk_rest(seq__20016_20030__$1);
var G__20033 = c__4709__auto___20031;
var G__20034 = cljs.core.count(c__4709__auto___20031);
var G__20035 = (0);
seq__20016_20020 = G__20032;
chunk__20017_20021 = G__20033;
count__20018_20022 = G__20034;
i__20019_20023 = G__20035;
continue;
} else {
var coll_20036 = cljs.core.first(seq__20016_20030__$1);
iters.push(cljs.core.iter(coll_20036));

var G__20037 = cljs.core.next(seq__20016_20030__$1);
var G__20038 = null;
var G__20039 = (0);
var G__20040 = (0);
seq__20016_20020 = G__20037;
chunk__20017_20021 = G__20038;
count__20018_20022 = G__20039;
i__20019_20023 = G__20040;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__3922__auto__ = cljs.core.seq(coll);
if(or__3922__auto__){
return or__3922__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__20041__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__20041 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__20042__i = 0, G__20042__a = new Array(arguments.length -  2);
while (G__20042__i < G__20042__a.length) {G__20042__a[G__20042__i] = arguments[G__20042__i + 2]; ++G__20042__i;}
  colls = new cljs.core.IndexedSeq(G__20042__a,0);
} 
return G__20041__delegate.call(this,xform,coll,colls);};
G__20041.cljs$lang$maxFixedArity = 2;
G__20041.cljs$lang$applyTo = (function (arglist__20043){
var xform = cljs.core.first(arglist__20043);
arglist__20043 = cljs.core.next(arglist__20043);
var coll = cljs.core.first(arglist__20043);
var colls = cljs.core.rest(arglist__20043);
return G__20041__delegate(xform,coll,colls);
});
G__20041.cljs$core$IFn$_invoke$arity$variadic = G__20041__delegate;
return G__20041;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__20044 = null;
if (arguments.length > 2) {
var G__20045__i = 0, G__20045__a = new Array(arguments.length -  2);
while (G__20045__i < G__20045__a.length) {G__20045__a[G__20045__i] = arguments[G__20045__i + 2]; ++G__20045__i;}
G__20044 = new cljs.core.IndexedSeq(G__20045__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__20044);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__20047 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__20047) : pred.call(null,G__20047));
})())){
var G__20048 = pred;
var G__20049 = cljs.core.next(coll);
pred = G__20048;
coll = G__20049;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__3922__auto__ = (function (){var G__20053 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__20053) : pred.call(null,G__20053));
})();
if(cljs.core.truth_(or__3922__auto__)){
return or__3922__auto__;
} else {
var G__20054 = pred;
var G__20055 = cljs.core.next(coll);
pred = G__20054;
coll = G__20055;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__20062 = null;
var G__20062__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__20062__1 = (function (x){
return cljs.core.not((function (){var G__20059 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20059) : f.call(null,G__20059));
})());
});
var G__20062__2 = (function (x,y){
return cljs.core.not((function (){var G__20060 = x;
var G__20061 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20060,G__20061) : f.call(null,G__20060,G__20061));
})());
});
var G__20062__3 = (function() { 
var G__20063__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__20063 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__20064__i = 0, G__20064__a = new Array(arguments.length -  2);
while (G__20064__i < G__20064__a.length) {G__20064__a[G__20064__i] = arguments[G__20064__i + 2]; ++G__20064__i;}
  zs = new cljs.core.IndexedSeq(G__20064__a,0);
} 
return G__20063__delegate.call(this,x,y,zs);};
G__20063.cljs$lang$maxFixedArity = 2;
G__20063.cljs$lang$applyTo = (function (arglist__20065){
var x = cljs.core.first(arglist__20065);
arglist__20065 = cljs.core.next(arglist__20065);
var y = cljs.core.first(arglist__20065);
var zs = cljs.core.rest(arglist__20065);
return G__20063__delegate(x,y,zs);
});
G__20063.cljs$core$IFn$_invoke$arity$variadic = G__20063__delegate;
return G__20063;
})()
;
G__20062 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__20062__0.call(this);
case 1:
return G__20062__1.call(this,x);
case 2:
return G__20062__2.call(this,x,y);
default:
var G__20066 = null;
if (arguments.length > 2) {
var G__20067__i = 0, G__20067__a = new Array(arguments.length -  2);
while (G__20067__i < G__20067__a.length) {G__20067__a[G__20067__i] = arguments[G__20067__i + 2]; ++G__20067__i;}
G__20066 = new cljs.core.IndexedSeq(G__20067__a,0);
}
return G__20062__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20066);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20062.cljs$lang$maxFixedArity = 2;
G__20062.cljs$lang$applyTo = G__20062__3.cljs$lang$applyTo;
G__20062.cljs$core$IFn$_invoke$arity$0 = G__20062__0;
G__20062.cljs$core$IFn$_invoke$arity$1 = G__20062__1;
G__20062.cljs$core$IFn$_invoke$arity$2 = G__20062__2;
G__20062.cljs$core$IFn$_invoke$arity$variadic = G__20062__3.cljs$core$IFn$_invoke$arity$variadic;
return G__20062;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__20068__delegate = function (args){
return x;
};
var G__20068 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__20069__i = 0, G__20069__a = new Array(arguments.length -  0);
while (G__20069__i < G__20069__a.length) {G__20069__a[G__20069__i] = arguments[G__20069__i + 0]; ++G__20069__i;}
  args = new cljs.core.IndexedSeq(G__20069__a,0);
} 
return G__20068__delegate.call(this,args);};
G__20068.cljs$lang$maxFixedArity = 0;
G__20068.cljs$lang$applyTo = (function (arglist__20070){
var args = cljs.core.seq(arglist__20070);
return G__20068__delegate(args);
});
G__20068.cljs$core$IFn$_invoke$arity$variadic = G__20068__delegate;
return G__20068;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__20125 = null;
var G__20125__0 = (function (){
var G__20098 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20098) : f.call(null,G__20098));
});
var G__20125__1 = (function (x){
var G__20099 = (function (){var G__20100 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__20100) : g.call(null,G__20100));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20099) : f.call(null,G__20099));
});
var G__20125__2 = (function (x,y){
var G__20101 = (function (){var G__20102 = x;
var G__20103 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__20102,G__20103) : g.call(null,G__20102,G__20103));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20101) : f.call(null,G__20101));
});
var G__20125__3 = (function (x,y,z){
var G__20104 = (function (){var G__20105 = x;
var G__20106 = y;
var G__20107 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__20105,G__20106,G__20107) : g.call(null,G__20105,G__20106,G__20107));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20104) : f.call(null,G__20104));
});
var G__20125__4 = (function() { 
var G__20126__delegate = function (x,y,z,args){
var G__20108 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20108) : f.call(null,G__20108));
};
var G__20126 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__20127__i = 0, G__20127__a = new Array(arguments.length -  3);
while (G__20127__i < G__20127__a.length) {G__20127__a[G__20127__i] = arguments[G__20127__i + 3]; ++G__20127__i;}
  args = new cljs.core.IndexedSeq(G__20127__a,0);
} 
return G__20126__delegate.call(this,x,y,z,args);};
G__20126.cljs$lang$maxFixedArity = 3;
G__20126.cljs$lang$applyTo = (function (arglist__20128){
var x = cljs.core.first(arglist__20128);
arglist__20128 = cljs.core.next(arglist__20128);
var y = cljs.core.first(arglist__20128);
arglist__20128 = cljs.core.next(arglist__20128);
var z = cljs.core.first(arglist__20128);
var args = cljs.core.rest(arglist__20128);
return G__20126__delegate(x,y,z,args);
});
G__20126.cljs$core$IFn$_invoke$arity$variadic = G__20126__delegate;
return G__20126;
})()
;
G__20125 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__20125__0.call(this);
case 1:
return G__20125__1.call(this,x);
case 2:
return G__20125__2.call(this,x,y);
case 3:
return G__20125__3.call(this,x,y,z);
default:
var G__20129 = null;
if (arguments.length > 3) {
var G__20130__i = 0, G__20130__a = new Array(arguments.length -  3);
while (G__20130__i < G__20130__a.length) {G__20130__a[G__20130__i] = arguments[G__20130__i + 3]; ++G__20130__i;}
G__20129 = new cljs.core.IndexedSeq(G__20130__a,0);
}
return G__20125__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__20129);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20125.cljs$lang$maxFixedArity = 3;
G__20125.cljs$lang$applyTo = G__20125__4.cljs$lang$applyTo;
G__20125.cljs$core$IFn$_invoke$arity$0 = G__20125__0;
G__20125.cljs$core$IFn$_invoke$arity$1 = G__20125__1;
G__20125.cljs$core$IFn$_invoke$arity$2 = G__20125__2;
G__20125.cljs$core$IFn$_invoke$arity$3 = G__20125__3;
G__20125.cljs$core$IFn$_invoke$arity$variadic = G__20125__4.cljs$core$IFn$_invoke$arity$variadic;
return G__20125;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__20131 = null;
var G__20131__0 = (function (){
var G__20109 = (function (){var G__20110 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__20110) : g.call(null,G__20110));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20109) : f.call(null,G__20109));
});
var G__20131__1 = (function (x){
var G__20111 = (function (){var G__20112 = (function (){var G__20113 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__20113) : h.call(null,G__20113));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__20112) : g.call(null,G__20112));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20111) : f.call(null,G__20111));
});
var G__20131__2 = (function (x,y){
var G__20114 = (function (){var G__20115 = (function (){var G__20116 = x;
var G__20117 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__20116,G__20117) : h.call(null,G__20116,G__20117));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__20115) : g.call(null,G__20115));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20114) : f.call(null,G__20114));
});
var G__20131__3 = (function (x,y,z){
var G__20118 = (function (){var G__20119 = (function (){var G__20120 = x;
var G__20121 = y;
var G__20122 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__20120,G__20121,G__20122) : h.call(null,G__20120,G__20121,G__20122));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__20119) : g.call(null,G__20119));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20118) : f.call(null,G__20118));
});
var G__20131__4 = (function() { 
var G__20132__delegate = function (x,y,z,args){
var G__20123 = (function (){var G__20124 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__20124) : g.call(null,G__20124));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20123) : f.call(null,G__20123));
};
var G__20132 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__20133__i = 0, G__20133__a = new Array(arguments.length -  3);
while (G__20133__i < G__20133__a.length) {G__20133__a[G__20133__i] = arguments[G__20133__i + 3]; ++G__20133__i;}
  args = new cljs.core.IndexedSeq(G__20133__a,0);
} 
return G__20132__delegate.call(this,x,y,z,args);};
G__20132.cljs$lang$maxFixedArity = 3;
G__20132.cljs$lang$applyTo = (function (arglist__20134){
var x = cljs.core.first(arglist__20134);
arglist__20134 = cljs.core.next(arglist__20134);
var y = cljs.core.first(arglist__20134);
arglist__20134 = cljs.core.next(arglist__20134);
var z = cljs.core.first(arglist__20134);
var args = cljs.core.rest(arglist__20134);
return G__20132__delegate(x,y,z,args);
});
G__20132.cljs$core$IFn$_invoke$arity$variadic = G__20132__delegate;
return G__20132;
})()
;
G__20131 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__20131__0.call(this);
case 1:
return G__20131__1.call(this,x);
case 2:
return G__20131__2.call(this,x,y);
case 3:
return G__20131__3.call(this,x,y,z);
default:
var G__20135 = null;
if (arguments.length > 3) {
var G__20136__i = 0, G__20136__a = new Array(arguments.length -  3);
while (G__20136__i < G__20136__a.length) {G__20136__a[G__20136__i] = arguments[G__20136__i + 3]; ++G__20136__i;}
G__20135 = new cljs.core.IndexedSeq(G__20136__a,0);
}
return G__20131__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__20135);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20131.cljs$lang$maxFixedArity = 3;
G__20131.cljs$lang$applyTo = G__20131__4.cljs$lang$applyTo;
G__20131.cljs$core$IFn$_invoke$arity$0 = G__20131__0;
G__20131.cljs$core$IFn$_invoke$arity$1 = G__20131__1;
G__20131.cljs$core$IFn$_invoke$arity$2 = G__20131__2;
G__20131.cljs$core$IFn$_invoke$arity$3 = G__20131__3;
G__20131.cljs$core$IFn$_invoke$arity$variadic = G__20131__4.cljs$core$IFn$_invoke$arity$variadic;
return G__20131;
})()
});
var comp__4 = (function() { 
var G__20137__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__20138__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__20139 = cljs.core.first(fs__$2).call(null,ret);
var G__20140 = cljs.core.next(fs__$2);
ret = G__20139;
fs__$2 = G__20140;
continue;
} else {
return ret;
}
break;
}
};
var G__20138 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__20141__i = 0, G__20141__a = new Array(arguments.length -  0);
while (G__20141__i < G__20141__a.length) {G__20141__a[G__20141__i] = arguments[G__20141__i + 0]; ++G__20141__i;}
  args = new cljs.core.IndexedSeq(G__20141__a,0);
} 
return G__20138__delegate.call(this,args);};
G__20138.cljs$lang$maxFixedArity = 0;
G__20138.cljs$lang$applyTo = (function (arglist__20142){
var args = cljs.core.seq(arglist__20142);
return G__20138__delegate(args);
});
G__20138.cljs$core$IFn$_invoke$arity$variadic = G__20138__delegate;
return G__20138;
})()
;
;})(fs__$1))
};
var G__20137 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__20143__i = 0, G__20143__a = new Array(arguments.length -  3);
while (G__20143__i < G__20143__a.length) {G__20143__a[G__20143__i] = arguments[G__20143__i + 3]; ++G__20143__i;}
  fs = new cljs.core.IndexedSeq(G__20143__a,0);
} 
return G__20137__delegate.call(this,f1,f2,f3,fs);};
G__20137.cljs$lang$maxFixedArity = 3;
G__20137.cljs$lang$applyTo = (function (arglist__20144){
var f1 = cljs.core.first(arglist__20144);
arglist__20144 = cljs.core.next(arglist__20144);
var f2 = cljs.core.first(arglist__20144);
arglist__20144 = cljs.core.next(arglist__20144);
var f3 = cljs.core.first(arglist__20144);
var fs = cljs.core.rest(arglist__20144);
return G__20137__delegate(f1,f2,f3,fs);
});
G__20137.cljs$core$IFn$_invoke$arity$variadic = G__20137__delegate;
return G__20137;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__20145 = null;
if (arguments.length > 3) {
var G__20146__i = 0, G__20146__a = new Array(arguments.length -  3);
while (G__20146__i < G__20146__a.length) {G__20146__a[G__20146__i] = arguments[G__20146__i + 3]; ++G__20146__i;}
G__20145 = new cljs.core.IndexedSeq(G__20146__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__20145);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__20231 = null;
var G__20231__0 = (function (){
var G__20189 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20189) : f.call(null,G__20189));
});
var G__20231__1 = (function (x){
var G__20190 = arg1;
var G__20191 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20190,G__20191) : f.call(null,G__20190,G__20191));
});
var G__20231__2 = (function (x,y){
var G__20192 = arg1;
var G__20193 = x;
var G__20194 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20192,G__20193,G__20194) : f.call(null,G__20192,G__20193,G__20194));
});
var G__20231__3 = (function (x,y,z){
var G__20195 = arg1;
var G__20196 = x;
var G__20197 = y;
var G__20198 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__20195,G__20196,G__20197,G__20198) : f.call(null,G__20195,G__20196,G__20197,G__20198));
});
var G__20231__4 = (function() { 
var G__20232__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__20232 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__20233__i = 0, G__20233__a = new Array(arguments.length -  3);
while (G__20233__i < G__20233__a.length) {G__20233__a[G__20233__i] = arguments[G__20233__i + 3]; ++G__20233__i;}
  args = new cljs.core.IndexedSeq(G__20233__a,0);
} 
return G__20232__delegate.call(this,x,y,z,args);};
G__20232.cljs$lang$maxFixedArity = 3;
G__20232.cljs$lang$applyTo = (function (arglist__20234){
var x = cljs.core.first(arglist__20234);
arglist__20234 = cljs.core.next(arglist__20234);
var y = cljs.core.first(arglist__20234);
arglist__20234 = cljs.core.next(arglist__20234);
var z = cljs.core.first(arglist__20234);
var args = cljs.core.rest(arglist__20234);
return G__20232__delegate(x,y,z,args);
});
G__20232.cljs$core$IFn$_invoke$arity$variadic = G__20232__delegate;
return G__20232;
})()
;
G__20231 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__20231__0.call(this);
case 1:
return G__20231__1.call(this,x);
case 2:
return G__20231__2.call(this,x,y);
case 3:
return G__20231__3.call(this,x,y,z);
default:
var G__20235 = null;
if (arguments.length > 3) {
var G__20236__i = 0, G__20236__a = new Array(arguments.length -  3);
while (G__20236__i < G__20236__a.length) {G__20236__a[G__20236__i] = arguments[G__20236__i + 3]; ++G__20236__i;}
G__20235 = new cljs.core.IndexedSeq(G__20236__a,0);
}
return G__20231__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__20235);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20231.cljs$lang$maxFixedArity = 3;
G__20231.cljs$lang$applyTo = G__20231__4.cljs$lang$applyTo;
G__20231.cljs$core$IFn$_invoke$arity$0 = G__20231__0;
G__20231.cljs$core$IFn$_invoke$arity$1 = G__20231__1;
G__20231.cljs$core$IFn$_invoke$arity$2 = G__20231__2;
G__20231.cljs$core$IFn$_invoke$arity$3 = G__20231__3;
G__20231.cljs$core$IFn$_invoke$arity$variadic = G__20231__4.cljs$core$IFn$_invoke$arity$variadic;
return G__20231;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__20237 = null;
var G__20237__0 = (function (){
var G__20199 = arg1;
var G__20200 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20199,G__20200) : f.call(null,G__20199,G__20200));
});
var G__20237__1 = (function (x){
var G__20201 = arg1;
var G__20202 = arg2;
var G__20203 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20201,G__20202,G__20203) : f.call(null,G__20201,G__20202,G__20203));
});
var G__20237__2 = (function (x,y){
var G__20204 = arg1;
var G__20205 = arg2;
var G__20206 = x;
var G__20207 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__20204,G__20205,G__20206,G__20207) : f.call(null,G__20204,G__20205,G__20206,G__20207));
});
var G__20237__3 = (function (x,y,z){
var G__20208 = arg1;
var G__20209 = arg2;
var G__20210 = x;
var G__20211 = y;
var G__20212 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__20208,G__20209,G__20210,G__20211,G__20212) : f.call(null,G__20208,G__20209,G__20210,G__20211,G__20212));
});
var G__20237__4 = (function() { 
var G__20238__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__20238 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__20239__i = 0, G__20239__a = new Array(arguments.length -  3);
while (G__20239__i < G__20239__a.length) {G__20239__a[G__20239__i] = arguments[G__20239__i + 3]; ++G__20239__i;}
  args = new cljs.core.IndexedSeq(G__20239__a,0);
} 
return G__20238__delegate.call(this,x,y,z,args);};
G__20238.cljs$lang$maxFixedArity = 3;
G__20238.cljs$lang$applyTo = (function (arglist__20240){
var x = cljs.core.first(arglist__20240);
arglist__20240 = cljs.core.next(arglist__20240);
var y = cljs.core.first(arglist__20240);
arglist__20240 = cljs.core.next(arglist__20240);
var z = cljs.core.first(arglist__20240);
var args = cljs.core.rest(arglist__20240);
return G__20238__delegate(x,y,z,args);
});
G__20238.cljs$core$IFn$_invoke$arity$variadic = G__20238__delegate;
return G__20238;
})()
;
G__20237 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__20237__0.call(this);
case 1:
return G__20237__1.call(this,x);
case 2:
return G__20237__2.call(this,x,y);
case 3:
return G__20237__3.call(this,x,y,z);
default:
var G__20241 = null;
if (arguments.length > 3) {
var G__20242__i = 0, G__20242__a = new Array(arguments.length -  3);
while (G__20242__i < G__20242__a.length) {G__20242__a[G__20242__i] = arguments[G__20242__i + 3]; ++G__20242__i;}
G__20241 = new cljs.core.IndexedSeq(G__20242__a,0);
}
return G__20237__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__20241);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20237.cljs$lang$maxFixedArity = 3;
G__20237.cljs$lang$applyTo = G__20237__4.cljs$lang$applyTo;
G__20237.cljs$core$IFn$_invoke$arity$0 = G__20237__0;
G__20237.cljs$core$IFn$_invoke$arity$1 = G__20237__1;
G__20237.cljs$core$IFn$_invoke$arity$2 = G__20237__2;
G__20237.cljs$core$IFn$_invoke$arity$3 = G__20237__3;
G__20237.cljs$core$IFn$_invoke$arity$variadic = G__20237__4.cljs$core$IFn$_invoke$arity$variadic;
return G__20237;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__20243 = null;
var G__20243__0 = (function (){
var G__20213 = arg1;
var G__20214 = arg2;
var G__20215 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20213,G__20214,G__20215) : f.call(null,G__20213,G__20214,G__20215));
});
var G__20243__1 = (function (x){
var G__20216 = arg1;
var G__20217 = arg2;
var G__20218 = arg3;
var G__20219 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__20216,G__20217,G__20218,G__20219) : f.call(null,G__20216,G__20217,G__20218,G__20219));
});
var G__20243__2 = (function (x,y){
var G__20220 = arg1;
var G__20221 = arg2;
var G__20222 = arg3;
var G__20223 = x;
var G__20224 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__20220,G__20221,G__20222,G__20223,G__20224) : f.call(null,G__20220,G__20221,G__20222,G__20223,G__20224));
});
var G__20243__3 = (function (x,y,z){
var G__20225 = arg1;
var G__20226 = arg2;
var G__20227 = arg3;
var G__20228 = x;
var G__20229 = y;
var G__20230 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__20225,G__20226,G__20227,G__20228,G__20229,G__20230) : f.call(null,G__20225,G__20226,G__20227,G__20228,G__20229,G__20230));
});
var G__20243__4 = (function() { 
var G__20244__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__20244 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__20245__i = 0, G__20245__a = new Array(arguments.length -  3);
while (G__20245__i < G__20245__a.length) {G__20245__a[G__20245__i] = arguments[G__20245__i + 3]; ++G__20245__i;}
  args = new cljs.core.IndexedSeq(G__20245__a,0);
} 
return G__20244__delegate.call(this,x,y,z,args);};
G__20244.cljs$lang$maxFixedArity = 3;
G__20244.cljs$lang$applyTo = (function (arglist__20246){
var x = cljs.core.first(arglist__20246);
arglist__20246 = cljs.core.next(arglist__20246);
var y = cljs.core.first(arglist__20246);
arglist__20246 = cljs.core.next(arglist__20246);
var z = cljs.core.first(arglist__20246);
var args = cljs.core.rest(arglist__20246);
return G__20244__delegate(x,y,z,args);
});
G__20244.cljs$core$IFn$_invoke$arity$variadic = G__20244__delegate;
return G__20244;
})()
;
G__20243 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__20243__0.call(this);
case 1:
return G__20243__1.call(this,x);
case 2:
return G__20243__2.call(this,x,y);
case 3:
return G__20243__3.call(this,x,y,z);
default:
var G__20247 = null;
if (arguments.length > 3) {
var G__20248__i = 0, G__20248__a = new Array(arguments.length -  3);
while (G__20248__i < G__20248__a.length) {G__20248__a[G__20248__i] = arguments[G__20248__i + 3]; ++G__20248__i;}
G__20247 = new cljs.core.IndexedSeq(G__20248__a,0);
}
return G__20243__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__20247);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20243.cljs$lang$maxFixedArity = 3;
G__20243.cljs$lang$applyTo = G__20243__4.cljs$lang$applyTo;
G__20243.cljs$core$IFn$_invoke$arity$0 = G__20243__0;
G__20243.cljs$core$IFn$_invoke$arity$1 = G__20243__1;
G__20243.cljs$core$IFn$_invoke$arity$2 = G__20243__2;
G__20243.cljs$core$IFn$_invoke$arity$3 = G__20243__3;
G__20243.cljs$core$IFn$_invoke$arity$variadic = G__20243__4.cljs$core$IFn$_invoke$arity$variadic;
return G__20243;
})()
});
var partial__5 = (function() { 
var G__20249__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__20250__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__20250 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__20251__i = 0, G__20251__a = new Array(arguments.length -  0);
while (G__20251__i < G__20251__a.length) {G__20251__a[G__20251__i] = arguments[G__20251__i + 0]; ++G__20251__i;}
  args = new cljs.core.IndexedSeq(G__20251__a,0);
} 
return G__20250__delegate.call(this,args);};
G__20250.cljs$lang$maxFixedArity = 0;
G__20250.cljs$lang$applyTo = (function (arglist__20252){
var args = cljs.core.seq(arglist__20252);
return G__20250__delegate(args);
});
G__20250.cljs$core$IFn$_invoke$arity$variadic = G__20250__delegate;
return G__20250;
})()
;
};
var G__20249 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__20253__i = 0, G__20253__a = new Array(arguments.length -  4);
while (G__20253__i < G__20253__a.length) {G__20253__a[G__20253__i] = arguments[G__20253__i + 4]; ++G__20253__i;}
  more = new cljs.core.IndexedSeq(G__20253__a,0);
} 
return G__20249__delegate.call(this,f,arg1,arg2,arg3,more);};
G__20249.cljs$lang$maxFixedArity = 4;
G__20249.cljs$lang$applyTo = (function (arglist__20254){
var f = cljs.core.first(arglist__20254);
arglist__20254 = cljs.core.next(arglist__20254);
var arg1 = cljs.core.first(arglist__20254);
arglist__20254 = cljs.core.next(arglist__20254);
var arg2 = cljs.core.first(arglist__20254);
arglist__20254 = cljs.core.next(arglist__20254);
var arg3 = cljs.core.first(arglist__20254);
var more = cljs.core.rest(arglist__20254);
return G__20249__delegate(f,arg1,arg2,arg3,more);
});
G__20249.cljs$core$IFn$_invoke$arity$variadic = G__20249__delegate;
return G__20249;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__20255 = null;
if (arguments.length > 4) {
var G__20256__i = 0, G__20256__a = new Array(arguments.length -  4);
while (G__20256__i < G__20256__a.length) {G__20256__a[G__20256__i] = arguments[G__20256__i + 4]; ++G__20256__i;}
G__20255 = new cljs.core.IndexedSeq(G__20256__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__20255);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__20289 = null;
var G__20289__1 = (function (a){
var G__20273 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20273) : f.call(null,G__20273));
});
var G__20289__2 = (function (a,b){
var G__20274 = (((a == null))?x:a);
var G__20275 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20274,G__20275) : f.call(null,G__20274,G__20275));
});
var G__20289__3 = (function (a,b,c){
var G__20276 = (((a == null))?x:a);
var G__20277 = b;
var G__20278 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20276,G__20277,G__20278) : f.call(null,G__20276,G__20277,G__20278));
});
var G__20289__4 = (function() { 
var G__20290__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__20290 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__20291__i = 0, G__20291__a = new Array(arguments.length -  3);
while (G__20291__i < G__20291__a.length) {G__20291__a[G__20291__i] = arguments[G__20291__i + 3]; ++G__20291__i;}
  ds = new cljs.core.IndexedSeq(G__20291__a,0);
} 
return G__20290__delegate.call(this,a,b,c,ds);};
G__20290.cljs$lang$maxFixedArity = 3;
G__20290.cljs$lang$applyTo = (function (arglist__20292){
var a = cljs.core.first(arglist__20292);
arglist__20292 = cljs.core.next(arglist__20292);
var b = cljs.core.first(arglist__20292);
arglist__20292 = cljs.core.next(arglist__20292);
var c = cljs.core.first(arglist__20292);
var ds = cljs.core.rest(arglist__20292);
return G__20290__delegate(a,b,c,ds);
});
G__20290.cljs$core$IFn$_invoke$arity$variadic = G__20290__delegate;
return G__20290;
})()
;
G__20289 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__20289__1.call(this,a);
case 2:
return G__20289__2.call(this,a,b);
case 3:
return G__20289__3.call(this,a,b,c);
default:
var G__20293 = null;
if (arguments.length > 3) {
var G__20294__i = 0, G__20294__a = new Array(arguments.length -  3);
while (G__20294__i < G__20294__a.length) {G__20294__a[G__20294__i] = arguments[G__20294__i + 3]; ++G__20294__i;}
G__20293 = new cljs.core.IndexedSeq(G__20294__a,0);
}
return G__20289__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__20293);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20289.cljs$lang$maxFixedArity = 3;
G__20289.cljs$lang$applyTo = G__20289__4.cljs$lang$applyTo;
G__20289.cljs$core$IFn$_invoke$arity$1 = G__20289__1;
G__20289.cljs$core$IFn$_invoke$arity$2 = G__20289__2;
G__20289.cljs$core$IFn$_invoke$arity$3 = G__20289__3;
G__20289.cljs$core$IFn$_invoke$arity$variadic = G__20289__4.cljs$core$IFn$_invoke$arity$variadic;
return G__20289;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__20295 = null;
var G__20295__2 = (function (a,b){
var G__20279 = (((a == null))?x:a);
var G__20280 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20279,G__20280) : f.call(null,G__20279,G__20280));
});
var G__20295__3 = (function (a,b,c){
var G__20281 = (((a == null))?x:a);
var G__20282 = (((b == null))?y:b);
var G__20283 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20281,G__20282,G__20283) : f.call(null,G__20281,G__20282,G__20283));
});
var G__20295__4 = (function() { 
var G__20296__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__20296 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__20297__i = 0, G__20297__a = new Array(arguments.length -  3);
while (G__20297__i < G__20297__a.length) {G__20297__a[G__20297__i] = arguments[G__20297__i + 3]; ++G__20297__i;}
  ds = new cljs.core.IndexedSeq(G__20297__a,0);
} 
return G__20296__delegate.call(this,a,b,c,ds);};
G__20296.cljs$lang$maxFixedArity = 3;
G__20296.cljs$lang$applyTo = (function (arglist__20298){
var a = cljs.core.first(arglist__20298);
arglist__20298 = cljs.core.next(arglist__20298);
var b = cljs.core.first(arglist__20298);
arglist__20298 = cljs.core.next(arglist__20298);
var c = cljs.core.first(arglist__20298);
var ds = cljs.core.rest(arglist__20298);
return G__20296__delegate(a,b,c,ds);
});
G__20296.cljs$core$IFn$_invoke$arity$variadic = G__20296__delegate;
return G__20296;
})()
;
G__20295 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__20295__2.call(this,a,b);
case 3:
return G__20295__3.call(this,a,b,c);
default:
var G__20299 = null;
if (arguments.length > 3) {
var G__20300__i = 0, G__20300__a = new Array(arguments.length -  3);
while (G__20300__i < G__20300__a.length) {G__20300__a[G__20300__i] = arguments[G__20300__i + 3]; ++G__20300__i;}
G__20299 = new cljs.core.IndexedSeq(G__20300__a,0);
}
return G__20295__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__20299);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20295.cljs$lang$maxFixedArity = 3;
G__20295.cljs$lang$applyTo = G__20295__4.cljs$lang$applyTo;
G__20295.cljs$core$IFn$_invoke$arity$2 = G__20295__2;
G__20295.cljs$core$IFn$_invoke$arity$3 = G__20295__3;
G__20295.cljs$core$IFn$_invoke$arity$variadic = G__20295__4.cljs$core$IFn$_invoke$arity$variadic;
return G__20295;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__20301 = null;
var G__20301__2 = (function (a,b){
var G__20284 = (((a == null))?x:a);
var G__20285 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20284,G__20285) : f.call(null,G__20284,G__20285));
});
var G__20301__3 = (function (a,b,c){
var G__20286 = (((a == null))?x:a);
var G__20287 = (((b == null))?y:b);
var G__20288 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20286,G__20287,G__20288) : f.call(null,G__20286,G__20287,G__20288));
});
var G__20301__4 = (function() { 
var G__20302__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__20302 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__20303__i = 0, G__20303__a = new Array(arguments.length -  3);
while (G__20303__i < G__20303__a.length) {G__20303__a[G__20303__i] = arguments[G__20303__i + 3]; ++G__20303__i;}
  ds = new cljs.core.IndexedSeq(G__20303__a,0);
} 
return G__20302__delegate.call(this,a,b,c,ds);};
G__20302.cljs$lang$maxFixedArity = 3;
G__20302.cljs$lang$applyTo = (function (arglist__20304){
var a = cljs.core.first(arglist__20304);
arglist__20304 = cljs.core.next(arglist__20304);
var b = cljs.core.first(arglist__20304);
arglist__20304 = cljs.core.next(arglist__20304);
var c = cljs.core.first(arglist__20304);
var ds = cljs.core.rest(arglist__20304);
return G__20302__delegate(a,b,c,ds);
});
G__20302.cljs$core$IFn$_invoke$arity$variadic = G__20302__delegate;
return G__20302;
})()
;
G__20301 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__20301__2.call(this,a,b);
case 3:
return G__20301__3.call(this,a,b,c);
default:
var G__20305 = null;
if (arguments.length > 3) {
var G__20306__i = 0, G__20306__a = new Array(arguments.length -  3);
while (G__20306__i < G__20306__a.length) {G__20306__a[G__20306__i] = arguments[G__20306__i + 3]; ++G__20306__i;}
G__20305 = new cljs.core.IndexedSeq(G__20306__a,0);
}
return G__20301__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__20305);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20301.cljs$lang$maxFixedArity = 3;
G__20301.cljs$lang$applyTo = G__20301__4.cljs$lang$applyTo;
G__20301.cljs$core$IFn$_invoke$arity$2 = G__20301__2;
G__20301.cljs$core$IFn$_invoke$arity$3 = G__20301__3;
G__20301.cljs$core$IFn$_invoke$arity$variadic = G__20301__4.cljs$core$IFn$_invoke$arity$variadic;
return G__20301;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__20337 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__20337) : cljs.core.volatile_BANG_.call(null,G__20337));
})();
return ((function (i){
return (function() {
var G__20367 = null;
var G__20367__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__20367__1 = (function (result){
var G__20338 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20338) : rf.call(null,G__20338));
});
var G__20367__2 = (function (result,input){
var G__20339 = result;
var G__20340 = (function (){var G__20341 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__20342 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20341,G__20342) : f.call(null,G__20341,G__20342));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20339,G__20340) : rf.call(null,G__20339,G__20340));
});
G__20367 = function(result,input){
switch(arguments.length){
case 0:
return G__20367__0.call(this);
case 1:
return G__20367__1.call(this,result);
case 2:
return G__20367__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20367.cljs$core$IFn$_invoke$arity$0 = G__20367__0;
G__20367.cljs$core$IFn$_invoke$arity$1 = G__20367__1;
G__20367.cljs$core$IFn$_invoke$arity$2 = G__20367__2;
return G__20367;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4809__auto___20368 = size;
var i_20369 = (0);
while(true){
if((i_20369 < n__4809__auto___20368)){
cljs.core.chunk_append(b,(function (){var G__20363 = (idx + i_20369);
var G__20364 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_20369);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20363,G__20364) : f.call(null,G__20363,G__20364));
})());

var G__20370 = (i_20369 + (1));
i_20369 = G__20370;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__20365 = idx;
var G__20366 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20365,G__20366) : f.call(null,G__20365,G__20366));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__20389 = null;
var G__20389__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__20389__1 = (function (result){
var G__20383 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20383) : rf.call(null,G__20383));
});
var G__20389__2 = (function (result,input){
var v = (function (){var G__20384 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20384) : f.call(null,G__20384));
})();
if((v == null)){
return result;
} else {
var G__20385 = result;
var G__20386 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20385,G__20386) : rf.call(null,G__20385,G__20386));
}
});
G__20389 = function(result,input){
switch(arguments.length){
case 0:
return G__20389__0.call(this);
case 1:
return G__20389__1.call(this,result);
case 2:
return G__20389__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20389.cljs$core$IFn$_invoke$arity$0 = G__20389__0;
G__20389.cljs$core$IFn$_invoke$arity$1 = G__20389__1;
G__20389.cljs$core$IFn$_invoke$arity$2 = G__20389__2;
return G__20389;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4809__auto___20390 = size;
var i_20391 = (0);
while(true){
if((i_20391 < n__4809__auto___20390)){
var x_20392 = (function (){var G__20387 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_20391);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20387) : f.call(null,G__20387));
})();
if((x_20392 == null)){
} else {
cljs.core.chunk_append(b,x_20392);
}

var G__20393 = (i_20391 + (1));
i_20391 = G__20393;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__20388 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20388) : f.call(null,G__20388));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__20394 = this$__$1;
return goog.getUid(G__20394);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__20395 = cljs.core.seq(self__.watches);
var chunk__20396 = null;
var count__20397 = (0);
var i__20398 = (0);
while(true){
if((i__20398 < count__20397)){
var vec__20399 = chunk__20396.cljs$core$IIndexed$_nth$arity$2(null,i__20398);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20399,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20399,(1),null);
var G__20400_20409 = key;
var G__20401_20410 = this$__$1;
var G__20402_20411 = oldval;
var G__20403_20412 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__20400_20409,G__20401_20410,G__20402_20411,G__20403_20412) : f.call(null,G__20400_20409,G__20401_20410,G__20402_20411,G__20403_20412));

var G__20413 = seq__20395;
var G__20414 = chunk__20396;
var G__20415 = count__20397;
var G__20416 = (i__20398 + (1));
seq__20395 = G__20413;
chunk__20396 = G__20414;
count__20397 = G__20415;
i__20398 = G__20416;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__20395);
if(temp__4126__auto__){
var seq__20395__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__20395__$1)){
var c__4709__auto__ = cljs.core.chunk_first(seq__20395__$1);
var G__20417 = cljs.core.chunk_rest(seq__20395__$1);
var G__20418 = c__4709__auto__;
var G__20419 = cljs.core.count(c__4709__auto__);
var G__20420 = (0);
seq__20395 = G__20417;
chunk__20396 = G__20418;
count__20397 = G__20419;
i__20398 = G__20420;
continue;
} else {
var vec__20404 = cljs.core.first(seq__20395__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20404,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20404,(1),null);
var G__20405_20421 = key;
var G__20406_20422 = this$__$1;
var G__20407_20423 = oldval;
var G__20408_20424 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__20405_20421,G__20406_20422,G__20407_20423,G__20408_20424) : f.call(null,G__20405_20421,G__20406_20422,G__20407_20423,G__20408_20424));

var G__20425 = cljs.core.next(seq__20395__$1);
var G__20426 = null;
var G__20427 = (0);
var G__20428 = (0);
seq__20395 = G__20425;
chunk__20396 = G__20426;
count__20397 = G__20427;
i__20398 = G__20428;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__20432__delegate = function (x,p__20429){
var map__20431 = p__20429;
var map__20431__$1 = ((cljs.core.seq_QMARK_(map__20431))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__20431):map__20431);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20431__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20431__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__20432 = function (x,var_args){
var p__20429 = null;
if (arguments.length > 1) {
var G__20433__i = 0, G__20433__a = new Array(arguments.length -  1);
while (G__20433__i < G__20433__a.length) {G__20433__a[G__20433__i] = arguments[G__20433__i + 1]; ++G__20433__i;}
  p__20429 = new cljs.core.IndexedSeq(G__20433__a,0);
} 
return G__20432__delegate.call(this,x,p__20429);};
G__20432.cljs$lang$maxFixedArity = 1;
G__20432.cljs$lang$applyTo = (function (arglist__20434){
var x = cljs.core.first(arglist__20434);
var p__20429 = cljs.core.rest(arglist__20434);
return G__20432__delegate(x,p__20429);
});
G__20432.cljs$core$IFn$_invoke$arity$variadic = G__20432__delegate;
return G__20432;
})()
;
atom = function(x,var_args){
var p__20429 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__20435 = null;
if (arguments.length > 1) {
var G__20436__i = 0, G__20436__a = new Array(arguments.length -  1);
while (G__20436__i < G__20436__a.length) {G__20436__a[G__20436__i] = arguments[G__20436__i + 1]; ++G__20436__i;}
G__20435 = new cljs.core.IndexedSeq(G__20436__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__20435);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__20439 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__20439) : validate.call(null,G__20439));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__20440 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__20440) : cljs.core.pr_str.call(null,G__20440));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__20447 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20447) : f.call(null,G__20447));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__20448 = a.state;
var G__20449 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20448,G__20449) : f.call(null,G__20448,G__20449));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__20450 = a.state;
var G__20451 = x;
var G__20452 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20450,G__20451,G__20452) : f.call(null,G__20450,G__20451,G__20452));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__20453__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__20453 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__20454__i = 0, G__20454__a = new Array(arguments.length -  4);
while (G__20454__i < G__20454__a.length) {G__20454__a[G__20454__i] = arguments[G__20454__i + 4]; ++G__20454__i;}
  more = new cljs.core.IndexedSeq(G__20454__a,0);
} 
return G__20453__delegate.call(this,a,f,x,y,more);};
G__20453.cljs$lang$maxFixedArity = 4;
G__20453.cljs$lang$applyTo = (function (arglist__20455){
var a = cljs.core.first(arglist__20455);
arglist__20455 = cljs.core.next(arglist__20455);
var f = cljs.core.first(arglist__20455);
arglist__20455 = cljs.core.next(arglist__20455);
var x = cljs.core.first(arglist__20455);
arglist__20455 = cljs.core.next(arglist__20455);
var y = cljs.core.first(arglist__20455);
var more = cljs.core.rest(arglist__20455);
return G__20453__delegate(a,f,x,y,more);
});
G__20453.cljs$core$IFn$_invoke$arity$variadic = G__20453__delegate;
return G__20453;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__20456 = null;
if (arguments.length > 4) {
var G__20457__i = 0, G__20457__a = new Array(arguments.length -  4);
while (G__20457__i < G__20457__a.length) {G__20457__a[G__20457__i] = arguments[G__20457__i + 4]; ++G__20457__i;}
G__20456 = new cljs.core.IndexedSeq(G__20457__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__20456);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__20524 = null;
var G__20524__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__20524__1 = (function (result){
var G__20491 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20491) : rf.call(null,G__20491));
});
var G__20524__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__20492 = i;
var G__20493 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20492,G__20493) : f.call(null,G__20492,G__20493));
})();
if((v == null)){
return result;
} else {
var G__20494 = result;
var G__20495 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20494,G__20495) : rf.call(null,G__20494,G__20495));
}
});
G__20524 = function(result,input){
switch(arguments.length){
case 0:
return G__20524__0.call(this);
case 1:
return G__20524__1.call(this,result);
case 2:
return G__20524__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20524.cljs$core$IFn$_invoke$arity$0 = G__20524__0;
G__20524.cljs$core$IFn$_invoke$arity$1 = G__20524__1;
G__20524.cljs$core$IFn$_invoke$arity$2 = G__20524__2;
return G__20524;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4809__auto___20525 = size;
var i_20526 = (0);
while(true){
if((i_20526 < n__4809__auto___20525)){
var x_20527 = (function (){var G__20520 = (idx + i_20526);
var G__20521 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_20526);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20520,G__20521) : f.call(null,G__20520,G__20521));
})();
if((x_20527 == null)){
} else {
cljs.core.chunk_append(b,x_20527);
}

var G__20528 = (i_20526 + (1));
i_20526 = G__20528;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__20522 = idx;
var G__20523 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20522,G__20523) : f.call(null,G__20522,G__20523));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__20742 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20742) : p.call(null,G__20742));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3910__auto__ = (function (){var G__20744 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20744) : p.call(null,G__20744));
})();
if(cljs.core.truth_(and__3910__auto__)){
var G__20745 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20745) : p.call(null,G__20745));
} else {
return and__3910__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3910__auto__ = (function (){var G__20747 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20747) : p.call(null,G__20747));
})();
if(cljs.core.truth_(and__3910__auto__)){
var and__3910__auto____$1 = (function (){var G__20749 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20749) : p.call(null,G__20749));
})();
if(cljs.core.truth_(and__3910__auto____$1)){
var G__20750 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20750) : p.call(null,G__20750));
} else {
return and__3910__auto____$1;
}
} else {
return and__3910__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__20919__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__20919 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__20920__i = 0, G__20920__a = new Array(arguments.length -  3);
while (G__20920__i < G__20920__a.length) {G__20920__a[G__20920__i] = arguments[G__20920__i + 3]; ++G__20920__i;}
  args = new cljs.core.IndexedSeq(G__20920__a,0);
} 
return G__20919__delegate.call(this,x,y,z,args);};
G__20919.cljs$lang$maxFixedArity = 3;
G__20919.cljs$lang$applyTo = (function (arglist__20921){
var x = cljs.core.first(arglist__20921);
arglist__20921 = cljs.core.next(arglist__20921);
var y = cljs.core.first(arglist__20921);
arglist__20921 = cljs.core.next(arglist__20921);
var z = cljs.core.first(arglist__20921);
var args = cljs.core.rest(arglist__20921);
return G__20919__delegate(x,y,z,args);
});
G__20919.cljs$core$IFn$_invoke$arity$variadic = G__20919__delegate;
return G__20919;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__20922 = null;
if (arguments.length > 3) {
var G__20923__i = 0, G__20923__a = new Array(arguments.length -  3);
while (G__20923__i < G__20923__a.length) {G__20923__a[G__20923__i] = arguments[G__20923__i + 3]; ++G__20923__i;}
G__20922 = new cljs.core.IndexedSeq(G__20923__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__20922);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__3910__auto__ = (function (){var G__20782 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20782) : p1.call(null,G__20782));
})();
if(cljs.core.truth_(and__3910__auto__)){
var G__20783 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20783) : p2.call(null,G__20783));
} else {
return and__3910__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3910__auto__ = (function (){var G__20785 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20785) : p1.call(null,G__20785));
})();
if(cljs.core.truth_(and__3910__auto__)){
var and__3910__auto____$1 = (function (){var G__20787 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20787) : p1.call(null,G__20787));
})();
if(cljs.core.truth_(and__3910__auto____$1)){
var and__3910__auto____$2 = (function (){var G__20789 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20789) : p2.call(null,G__20789));
})();
if(cljs.core.truth_(and__3910__auto____$2)){
var G__20790 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20790) : p2.call(null,G__20790));
} else {
return and__3910__auto____$2;
}
} else {
return and__3910__auto____$1;
}
} else {
return and__3910__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3910__auto__ = (function (){var G__20792 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20792) : p1.call(null,G__20792));
})();
if(cljs.core.truth_(and__3910__auto__)){
var and__3910__auto____$1 = (function (){var G__20794 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20794) : p1.call(null,G__20794));
})();
if(cljs.core.truth_(and__3910__auto____$1)){
var and__3910__auto____$2 = (function (){var G__20796 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20796) : p1.call(null,G__20796));
})();
if(cljs.core.truth_(and__3910__auto____$2)){
var and__3910__auto____$3 = (function (){var G__20798 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20798) : p2.call(null,G__20798));
})();
if(cljs.core.truth_(and__3910__auto____$3)){
var and__3910__auto____$4 = (function (){var G__20800 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20800) : p2.call(null,G__20800));
})();
if(cljs.core.truth_(and__3910__auto____$4)){
var G__20801 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20801) : p2.call(null,G__20801));
} else {
return and__3910__auto____$4;
}
} else {
return and__3910__auto____$3;
}
} else {
return and__3910__auto____$2;
}
} else {
return and__3910__auto____$1;
}
} else {
return and__3910__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__20924__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__20529_SHARP_){
var and__3910__auto__ = (function (){var G__20806 = p1__20529_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20806) : p1.call(null,G__20806));
})();
if(cljs.core.truth_(and__3910__auto__)){
var G__20807 = p1__20529_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20807) : p2.call(null,G__20807));
} else {
return and__3910__auto__;
}
}),args)));
};
var G__20924 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__20925__i = 0, G__20925__a = new Array(arguments.length -  3);
while (G__20925__i < G__20925__a.length) {G__20925__a[G__20925__i] = arguments[G__20925__i + 3]; ++G__20925__i;}
  args = new cljs.core.IndexedSeq(G__20925__a,0);
} 
return G__20924__delegate.call(this,x,y,z,args);};
G__20924.cljs$lang$maxFixedArity = 3;
G__20924.cljs$lang$applyTo = (function (arglist__20926){
var x = cljs.core.first(arglist__20926);
arglist__20926 = cljs.core.next(arglist__20926);
var y = cljs.core.first(arglist__20926);
arglist__20926 = cljs.core.next(arglist__20926);
var z = cljs.core.first(arglist__20926);
var args = cljs.core.rest(arglist__20926);
return G__20924__delegate(x,y,z,args);
});
G__20924.cljs$core$IFn$_invoke$arity$variadic = G__20924__delegate;
return G__20924;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__20927 = null;
if (arguments.length > 3) {
var G__20928__i = 0, G__20928__a = new Array(arguments.length -  3);
while (G__20928__i < G__20928__a.length) {G__20928__a[G__20928__i] = arguments[G__20928__i + 3]; ++G__20928__i;}
G__20927 = new cljs.core.IndexedSeq(G__20928__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__20927);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__3910__auto__ = (function (){var G__20853 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20853) : p1.call(null,G__20853));
})();
if(cljs.core.truth_(and__3910__auto__)){
var and__3910__auto____$1 = (function (){var G__20855 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20855) : p2.call(null,G__20855));
})();
if(cljs.core.truth_(and__3910__auto____$1)){
var G__20856 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20856) : p3.call(null,G__20856));
} else {
return and__3910__auto____$1;
}
} else {
return and__3910__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3910__auto__ = (function (){var G__20858 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20858) : p1.call(null,G__20858));
})();
if(cljs.core.truth_(and__3910__auto__)){
var and__3910__auto____$1 = (function (){var G__20860 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20860) : p2.call(null,G__20860));
})();
if(cljs.core.truth_(and__3910__auto____$1)){
var and__3910__auto____$2 = (function (){var G__20862 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20862) : p3.call(null,G__20862));
})();
if(cljs.core.truth_(and__3910__auto____$2)){
var and__3910__auto____$3 = (function (){var G__20864 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20864) : p1.call(null,G__20864));
})();
if(cljs.core.truth_(and__3910__auto____$3)){
var and__3910__auto____$4 = (function (){var G__20866 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20866) : p2.call(null,G__20866));
})();
if(cljs.core.truth_(and__3910__auto____$4)){
var G__20867 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20867) : p3.call(null,G__20867));
} else {
return and__3910__auto____$4;
}
} else {
return and__3910__auto____$3;
}
} else {
return and__3910__auto____$2;
}
} else {
return and__3910__auto____$1;
}
} else {
return and__3910__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3910__auto__ = (function (){var G__20869 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20869) : p1.call(null,G__20869));
})();
if(cljs.core.truth_(and__3910__auto__)){
var and__3910__auto____$1 = (function (){var G__20871 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20871) : p2.call(null,G__20871));
})();
if(cljs.core.truth_(and__3910__auto____$1)){
var and__3910__auto____$2 = (function (){var G__20873 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20873) : p3.call(null,G__20873));
})();
if(cljs.core.truth_(and__3910__auto____$2)){
var and__3910__auto____$3 = (function (){var G__20875 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20875) : p1.call(null,G__20875));
})();
if(cljs.core.truth_(and__3910__auto____$3)){
var and__3910__auto____$4 = (function (){var G__20877 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20877) : p2.call(null,G__20877));
})();
if(cljs.core.truth_(and__3910__auto____$4)){
var and__3910__auto____$5 = (function (){var G__20879 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20879) : p3.call(null,G__20879));
})();
if(cljs.core.truth_(and__3910__auto____$5)){
var and__3910__auto____$6 = (function (){var G__20881 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20881) : p1.call(null,G__20881));
})();
if(cljs.core.truth_(and__3910__auto____$6)){
var and__3910__auto____$7 = (function (){var G__20883 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20883) : p2.call(null,G__20883));
})();
if(cljs.core.truth_(and__3910__auto____$7)){
var G__20884 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20884) : p3.call(null,G__20884));
} else {
return and__3910__auto____$7;
}
} else {
return and__3910__auto____$6;
}
} else {
return and__3910__auto____$5;
}
} else {
return and__3910__auto____$4;
}
} else {
return and__3910__auto____$3;
}
} else {
return and__3910__auto____$2;
}
} else {
return and__3910__auto____$1;
}
} else {
return and__3910__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__20929__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__20530_SHARP_){
var and__3910__auto__ = (function (){var G__20891 = p1__20530_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20891) : p1.call(null,G__20891));
})();
if(cljs.core.truth_(and__3910__auto__)){
var and__3910__auto____$1 = (function (){var G__20893 = p1__20530_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20893) : p2.call(null,G__20893));
})();
if(cljs.core.truth_(and__3910__auto____$1)){
var G__20894 = p1__20530_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20894) : p3.call(null,G__20894));
} else {
return and__3910__auto____$1;
}
} else {
return and__3910__auto__;
}
}),args)));
};
var G__20929 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__20930__i = 0, G__20930__a = new Array(arguments.length -  3);
while (G__20930__i < G__20930__a.length) {G__20930__a[G__20930__i] = arguments[G__20930__i + 3]; ++G__20930__i;}
  args = new cljs.core.IndexedSeq(G__20930__a,0);
} 
return G__20929__delegate.call(this,x,y,z,args);};
G__20929.cljs$lang$maxFixedArity = 3;
G__20929.cljs$lang$applyTo = (function (arglist__20931){
var x = cljs.core.first(arglist__20931);
arglist__20931 = cljs.core.next(arglist__20931);
var y = cljs.core.first(arglist__20931);
arglist__20931 = cljs.core.next(arglist__20931);
var z = cljs.core.first(arglist__20931);
var args = cljs.core.rest(arglist__20931);
return G__20929__delegate(x,y,z,args);
});
G__20929.cljs$core$IFn$_invoke$arity$variadic = G__20929__delegate;
return G__20929;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__20932 = null;
if (arguments.length > 3) {
var G__20933__i = 0, G__20933__a = new Array(arguments.length -  3);
while (G__20933__i < G__20933__a.length) {G__20933__a[G__20933__i] = arguments[G__20933__i + 3]; ++G__20933__i;}
G__20932 = new cljs.core.IndexedSeq(G__20933__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__20932);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__20934__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__20531_SHARP_){
var G__20910 = x;
return (p1__20531_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20531_SHARP_.cljs$core$IFn$_invoke$arity$1(G__20910) : p1__20531_SHARP_.call(null,G__20910));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__20532_SHARP_){
var and__3910__auto__ = (function (){var G__20912 = x;
return (p1__20532_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20532_SHARP_.cljs$core$IFn$_invoke$arity$1(G__20912) : p1__20532_SHARP_.call(null,G__20912));
})();
if(cljs.core.truth_(and__3910__auto__)){
var G__20913 = y;
return (p1__20532_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20532_SHARP_.cljs$core$IFn$_invoke$arity$1(G__20913) : p1__20532_SHARP_.call(null,G__20913));
} else {
return and__3910__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__20533_SHARP_){
var and__3910__auto__ = (function (){var G__20915 = x;
return (p1__20533_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20533_SHARP_.cljs$core$IFn$_invoke$arity$1(G__20915) : p1__20533_SHARP_.call(null,G__20915));
})();
if(cljs.core.truth_(and__3910__auto__)){
var and__3910__auto____$1 = (function (){var G__20917 = y;
return (p1__20533_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20533_SHARP_.cljs$core$IFn$_invoke$arity$1(G__20917) : p1__20533_SHARP_.call(null,G__20917));
})();
if(cljs.core.truth_(and__3910__auto____$1)){
var G__20918 = z;
return (p1__20533_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20533_SHARP_.cljs$core$IFn$_invoke$arity$1(G__20918) : p1__20533_SHARP_.call(null,G__20918));
} else {
return and__3910__auto____$1;
}
} else {
return and__3910__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__20935__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__20534_SHARP_){
return cljs.core.every_QMARK_(p1__20534_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__20935 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__20936__i = 0, G__20936__a = new Array(arguments.length -  3);
while (G__20936__i < G__20936__a.length) {G__20936__a[G__20936__i] = arguments[G__20936__i + 3]; ++G__20936__i;}
  args = new cljs.core.IndexedSeq(G__20936__a,0);
} 
return G__20935__delegate.call(this,x,y,z,args);};
G__20935.cljs$lang$maxFixedArity = 3;
G__20935.cljs$lang$applyTo = (function (arglist__20937){
var x = cljs.core.first(arglist__20937);
arglist__20937 = cljs.core.next(arglist__20937);
var y = cljs.core.first(arglist__20937);
arglist__20937 = cljs.core.next(arglist__20937);
var z = cljs.core.first(arglist__20937);
var args = cljs.core.rest(arglist__20937);
return G__20935__delegate(x,y,z,args);
});
G__20935.cljs$core$IFn$_invoke$arity$variadic = G__20935__delegate;
return G__20935;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__20938 = null;
if (arguments.length > 3) {
var G__20939__i = 0, G__20939__a = new Array(arguments.length -  3);
while (G__20939__i < G__20939__a.length) {G__20939__a[G__20939__i] = arguments[G__20939__i + 3]; ++G__20939__i;}
G__20938 = new cljs.core.IndexedSeq(G__20939__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__20938);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__20934 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__20940__i = 0, G__20940__a = new Array(arguments.length -  3);
while (G__20940__i < G__20940__a.length) {G__20940__a[G__20940__i] = arguments[G__20940__i + 3]; ++G__20940__i;}
  ps = new cljs.core.IndexedSeq(G__20940__a,0);
} 
return G__20934__delegate.call(this,p1,p2,p3,ps);};
G__20934.cljs$lang$maxFixedArity = 3;
G__20934.cljs$lang$applyTo = (function (arglist__20941){
var p1 = cljs.core.first(arglist__20941);
arglist__20941 = cljs.core.next(arglist__20941);
var p2 = cljs.core.first(arglist__20941);
arglist__20941 = cljs.core.next(arglist__20941);
var p3 = cljs.core.first(arglist__20941);
var ps = cljs.core.rest(arglist__20941);
return G__20934__delegate(p1,p2,p3,ps);
});
G__20934.cljs$core$IFn$_invoke$arity$variadic = G__20934__delegate;
return G__20934;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__20942 = null;
if (arguments.length > 3) {
var G__20943__i = 0, G__20943__a = new Array(arguments.length -  3);
while (G__20943__i < G__20943__a.length) {G__20943__a[G__20943__i] = arguments[G__20943__i + 3]; ++G__20943__i;}
G__20942 = new cljs.core.IndexedSeq(G__20943__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__20942);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__21149 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21149) : p.call(null,G__21149));
});
var sp1__2 = (function (x,y){
var or__3922__auto__ = (function (){var G__21151 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21151) : p.call(null,G__21151));
})();
if(cljs.core.truth_(or__3922__auto__)){
return or__3922__auto__;
} else {
var G__21152 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21152) : p.call(null,G__21152));
}
});
var sp1__3 = (function (x,y,z){
var or__3922__auto__ = (function (){var G__21154 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21154) : p.call(null,G__21154));
})();
if(cljs.core.truth_(or__3922__auto__)){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (function (){var G__21156 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21156) : p.call(null,G__21156));
})();
if(cljs.core.truth_(or__3922__auto____$1)){
return or__3922__auto____$1;
} else {
var G__21157 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21157) : p.call(null,G__21157));
}
}
});
var sp1__4 = (function() { 
var G__21318__delegate = function (x,y,z,args){
var or__3922__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3922__auto__)){
return or__3922__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__21318 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21319__i = 0, G__21319__a = new Array(arguments.length -  3);
while (G__21319__i < G__21319__a.length) {G__21319__a[G__21319__i] = arguments[G__21319__i + 3]; ++G__21319__i;}
  args = new cljs.core.IndexedSeq(G__21319__a,0);
} 
return G__21318__delegate.call(this,x,y,z,args);};
G__21318.cljs$lang$maxFixedArity = 3;
G__21318.cljs$lang$applyTo = (function (arglist__21320){
var x = cljs.core.first(arglist__21320);
arglist__21320 = cljs.core.next(arglist__21320);
var y = cljs.core.first(arglist__21320);
arglist__21320 = cljs.core.next(arglist__21320);
var z = cljs.core.first(arglist__21320);
var args = cljs.core.rest(arglist__21320);
return G__21318__delegate(x,y,z,args);
});
G__21318.cljs$core$IFn$_invoke$arity$variadic = G__21318__delegate;
return G__21318;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__21321 = null;
if (arguments.length > 3) {
var G__21322__i = 0, G__21322__a = new Array(arguments.length -  3);
while (G__21322__i < G__21322__a.length) {G__21322__a[G__21322__i] = arguments[G__21322__i + 3]; ++G__21322__i;}
G__21321 = new cljs.core.IndexedSeq(G__21322__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21321);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__3922__auto__ = (function (){var G__21189 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21189) : p1.call(null,G__21189));
})();
if(cljs.core.truth_(or__3922__auto__)){
return or__3922__auto__;
} else {
var G__21190 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21190) : p2.call(null,G__21190));
}
});
var sp2__2 = (function (x,y){
var or__3922__auto__ = (function (){var G__21192 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21192) : p1.call(null,G__21192));
})();
if(cljs.core.truth_(or__3922__auto__)){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (function (){var G__21194 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21194) : p1.call(null,G__21194));
})();
if(cljs.core.truth_(or__3922__auto____$1)){
return or__3922__auto____$1;
} else {
var or__3922__auto____$2 = (function (){var G__21196 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21196) : p2.call(null,G__21196));
})();
if(cljs.core.truth_(or__3922__auto____$2)){
return or__3922__auto____$2;
} else {
var G__21197 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21197) : p2.call(null,G__21197));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__3922__auto__ = (function (){var G__21199 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21199) : p1.call(null,G__21199));
})();
if(cljs.core.truth_(or__3922__auto__)){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (function (){var G__21201 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21201) : p1.call(null,G__21201));
})();
if(cljs.core.truth_(or__3922__auto____$1)){
return or__3922__auto____$1;
} else {
var or__3922__auto____$2 = (function (){var G__21203 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21203) : p1.call(null,G__21203));
})();
if(cljs.core.truth_(or__3922__auto____$2)){
return or__3922__auto____$2;
} else {
var or__3922__auto____$3 = (function (){var G__21205 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21205) : p2.call(null,G__21205));
})();
if(cljs.core.truth_(or__3922__auto____$3)){
return or__3922__auto____$3;
} else {
var or__3922__auto____$4 = (function (){var G__21207 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21207) : p2.call(null,G__21207));
})();
if(cljs.core.truth_(or__3922__auto____$4)){
return or__3922__auto____$4;
} else {
var G__21208 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21208) : p2.call(null,G__21208));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__21323__delegate = function (x,y,z,args){
var or__3922__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3922__auto__)){
return or__3922__auto__;
} else {
return cljs.core.some(((function (or__3922__auto__){
return (function (p1__20944_SHARP_){
var or__3922__auto____$1 = (function (){var G__21210 = p1__20944_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21210) : p1.call(null,G__21210));
})();
if(cljs.core.truth_(or__3922__auto____$1)){
return or__3922__auto____$1;
} else {
var G__21211 = p1__20944_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21211) : p2.call(null,G__21211));
}
});})(or__3922__auto__))
,args);
}
};
var G__21323 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21324__i = 0, G__21324__a = new Array(arguments.length -  3);
while (G__21324__i < G__21324__a.length) {G__21324__a[G__21324__i] = arguments[G__21324__i + 3]; ++G__21324__i;}
  args = new cljs.core.IndexedSeq(G__21324__a,0);
} 
return G__21323__delegate.call(this,x,y,z,args);};
G__21323.cljs$lang$maxFixedArity = 3;
G__21323.cljs$lang$applyTo = (function (arglist__21325){
var x = cljs.core.first(arglist__21325);
arglist__21325 = cljs.core.next(arglist__21325);
var y = cljs.core.first(arglist__21325);
arglist__21325 = cljs.core.next(arglist__21325);
var z = cljs.core.first(arglist__21325);
var args = cljs.core.rest(arglist__21325);
return G__21323__delegate(x,y,z,args);
});
G__21323.cljs$core$IFn$_invoke$arity$variadic = G__21323__delegate;
return G__21323;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__21326 = null;
if (arguments.length > 3) {
var G__21327__i = 0, G__21327__a = new Array(arguments.length -  3);
while (G__21327__i < G__21327__a.length) {G__21327__a[G__21327__i] = arguments[G__21327__i + 3]; ++G__21327__i;}
G__21326 = new cljs.core.IndexedSeq(G__21327__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21326);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__3922__auto__ = (function (){var G__21257 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21257) : p1.call(null,G__21257));
})();
if(cljs.core.truth_(or__3922__auto__)){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (function (){var G__21259 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21259) : p2.call(null,G__21259));
})();
if(cljs.core.truth_(or__3922__auto____$1)){
return or__3922__auto____$1;
} else {
var G__21260 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21260) : p3.call(null,G__21260));
}
}
});
var sp3__2 = (function (x,y){
var or__3922__auto__ = (function (){var G__21262 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21262) : p1.call(null,G__21262));
})();
if(cljs.core.truth_(or__3922__auto__)){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (function (){var G__21264 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21264) : p2.call(null,G__21264));
})();
if(cljs.core.truth_(or__3922__auto____$1)){
return or__3922__auto____$1;
} else {
var or__3922__auto____$2 = (function (){var G__21266 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21266) : p3.call(null,G__21266));
})();
if(cljs.core.truth_(or__3922__auto____$2)){
return or__3922__auto____$2;
} else {
var or__3922__auto____$3 = (function (){var G__21268 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21268) : p1.call(null,G__21268));
})();
if(cljs.core.truth_(or__3922__auto____$3)){
return or__3922__auto____$3;
} else {
var or__3922__auto____$4 = (function (){var G__21270 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21270) : p2.call(null,G__21270));
})();
if(cljs.core.truth_(or__3922__auto____$4)){
return or__3922__auto____$4;
} else {
var G__21271 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21271) : p3.call(null,G__21271));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__3922__auto__ = (function (){var G__21273 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21273) : p1.call(null,G__21273));
})();
if(cljs.core.truth_(or__3922__auto__)){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (function (){var G__21275 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21275) : p2.call(null,G__21275));
})();
if(cljs.core.truth_(or__3922__auto____$1)){
return or__3922__auto____$1;
} else {
var or__3922__auto____$2 = (function (){var G__21277 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21277) : p3.call(null,G__21277));
})();
if(cljs.core.truth_(or__3922__auto____$2)){
return or__3922__auto____$2;
} else {
var or__3922__auto____$3 = (function (){var G__21279 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21279) : p1.call(null,G__21279));
})();
if(cljs.core.truth_(or__3922__auto____$3)){
return or__3922__auto____$3;
} else {
var or__3922__auto____$4 = (function (){var G__21281 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21281) : p2.call(null,G__21281));
})();
if(cljs.core.truth_(or__3922__auto____$4)){
return or__3922__auto____$4;
} else {
var or__3922__auto____$5 = (function (){var G__21283 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21283) : p3.call(null,G__21283));
})();
if(cljs.core.truth_(or__3922__auto____$5)){
return or__3922__auto____$5;
} else {
var or__3922__auto____$6 = (function (){var G__21285 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21285) : p1.call(null,G__21285));
})();
if(cljs.core.truth_(or__3922__auto____$6)){
return or__3922__auto____$6;
} else {
var or__3922__auto____$7 = (function (){var G__21287 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21287) : p2.call(null,G__21287));
})();
if(cljs.core.truth_(or__3922__auto____$7)){
return or__3922__auto____$7;
} else {
var G__21288 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21288) : p3.call(null,G__21288));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__21328__delegate = function (x,y,z,args){
var or__3922__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3922__auto__)){
return or__3922__auto__;
} else {
return cljs.core.some(((function (or__3922__auto__){
return (function (p1__20945_SHARP_){
var or__3922__auto____$1 = (function (){var G__21290 = p1__20945_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21290) : p1.call(null,G__21290));
})();
if(cljs.core.truth_(or__3922__auto____$1)){
return or__3922__auto____$1;
} else {
var or__3922__auto____$2 = (function (){var G__21292 = p1__20945_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21292) : p2.call(null,G__21292));
})();
if(cljs.core.truth_(or__3922__auto____$2)){
return or__3922__auto____$2;
} else {
var G__21293 = p1__20945_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21293) : p3.call(null,G__21293));
}
}
});})(or__3922__auto__))
,args);
}
};
var G__21328 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21329__i = 0, G__21329__a = new Array(arguments.length -  3);
while (G__21329__i < G__21329__a.length) {G__21329__a[G__21329__i] = arguments[G__21329__i + 3]; ++G__21329__i;}
  args = new cljs.core.IndexedSeq(G__21329__a,0);
} 
return G__21328__delegate.call(this,x,y,z,args);};
G__21328.cljs$lang$maxFixedArity = 3;
G__21328.cljs$lang$applyTo = (function (arglist__21330){
var x = cljs.core.first(arglist__21330);
arglist__21330 = cljs.core.next(arglist__21330);
var y = cljs.core.first(arglist__21330);
arglist__21330 = cljs.core.next(arglist__21330);
var z = cljs.core.first(arglist__21330);
var args = cljs.core.rest(arglist__21330);
return G__21328__delegate(x,y,z,args);
});
G__21328.cljs$core$IFn$_invoke$arity$variadic = G__21328__delegate;
return G__21328;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__21331 = null;
if (arguments.length > 3) {
var G__21332__i = 0, G__21332__a = new Array(arguments.length -  3);
while (G__21332__i < G__21332__a.length) {G__21332__a[G__21332__i] = arguments[G__21332__i + 3]; ++G__21332__i;}
G__21331 = new cljs.core.IndexedSeq(G__21332__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21331);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__21333__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__20946_SHARP_){
var G__21309 = x;
return (p1__20946_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20946_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21309) : p1__20946_SHARP_.call(null,G__21309));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__20947_SHARP_){
var or__3922__auto__ = (function (){var G__21311 = x;
return (p1__20947_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20947_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21311) : p1__20947_SHARP_.call(null,G__21311));
})();
if(cljs.core.truth_(or__3922__auto__)){
return or__3922__auto__;
} else {
var G__21312 = y;
return (p1__20947_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20947_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21312) : p1__20947_SHARP_.call(null,G__21312));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__20948_SHARP_){
var or__3922__auto__ = (function (){var G__21314 = x;
return (p1__20948_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20948_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21314) : p1__20948_SHARP_.call(null,G__21314));
})();
if(cljs.core.truth_(or__3922__auto__)){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (function (){var G__21316 = y;
return (p1__20948_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20948_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21316) : p1__20948_SHARP_.call(null,G__21316));
})();
if(cljs.core.truth_(or__3922__auto____$1)){
return or__3922__auto____$1;
} else {
var G__21317 = z;
return (p1__20948_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20948_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21317) : p1__20948_SHARP_.call(null,G__21317));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__21334__delegate = function (x,y,z,args){
var or__3922__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3922__auto__)){
return or__3922__auto__;
} else {
return cljs.core.some(((function (or__3922__auto__,ps__$1){
return (function (p1__20949_SHARP_){
return cljs.core.some(p1__20949_SHARP_,args);
});})(or__3922__auto__,ps__$1))
,ps__$1);
}
};
var G__21334 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21335__i = 0, G__21335__a = new Array(arguments.length -  3);
while (G__21335__i < G__21335__a.length) {G__21335__a[G__21335__i] = arguments[G__21335__i + 3]; ++G__21335__i;}
  args = new cljs.core.IndexedSeq(G__21335__a,0);
} 
return G__21334__delegate.call(this,x,y,z,args);};
G__21334.cljs$lang$maxFixedArity = 3;
G__21334.cljs$lang$applyTo = (function (arglist__21336){
var x = cljs.core.first(arglist__21336);
arglist__21336 = cljs.core.next(arglist__21336);
var y = cljs.core.first(arglist__21336);
arglist__21336 = cljs.core.next(arglist__21336);
var z = cljs.core.first(arglist__21336);
var args = cljs.core.rest(arglist__21336);
return G__21334__delegate(x,y,z,args);
});
G__21334.cljs$core$IFn$_invoke$arity$variadic = G__21334__delegate;
return G__21334;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__21337 = null;
if (arguments.length > 3) {
var G__21338__i = 0, G__21338__a = new Array(arguments.length -  3);
while (G__21338__i < G__21338__a.length) {G__21338__a[G__21338__i] = arguments[G__21338__i + 3]; ++G__21338__i;}
G__21337 = new cljs.core.IndexedSeq(G__21338__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21337);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__21333 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__21339__i = 0, G__21339__a = new Array(arguments.length -  3);
while (G__21339__i < G__21339__a.length) {G__21339__a[G__21339__i] = arguments[G__21339__i + 3]; ++G__21339__i;}
  ps = new cljs.core.IndexedSeq(G__21339__a,0);
} 
return G__21333__delegate.call(this,p1,p2,p3,ps);};
G__21333.cljs$lang$maxFixedArity = 3;
G__21333.cljs$lang$applyTo = (function (arglist__21340){
var p1 = cljs.core.first(arglist__21340);
arglist__21340 = cljs.core.next(arglist__21340);
var p2 = cljs.core.first(arglist__21340);
arglist__21340 = cljs.core.next(arglist__21340);
var p3 = cljs.core.first(arglist__21340);
var ps = cljs.core.rest(arglist__21340);
return G__21333__delegate(p1,p2,p3,ps);
});
G__21333.cljs$core$IFn$_invoke$arity$variadic = G__21333__delegate;
return G__21333;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__21341 = null;
if (arguments.length > 3) {
var G__21342__i = 0, G__21342__a = new Array(arguments.length -  3);
while (G__21342__i < G__21342__a.length) {G__21342__a[G__21342__i] = arguments[G__21342__i + 3]; ++G__21342__i;}
G__21341 = new cljs.core.IndexedSeq(G__21342__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__21341);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__21397 = null;
var G__21397__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__21397__1 = (function (result){
var G__21383 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21383) : rf.call(null,G__21383));
});
var G__21397__2 = (function (result,input){
var G__21384 = result;
var G__21385 = (function (){var G__21386 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21386) : f.call(null,G__21386));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21384,G__21385) : rf.call(null,G__21384,G__21385));
});
var G__21397__3 = (function() { 
var G__21398__delegate = function (result,input,inputs){
var G__21387 = result;
var G__21388 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21387,G__21388) : rf.call(null,G__21387,G__21388));
};
var G__21398 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__21399__i = 0, G__21399__a = new Array(arguments.length -  2);
while (G__21399__i < G__21399__a.length) {G__21399__a[G__21399__i] = arguments[G__21399__i + 2]; ++G__21399__i;}
  inputs = new cljs.core.IndexedSeq(G__21399__a,0);
} 
return G__21398__delegate.call(this,result,input,inputs);};
G__21398.cljs$lang$maxFixedArity = 2;
G__21398.cljs$lang$applyTo = (function (arglist__21400){
var result = cljs.core.first(arglist__21400);
arglist__21400 = cljs.core.next(arglist__21400);
var input = cljs.core.first(arglist__21400);
var inputs = cljs.core.rest(arglist__21400);
return G__21398__delegate(result,input,inputs);
});
G__21398.cljs$core$IFn$_invoke$arity$variadic = G__21398__delegate;
return G__21398;
})()
;
G__21397 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__21397__0.call(this);
case 1:
return G__21397__1.call(this,result);
case 2:
return G__21397__2.call(this,result,input);
default:
var G__21401 = null;
if (arguments.length > 2) {
var G__21402__i = 0, G__21402__a = new Array(arguments.length -  2);
while (G__21402__i < G__21402__a.length) {G__21402__a[G__21402__i] = arguments[G__21402__i + 2]; ++G__21402__i;}
G__21401 = new cljs.core.IndexedSeq(G__21402__a,0);
}
return G__21397__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__21401);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21397.cljs$lang$maxFixedArity = 2;
G__21397.cljs$lang$applyTo = G__21397__3.cljs$lang$applyTo;
G__21397.cljs$core$IFn$_invoke$arity$0 = G__21397__0;
G__21397.cljs$core$IFn$_invoke$arity$1 = G__21397__1;
G__21397.cljs$core$IFn$_invoke$arity$2 = G__21397__2;
G__21397.cljs$core$IFn$_invoke$arity$variadic = G__21397__3.cljs$core$IFn$_invoke$arity$variadic;
return G__21397;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4809__auto___21403 = size;
var i_21404 = (0);
while(true){
if((i_21404 < n__4809__auto___21403)){
cljs.core.chunk_append(b,(function (){var G__21389 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_21404);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21389) : f.call(null,G__21389));
})());

var G__21405 = (i_21404 + (1));
i_21404 = G__21405;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__21390 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21390) : f.call(null,G__21390));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__21391 = cljs.core.first(s1);
var G__21392 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21391,G__21392) : f.call(null,G__21391,G__21392));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__21393 = cljs.core.first(s1);
var G__21394 = cljs.core.first(s2);
var G__21395 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21393,G__21394,G__21395) : f.call(null,G__21393,G__21394,G__21395));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__21406__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__21343_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__21343_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__21406 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__21407__i = 0, G__21407__a = new Array(arguments.length -  4);
while (G__21407__i < G__21407__a.length) {G__21407__a[G__21407__i] = arguments[G__21407__i + 4]; ++G__21407__i;}
  colls = new cljs.core.IndexedSeq(G__21407__a,0);
} 
return G__21406__delegate.call(this,f,c1,c2,c3,colls);};
G__21406.cljs$lang$maxFixedArity = 4;
G__21406.cljs$lang$applyTo = (function (arglist__21408){
var f = cljs.core.first(arglist__21408);
arglist__21408 = cljs.core.next(arglist__21408);
var c1 = cljs.core.first(arglist__21408);
arglist__21408 = cljs.core.next(arglist__21408);
var c2 = cljs.core.first(arglist__21408);
arglist__21408 = cljs.core.next(arglist__21408);
var c3 = cljs.core.first(arglist__21408);
var colls = cljs.core.rest(arglist__21408);
return G__21406__delegate(f,c1,c2,c3,colls);
});
G__21406.cljs$core$IFn$_invoke$arity$variadic = G__21406__delegate;
return G__21406;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__21409 = null;
if (arguments.length > 4) {
var G__21410__i = 0, G__21410__a = new Array(arguments.length -  4);
while (G__21410__i < G__21410__a.length) {G__21410__a[G__21410__i] = arguments[G__21410__i + 4]; ++G__21410__i;}
G__21409 = new cljs.core.IndexedSeq(G__21410__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__21409);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__21419 = null;
var G__21419__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__21419__1 = (function (result){
var G__21416 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21416) : rf.call(null,G__21416));
});
var G__21419__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__21417 = result;
var G__21418 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21417,G__21418) : rf.call(null,G__21417,G__21418));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__21419 = function(result,input){
switch(arguments.length){
case 0:
return G__21419__0.call(this);
case 1:
return G__21419__1.call(this,result);
case 2:
return G__21419__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21419.cljs$core$IFn$_invoke$arity$0 = G__21419__0;
G__21419.cljs$core$IFn$_invoke$arity$1 = G__21419__1;
G__21419.cljs$core$IFn$_invoke$arity$2 = G__21419__2;
return G__21419;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__21426 = null;
var G__21426__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__21426__1 = (function (result){
var G__21423 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21423) : rf.call(null,G__21423));
});
var G__21426__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__21424 = result;
var G__21425 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21424,G__21425) : rf.call(null,G__21424,G__21425));
}
});
G__21426 = function(result,input){
switch(arguments.length){
case 0:
return G__21426__0.call(this);
case 1:
return G__21426__1.call(this,result);
case 2:
return G__21426__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21426.cljs$core$IFn$_invoke$arity$0 = G__21426__0;
G__21426.cljs$core$IFn$_invoke$arity$1 = G__21426__1;
G__21426.cljs$core$IFn$_invoke$arity$2 = G__21426__2;
return G__21426;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__21427 = (n__$1 - (1));
var G__21428 = cljs.core.rest(s);
n__$1 = G__21427;
coll__$1 = G__21428;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__21431 = cljs.core.next(s);
var G__21432 = cljs.core.next(lead);
s = G__21431;
lead = G__21432;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__21445 = null;
var G__21445__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__21445__1 = (function (result){
var G__21439 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21439) : rf.call(null,G__21439));
});
var G__21445__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__3910__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__3910__auto__)){
var G__21440 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__21440) : pred.call(null,G__21440));
} else {
return and__3910__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__21441 = result;
var G__21442 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21441,G__21442) : rf.call(null,G__21441,G__21442));
}
});
G__21445 = function(result,input){
switch(arguments.length){
case 0:
return G__21445__0.call(this);
case 1:
return G__21445__1.call(this,result);
case 2:
return G__21445__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21445.cljs$core$IFn$_invoke$arity$0 = G__21445__0;
G__21445.cljs$core$IFn$_invoke$arity$1 = G__21445__1;
G__21445.cljs$core$IFn$_invoke$arity$2 = G__21445__2;
return G__21445;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__3910__auto__ = s;
if(and__3910__auto__){
var G__21444 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__21444) : pred__$1.call(null,G__21444));
} else {
return and__3910__auto__;
}
})())){
var G__21446 = pred__$1;
var G__21447 = cljs.core.rest(s);
pred__$1 = G__21446;
coll__$1 = G__21447;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__21456 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21456) : f.call(null,G__21456));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__21459__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__21459 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__21460__i = 0, G__21460__a = new Array(arguments.length -  2);
while (G__21460__i < G__21460__a.length) {G__21460__a[G__21460__i] = arguments[G__21460__i + 2]; ++G__21460__i;}
  colls = new cljs.core.IndexedSeq(G__21460__a,0);
} 
return G__21459__delegate.call(this,c1,c2,colls);};
G__21459.cljs$lang$maxFixedArity = 2;
G__21459.cljs$lang$applyTo = (function (arglist__21461){
var c1 = cljs.core.first(arglist__21461);
arglist__21461 = cljs.core.next(arglist__21461);
var c2 = cljs.core.first(arglist__21461);
var colls = cljs.core.rest(arglist__21461);
return G__21459__delegate(c1,c2,colls);
});
G__21459.cljs$core$IFn$_invoke$arity$variadic = G__21459__delegate;
return G__21459;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__21462 = null;
if (arguments.length > 2) {
var G__21463__i = 0, G__21463__a = new Array(arguments.length -  2);
while (G__21463__i < G__21463__a.length) {G__21463__a[G__21463__i] = arguments[G__21463__i + 2]; ++G__21463__i;}
G__21462 = new cljs.core.IndexedSeq(G__21463__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__21462);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__21478 = null;
var G__21478__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__21478__1 = (function (result){
var G__21471 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21471) : rf.call(null,G__21471));
});
var G__21478__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__21472 = result;
var G__21473 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21472,G__21473) : rf.call(null,G__21472,G__21473));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__21474 = sepr;
var G__21475 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21474,G__21475) : rf.call(null,G__21474,G__21475));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__21476 = result;
var G__21477 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21476,G__21477) : rf.call(null,G__21476,G__21477));
}
});
G__21478 = function(result,input){
switch(arguments.length){
case 0:
return G__21478__0.call(this);
case 1:
return G__21478__1.call(this,result);
case 2:
return G__21478__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21478.cljs$core$IFn$_invoke$arity$0 = G__21478__0;
G__21478.cljs$core$IFn$_invoke$arity$1 = G__21478__1;
G__21478.cljs$core$IFn$_invoke$arity$2 = G__21478__2;
return G__21478;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__21487__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__21487 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__21488__i = 0, G__21488__a = new Array(arguments.length -  1);
while (G__21488__i < G__21488__a.length) {G__21488__a[G__21488__i] = arguments[G__21488__i + 1]; ++G__21488__i;}
  colls = new cljs.core.IndexedSeq(G__21488__a,0);
} 
return G__21487__delegate.call(this,f,colls);};
G__21487.cljs$lang$maxFixedArity = 1;
G__21487.cljs$lang$applyTo = (function (arglist__21489){
var f = cljs.core.first(arglist__21489);
var colls = cljs.core.rest(arglist__21489);
return G__21487__delegate(f,colls);
});
G__21487.cljs$core$IFn$_invoke$arity$variadic = G__21487__delegate;
return G__21487;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__21490 = null;
if (arguments.length > 1) {
var G__21491__i = 0, G__21491__a = new Array(arguments.length -  1);
while (G__21491__i < G__21491__a.length) {G__21491__a[G__21491__i] = arguments[G__21491__i + 1]; ++G__21491__i;}
G__21490 = new cljs.core.IndexedSeq(G__21491__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__21490);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__21510 = null;
var G__21510__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__21510__1 = (function (result){
var G__21504 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21504) : rf.call(null,G__21504));
});
var G__21510__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__21505 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__21505) : pred.call(null,G__21505));
})())){
var G__21506 = result;
var G__21507 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21506,G__21507) : rf.call(null,G__21506,G__21507));
} else {
return result;
}
});
G__21510 = function(result,input){
switch(arguments.length){
case 0:
return G__21510__0.call(this);
case 1:
return G__21510__1.call(this,result);
case 2:
return G__21510__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21510.cljs$core$IFn$_invoke$arity$0 = G__21510__0;
G__21510.cljs$core$IFn$_invoke$arity$1 = G__21510__1;
G__21510.cljs$core$IFn$_invoke$arity$2 = G__21510__2;
return G__21510;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4809__auto___21511 = size;
var i_21512 = (0);
while(true){
if((i_21512 < n__4809__auto___21511)){
if(cljs.core.truth_((function (){var G__21508 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_21512);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__21508) : pred.call(null,G__21508));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_21512));
} else {
}

var G__21513 = (i_21512 + (1));
i_21512 = G__21513;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__21509 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__21509) : pred.call(null,G__21509));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__21520 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__21520) : branch_QMARK_.call(null,G__21520));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__21521 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__21521) : children.call(null,G__21521));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__21522_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__21522_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__21525 = to;
if(G__21525){
var bit__4596__auto__ = (G__21525.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4596__auto__) || (G__21525.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__21526 = to;
if(G__21526){
var bit__4596__auto__ = (G__21526.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4596__auto__) || (G__21526.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__21528 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21528) : f.call(null,G__21528));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__21529__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__21529 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__21530__i = 0, G__21530__a = new Array(arguments.length -  4);
while (G__21530__i < G__21530__a.length) {G__21530__a[G__21530__i] = arguments[G__21530__i + 4]; ++G__21530__i;}
  colls = new cljs.core.IndexedSeq(G__21530__a,0);
} 
return G__21529__delegate.call(this,f,c1,c2,c3,colls);};
G__21529.cljs$lang$maxFixedArity = 4;
G__21529.cljs$lang$applyTo = (function (arglist__21531){
var f = cljs.core.first(arglist__21531);
arglist__21531 = cljs.core.next(arglist__21531);
var c1 = cljs.core.first(arglist__21531);
arglist__21531 = cljs.core.next(arglist__21531);
var c2 = cljs.core.first(arglist__21531);
arglist__21531 = cljs.core.next(arglist__21531);
var c3 = cljs.core.first(arglist__21531);
var colls = cljs.core.rest(arglist__21531);
return G__21529__delegate(f,c1,c2,c3,colls);
});
G__21529.cljs$core$IFn$_invoke$arity$variadic = G__21529__delegate;
return G__21529;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__21532 = null;
if (arguments.length > 4) {
var G__21533__i = 0, G__21533__a = new Array(arguments.length -  4);
while (G__21533__i < G__21533__a.length) {G__21533__a[G__21533__i] = arguments[G__21533__i + 4]; ++G__21533__i;}
G__21532 = new cljs.core.IndexedSeq(G__21533__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__21532);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__21535 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__21535) : pred.call(null,G__21535));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__21550 = m__$1;
if(G__21550){
var bit__4603__auto__ = (G__21550.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4603__auto__) || (G__21550.cljs$core$ILookup$)){
return true;
} else {
if((!G__21550.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__21550);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__21550);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__21551 = sentinel;
var G__21552 = m__$2;
var G__21553 = cljs.core.next(ks__$1);
sentinel = G__21551;
m__$1 = G__21552;
ks__$1 = G__21553;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__21554,v){
var vec__21559 = p__21554;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21559,(0),null);
var ks = cljs.core.nthnext(vec__21559,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__21560,f){
var vec__21598 = p__21560;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21598,(0),null);
var ks = cljs.core.nthnext(vec__21598,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__21599 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21599) : f.call(null,G__21599));
})());
}
});
var update_in__4 = (function (m,p__21561,f,a){
var vec__21600 = p__21561;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21600,(0),null);
var ks = cljs.core.nthnext(vec__21600,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__21601 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__21602 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21601,G__21602) : f.call(null,G__21601,G__21602));
})());
}
});
var update_in__5 = (function (m,p__21562,f,a,b){
var vec__21603 = p__21562;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21603,(0),null);
var ks = cljs.core.nthnext(vec__21603,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__21604 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__21605 = a;
var G__21606 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21604,G__21605,G__21606) : f.call(null,G__21604,G__21605,G__21606));
})());
}
});
var update_in__6 = (function (m,p__21563,f,a,b,c){
var vec__21607 = p__21563;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21607,(0),null);
var ks = cljs.core.nthnext(vec__21607,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__21608 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__21609 = a;
var G__21610 = b;
var G__21611 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__21608,G__21609,G__21610,G__21611) : f.call(null,G__21608,G__21609,G__21610,G__21611));
})());
}
});
var update_in__7 = (function() { 
var G__21613__delegate = function (m,p__21564,f,a,b,c,args){
var vec__21612 = p__21564;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21612,(0),null);
var ks = cljs.core.nthnext(vec__21612,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__21613 = function (m,p__21564,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__21614__i = 0, G__21614__a = new Array(arguments.length -  6);
while (G__21614__i < G__21614__a.length) {G__21614__a[G__21614__i] = arguments[G__21614__i + 6]; ++G__21614__i;}
  args = new cljs.core.IndexedSeq(G__21614__a,0);
} 
return G__21613__delegate.call(this,m,p__21564,f,a,b,c,args);};
G__21613.cljs$lang$maxFixedArity = 6;
G__21613.cljs$lang$applyTo = (function (arglist__21615){
var m = cljs.core.first(arglist__21615);
arglist__21615 = cljs.core.next(arglist__21615);
var p__21564 = cljs.core.first(arglist__21615);
arglist__21615 = cljs.core.next(arglist__21615);
var f = cljs.core.first(arglist__21615);
arglist__21615 = cljs.core.next(arglist__21615);
var a = cljs.core.first(arglist__21615);
arglist__21615 = cljs.core.next(arglist__21615);
var b = cljs.core.first(arglist__21615);
arglist__21615 = cljs.core.next(arglist__21615);
var c = cljs.core.first(arglist__21615);
var args = cljs.core.rest(arglist__21615);
return G__21613__delegate(m,p__21564,f,a,b,c,args);
});
G__21613.cljs$core$IFn$_invoke$arity$variadic = G__21613__delegate;
return G__21613;
})()
;
update_in = function(m,p__21564,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__21564,f);
case 4:
return update_in__4.call(this,m,p__21564,f,a);
case 5:
return update_in__5.call(this,m,p__21564,f,a,b);
case 6:
return update_in__6.call(this,m,p__21564,f,a,b,c);
default:
var G__21616 = null;
if (arguments.length > 6) {
var G__21617__i = 0, G__21617__a = new Array(arguments.length -  6);
while (G__21617__i < G__21617__a.length) {G__21617__a[G__21617__i] = arguments[G__21617__i + 6]; ++G__21617__i;}
G__21616 = new cljs.core.IndexedSeq(G__21617__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__21564,f,a,b,c, G__21616);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__21628 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21628) : f.call(null,G__21628));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__21629 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__21630 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21629,G__21630) : f.call(null,G__21629,G__21630));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__21631 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__21632 = x;
var G__21633 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21631,G__21632,G__21633) : f.call(null,G__21631,G__21632,G__21633));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__21634 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__21635 = x;
var G__21636 = y;
var G__21637 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__21634,G__21635,G__21636,G__21637) : f.call(null,G__21634,G__21635,G__21636,G__21637));
})());
});
var update__7 = (function() { 
var G__21638__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__21638 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__21639__i = 0, G__21639__a = new Array(arguments.length -  6);
while (G__21639__i < G__21639__a.length) {G__21639__a[G__21639__i] = arguments[G__21639__i + 6]; ++G__21639__i;}
  more = new cljs.core.IndexedSeq(G__21639__a,0);
} 
return G__21638__delegate.call(this,m,k,f,x,y,z,more);};
G__21638.cljs$lang$maxFixedArity = 6;
G__21638.cljs$lang$applyTo = (function (arglist__21640){
var m = cljs.core.first(arglist__21640);
arglist__21640 = cljs.core.next(arglist__21640);
var k = cljs.core.first(arglist__21640);
arglist__21640 = cljs.core.next(arglist__21640);
var f = cljs.core.first(arglist__21640);
arglist__21640 = cljs.core.next(arglist__21640);
var x = cljs.core.first(arglist__21640);
arglist__21640 = cljs.core.next(arglist__21640);
var y = cljs.core.first(arglist__21640);
arglist__21640 = cljs.core.next(arglist__21640);
var z = cljs.core.first(arglist__21640);
var more = cljs.core.rest(arglist__21640);
return G__21638__delegate(m,k,f,x,y,z,more);
});
G__21638.cljs$core$IFn$_invoke$arity$variadic = G__21638__delegate;
return G__21638;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__21641 = null;
if (arguments.length > 6) {
var G__21642__i = 0, G__21642__a = new Array(arguments.length -  6);
while (G__21642__i < G__21642__a.length) {G__21642__a[G__21642__i] = arguments[G__21642__i + 6]; ++G__21642__i;}
G__21641 = new cljs.core.IndexedSeq(G__21642__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__21641);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__21643 = (ll - (5));
var G__21644 = r;
ll = G__21643;
ret = G__21644;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__21649 = cljs.core.pv_aget(node,(0));
var G__21650 = (level - (5));
node = G__21649;
level = G__21650;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__21651 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__21652 = (level - (5));
node = G__21651;
level = G__21652;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__21662 = init__$2;
var G__21663 = (j + i);
var G__21664 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21662,G__21663,G__21664) : f.call(null,G__21662,G__21663,G__21664));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__21675 = (j + (1));
var G__21676 = init__$3;
j = G__21675;
init__$2 = G__21676;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__21665 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21665) : cljs.core.deref.call(null,G__21665));
} else {
var G__21677 = (i + len);
var G__21678 = init__$2;
i = G__21677;
init__$1 = G__21678;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4343__auto__ = self__.__hash;
if(!((h__4343__auto__ == null))){
return h__4343__auto__;
} else {
var h__4343__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4343__auto____$1;

return h__4343__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__21666 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__21666) : cljs.core.tv_editable_root.call(null,G__21666));
})(),(function (){var G__21667 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__21667) : cljs.core.tv_editable_tail.call(null,G__21667));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__21668 = init__$2;
var G__21669 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21668,G__21669) : f.call(null,G__21668,G__21669));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__21679 = (j + (1));
var G__21680 = init__$3;
j = G__21679;
init__$2 = G__21680;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__21670 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21670) : cljs.core.deref.call(null,G__21670));
} else {
var G__21681 = (i + len);
var G__21682 = init__$2;
i = G__21681;
init__$1 = G__21682;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__21671 = coll__$1;
var G__21672 = cljs.core.first_array_for_longvec(coll__$1);
var G__21673 = (0);
var G__21674 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__21671,G__21672,G__21673,G__21674) : cljs.core.chunked_seq.call(null,G__21671,G__21672,G__21673,G__21674));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__4809__auto___21683 = len;
var i_21684 = (0);
while(true){
if((i_21684 < n__4809__auto___21683)){
(new_tail[i_21684] = (self__.tail[i_21684]));

var G__21685 = (i_21684 + (1));
i_21684 = G__21685;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__21686 = null;
var G__21686__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__21686__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__21686 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__21686__2.call(this,self__,k);
case 3:
return G__21686__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21686.cljs$core$IFn$_invoke$arity$2 = G__21686__2;
G__21686.cljs$core$IFn$_invoke$arity$3 = G__21686__3;
return G__21686;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args21661){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21661)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__21687 = (i + (1));
var G__21688 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__21687;
out = G__21688;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4900__auto__ = this;
return cljs.core.es6_iterator(this__4900__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__21689__i = 0, G__21689__a = new Array(arguments.length -  0);
while (G__21689__i < G__21689__a.length) {G__21689__a[G__21689__i] = arguments[G__21689__i + 0]; ++G__21689__i;}
  args = new cljs.core.IndexedSeq(G__21689__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__21690){
var args = cljs.core.seq(arglist__21690);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__21691 = self__.vec;
var G__21692 = self__.node;
var G__21693 = self__.i;
var G__21694 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__21691,G__21692,G__21693,G__21694) : cljs.core.chunked_seq.call(null,G__21691,G__21692,G__21693,G__21694));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4343__auto__ = self__.__hash;
if(!((h__4343__auto__ == null))){
return h__4343__auto__;
} else {
var h__4343__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4343__auto____$1;

return h__4343__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__21695 = self__.vec;
var G__21696 = (self__.i + self__.off);
var G__21697 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__21695,G__21696,G__21697) : cljs.core.subvec.call(null,G__21695,G__21696,G__21697));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__21698 = self__.vec;
var G__21699 = (self__.i + self__.off);
var G__21700 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__21698,G__21699,G__21700) : cljs.core.subvec.call(null,G__21698,G__21699,G__21700));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__21701 = self__.vec;
var G__21702 = self__.node;
var G__21703 = self__.i;
var G__21704 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__21701,G__21702,G__21703,G__21704) : cljs.core.chunked_seq.call(null,G__21701,G__21702,G__21703,G__21704));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__21705 = self__.vec;
var G__21706 = cljs.core.unchecked_array_for(self__.vec,end);
var G__21707 = end;
var G__21708 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__21705,G__21706,G__21707,G__21708) : cljs.core.chunked_seq.call(null,G__21705,G__21706,G__21707,G__21708));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__21709 = self__.vec;
var G__21710 = self__.node;
var G__21711 = self__.i;
var G__21712 = self__.off;
var G__21713 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__21709,G__21710,G__21711,G__21712,G__21713) : cljs.core.chunked_seq.call(null,G__21709,G__21710,G__21711,G__21712,G__21713));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__21714 = self__.vec;
var G__21715 = cljs.core.unchecked_array_for(self__.vec,end);
var G__21716 = end;
var G__21717 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__21714,G__21715,G__21716,G__21717) : cljs.core.chunked_seq.call(null,G__21714,G__21715,G__21716,G__21717));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4900__auto__ = this;
return cljs.core.es6_iterator(this__4900__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__21719 = self__.meta;
var G__21720 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__21721 = self__.start;
var G__21722 = (function (){var x__4239__auto__ = self__.end;
var y__4240__auto__ = (v_pos + (1));
return ((x__4239__auto__ > y__4240__auto__) ? x__4239__auto__ : y__4240__auto__);
})();
var G__21723 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__21719,G__21720,G__21721,G__21722,G__21723) : cljs.core.build_subvec.call(null,G__21719,G__21720,G__21721,G__21722,G__21723));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__21724 = self__.meta;
var G__21725 = self__.v;
var G__21726 = self__.start;
var G__21727 = (self__.end - (1));
var G__21728 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__21724,G__21725,G__21726,G__21727,G__21728) : cljs.core.build_subvec.call(null,G__21724,G__21725,G__21726,G__21727,G__21728));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4343__auto__ = self__.__hash;
if(!((h__4343__auto__ == null))){
return h__4343__auto__;
} else {
var h__4343__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4343__auto____$1;

return h__4343__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__21730 = meta__$1;
var G__21731 = self__.v;
var G__21732 = self__.start;
var G__21733 = self__.end;
var G__21734 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__21730,G__21731,G__21732,G__21733,G__21734) : cljs.core.build_subvec.call(null,G__21730,G__21731,G__21732,G__21733,G__21734));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__21735 = self__.meta;
var G__21736 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__21737 = self__.start;
var G__21738 = (self__.end + (1));
var G__21739 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__21735,G__21736,G__21737,G__21738,G__21739) : cljs.core.build_subvec.call(null,G__21735,G__21736,G__21737,G__21738,G__21739));
});

cljs.core.Subvec.prototype.call = (function() {
var G__21740 = null;
var G__21740__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__21740__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__21740 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__21740__2.call(this,self__,k);
case 3:
return G__21740__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21740.cljs$core$IFn$_invoke$arity$2 = G__21740__2;
G__21740.cljs$core$IFn$_invoke$arity$3 = G__21740__3;
return G__21740;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args21718){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21718)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4900__auto__ = this;
return cljs.core.es6_iterator(this__4900__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__21741 = meta;
var G__21742 = v.v;
var G__21743 = (v.start + start);
var G__21744 = (v.start + end);
var G__21745 = __hash;
meta = G__21741;
v = G__21742;
start = G__21743;
end = G__21744;
__hash = G__21745;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj21752 = {};
return obj21752;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__21760 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__21761 = (level - (5));
node = G__21760;
level = G__21761;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__21765 = null;
var G__21765__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__21765__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__21765 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__21765__2.call(this,self__,k);
case 3:
return G__21765__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21765.cljs$core$IFn$_invoke$arity$2 = G__21765__2;
G__21765.cljs$core$IFn$_invoke$arity$3 = G__21765__3;
return G__21765;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args21762){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21762)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4343__auto__ = self__.__hash;
if(!((h__4343__auto__ == null))){
return h__4343__auto__;
} else {
var h__4343__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4343__auto____$1;

return h__4343__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4900__auto__ = this;
return cljs.core.es6_iterator(this__4900__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4343__auto__ = self__.__hash;
if(!((h__4343__auto__ == null))){
return h__4343__auto__;
} else {
var h__4343__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4343__auto____$1;

return h__4343__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__3922__auto__ = self__.front;
if(cljs.core.truth_(or__3922__auto__)){
return or__3922__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3922__auto__ = self__.rear;
if(cljs.core.truth_(or__3922__auto__)){
return or__3922__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4900__auto__ = this;
return cljs.core.es6_iterator(this__4900__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__21766 = (i + incr);
i = G__21766;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__21767 = (i + (1));
var G__21768 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__21767;
out = G__21768;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj21772 = {};
return obj21772;
})();
var l = ks.length;
var i_21773 = (0);
while(true){
if((i_21773 < l)){
var k_21774 = (ks[i_21773]);
(new_obj[k_21774] = (obj[k_21774]));

var G__21775 = (i_21773 + (1));
i_21773 = G__21775;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3910__auto__ = (function (){var G__21779 = k;
return goog.isString(G__21779);
})();
if(cljs.core.truth_(and__3910__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3910__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__21780 = init__$1;
var G__21781 = k;
var G__21782 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21780,G__21781,G__21782) : f.call(null,G__21780,G__21781,G__21782));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__21783 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21783) : cljs.core.deref.call(null,G__21783));
} else {
var G__21789 = cljs.core.rest(keys__$1);
var G__21790 = init__$2;
keys__$1 = G__21789;
init__$1 = G__21790;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4343__auto__ = self__.__hash;
if(!((h__4343__auto__ == null))){
return h__4343__auto__;
} else {
var h__4343__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4343__auto____$1;

return h__4343__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3910__auto__ = (function (){var G__21785 = k;
return goog.isString(G__21785);
})();
if(cljs.core.truth_(and__3910__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3910__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__21786 = k;
return goog.isString(G__21786);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3910__auto__ = (function (){var G__21788 = k;
return goog.isString(G__21788);
})();
if(cljs.core.truth_(and__3910__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3910__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__21776_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__21776_SHARP_,(self__.strobj[p1__21776_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__21791 = null;
var G__21791__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__21791__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__21791 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__21791__2.call(this,self__,k);
case 3:
return G__21791__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21791.cljs$core$IFn$_invoke$arity$2 = G__21791__2;
G__21791.cljs$core$IFn$_invoke$arity$3 = G__21791__3;
return G__21791;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args21777){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21777)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj21793 = {};
return obj21793;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__21794 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21794,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21794,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__21795 = (i + (2));
i = G__21795;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__21796 = (i + (2));
i = G__21796;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__21797 = (i + (2));
i = G__21797;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__21798 = (i + (2));
i = G__21798;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__21799 = (i + (2));
i = G__21799;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__3922__auto__ = (function (){var G__21803 = k;
return goog.isString(G__21803);
})();
if(cljs.core.truth_(or__3922__auto__)){
return or__3922__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_21804 = (0);
while(true){
if((i_21804 < l)){
(narr[i_21804] = (arr[i_21804]));

var G__21805 = (i_21804 + (1));
i_21804 = G__21805;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4900__auto__ = this;
return cljs.core.es6_iterator(this__4900__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__21807 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__21807) : cljs.core.keys.call(null,G__21807));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__21808 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__21808) : cljs.core.vals.call(null,G__21808));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__21809 = cljs.core.seq(coll);
var chunk__21810 = null;
var count__21811 = (0);
var i__21812 = (0);
while(true){
if((i__21812 < count__21811)){
var vec__21813 = chunk__21810.cljs$core$IIndexed$_nth$arity$2(null,i__21812);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21813,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21813,(1),null);
var G__21814_21827 = v;
var G__21815_21828 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21814_21827,G__21815_21828) : f.call(null,G__21814_21827,G__21815_21828));

var G__21829 = seq__21809;
var G__21830 = chunk__21810;
var G__21831 = count__21811;
var G__21832 = (i__21812 + (1));
seq__21809 = G__21829;
chunk__21810 = G__21830;
count__21811 = G__21831;
i__21812 = G__21832;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__21809);
if(temp__4126__auto__){
var seq__21809__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__21809__$1)){
var c__4709__auto__ = cljs.core.chunk_first(seq__21809__$1);
var G__21833 = cljs.core.chunk_rest(seq__21809__$1);
var G__21834 = c__4709__auto__;
var G__21835 = cljs.core.count(c__4709__auto__);
var G__21836 = (0);
seq__21809 = G__21833;
chunk__21810 = G__21834;
count__21811 = G__21835;
i__21812 = G__21836;
continue;
} else {
var vec__21816 = cljs.core.first(seq__21809__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21816,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21816,(1),null);
var G__21817_21837 = v;
var G__21818_21838 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21817_21837,G__21818_21838) : f.call(null,G__21817_21837,G__21818_21838));

var G__21839 = cljs.core.next(seq__21809__$1);
var G__21840 = null;
var G__21841 = (0);
var G__21842 = (0);
seq__21809 = G__21839;
chunk__21810 = G__21840;
count__21811 = G__21841;
i__21812 = G__21842;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__21819 = init__$1;
var G__21820 = (self__.arr[i]);
var G__21821 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21819,G__21820,G__21821) : f.call(null,G__21819,G__21820,G__21821));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__21822 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21822) : cljs.core.deref.call(null,G__21822));
} else {
var G__21843 = (i + (2));
var G__21844 = init__$2;
i = G__21843;
init__$1 = G__21844;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4343__auto__ = self__.__hash;
if(!((h__4343__auto__ == null))){
return h__4343__auto__;
} else {
var h__4343__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4343__auto____$1;

return h__4343__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__21823 = other;
if(G__21823){
var bit__4596__auto__ = (G__21823.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4596__auto__) || (G__21823.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__21845 = (i + (2));
i = G__21845;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj21825 = {};
return obj21825;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__21846 = (s + (2));
var G__21847 = d;
s = G__21846;
d = G__21847;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__21848 = (s + (2));
var G__21849 = (d + (2));
s = G__21848;
d = G__21849;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__21826 = cljs.core.aclone(self__.arr);
(G__21826[(idx + (1))] = v);

return G__21826;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__21850 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__21851 = cljs.core.next(es);
ret = G__21850;
es = G__21851;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__21852 = null;
var G__21852__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__21852__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__21852 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__21852__2.call(this,self__,k);
case 3:
return G__21852__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21852.cljs$core$IFn$_invoke$arity$2 = G__21852__2;
G__21852.cljs$core$IFn$_invoke$arity$3 = G__21852__3;
return G__21852;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args21806){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21806)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__21853 = (i + (2));
var G__21854 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__21853;
ret = G__21854;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4900__auto__ = this;
return cljs.core.es6_iterator(this__4900__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__21855_21863 = self__.arr;
G__21855_21863.pop();

G__21855_21863.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__21856 = self__.len;
var G__21857 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__21856,G__21857) : cljs.core.array__GT_transient_hash_map.call(null,G__21856,G__21857));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__21858 = o;
if(G__21858){
var bit__4603__auto__ = (G__21858.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4603__auto__) || (G__21858.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__21858.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__21858);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__21858);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__21859 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__21859) : cljs.core.key.call(null,G__21859));
})(),(function (){var G__21860 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__21860) : cljs.core.val.call(null,G__21860));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__21864 = cljs.core.next(es);
var G__21865 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__21861 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__21861) : cljs.core.key.call(null,G__21861));
})(),(function (){var G__21862 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__21862) : cljs.core.val.call(null,G__21862));
})());
es = G__21864;
tcoll__$2 = G__21865;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__21866 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__21867 = (i + (2));
out = G__21866;
i = G__21867;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__21870 = cljs.core.aclone(arr);
(G__21870[i] = a);

return G__21870;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__21871 = cljs.core.aclone(arr);
(G__21871[i] = a);

(G__21871[j] = b);

return G__21871;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__21876 = init__$1;
var G__21877 = k;
var G__21878 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21876,G__21877,G__21878) : f.call(null,G__21876,G__21877,G__21878));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__21879 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21879) : cljs.core.deref.call(null,G__21879));
} else {
var G__21880 = (i + (2));
var G__21881 = init__$2;
i = G__21880;
init__$1 = G__21881;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__21882 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__21882) : cljs.core.create_inode_seq.call(null,G__21882));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_21896 = (0);
var j_21897 = (0);
while(true){
if((i_21896 < (32))){
if((((self__.bitmap >>> i_21896) & (1)) === (0))){
var G__21898 = (i_21896 + (1));
var G__21899 = j_21897;
i_21896 = G__21898;
j_21897 = G__21899;
continue;
} else {
(nodes[i_21896] = ((!(((self__.arr[j_21897]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_21897])),(self__.arr[j_21897]),(self__.arr[(j_21897 + (1))]),added_leaf_QMARK_):(self__.arr[(j_21897 + (1))])));

var G__21900 = (i_21896 + (1));
var G__21901 = (j_21897 + (2));
i_21896 = G__21900;
j_21897 = G__21901;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__21883 = edit__$1;
var G__21884 = (shift + (5));
var G__21885 = key_or_nil;
var G__21886 = val_or_node;
var G__21887 = hash;
var G__21888 = key;
var G__21889 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__21883,G__21884,G__21885,G__21886,G__21887,G__21888,G__21889) : cljs.core.create_node.call(null,G__21883,G__21884,G__21885,G__21886,G__21887,G__21888,G__21889));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_21902 = (0);
var j_21903 = (0);
while(true){
if((i_21902 < (32))){
if((((self__.bitmap >>> i_21902) & (1)) === (0))){
var G__21904 = (i_21902 + (1));
var G__21905 = j_21903;
i_21902 = G__21904;
j_21903 = G__21905;
continue;
} else {
(nodes[i_21902] = ((!(((self__.arr[j_21903]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_21903])),(self__.arr[j_21903]),(self__.arr[(j_21903 + (1))]),added_leaf_QMARK_):(self__.arr[(j_21903 + (1))])));

var G__21906 = (i_21902 + (1));
var G__21907 = (j_21903 + (2));
i_21902 = G__21906;
j_21903 = G__21907;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__21890 = (shift + (5));
var G__21891 = key_or_nil;
var G__21892 = val_or_node;
var G__21893 = hash;
var G__21894 = key;
var G__21895 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__21890,G__21891,G__21892,G__21893,G__21894,G__21895) : cljs.core.create_node.call(null,G__21890,G__21891,G__21892,G__21893,G__21894,G__21895));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__21908 = (i + (1));
var G__21909 = (j + (2));
var G__21910 = (bitmap | ((1) << i));
i = G__21908;
j = G__21909;
bitmap = G__21910;
continue;
} else {
var G__21911 = (i + (1));
var G__21912 = j;
var G__21913 = bitmap;
i = G__21911;
j = G__21912;
bitmap = G__21913;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__21914 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__21914) : cljs.core.create_array_node_seq.call(null,G__21914));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__21915 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21915) : cljs.core.deref.call(null,G__21915));
} else {
var G__21916 = (i + (1));
var G__21917 = init__$2;
i = G__21916;
init__$1 = G__21917;
continue;
}
} else {
var G__21918 = (i + (1));
var G__21919 = init__$1;
i = G__21918;
init__$1 = G__21919;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__21920 = (i + (2));
i = G__21920;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__21921 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__21921) : cljs.core.create_inode_seq.call(null,G__21921));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4343__auto__ = self__.__hash;
if(!((h__4343__auto__ == null))){
return h__4343__auto__;
} else {
var h__4343__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4343__auto____$1;

return h__4343__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__21922 = self__.nodes;
var G__21923 = (self__.i + (2));
var G__21924 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__21922,G__21923,G__21924) : cljs.core.create_inode_seq.call(null,G__21922,G__21923,G__21924));
} else {
var G__21925 = self__.nodes;
var G__21926 = self__.i;
var G__21927 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__21925,G__21926,G__21927) : cljs.core.create_inode_seq.call(null,G__21925,G__21926,G__21927));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4900__auto__ = this;
return cljs.core.es6_iterator(this__4900__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__21931 = (j + (2));
j = G__21931;
continue;
}
} else {
var G__21932 = (j + (2));
j = G__21932;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4343__auto__ = self__.__hash;
if(!((h__4343__auto__ == null))){
return h__4343__auto__;
} else {
var h__4343__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4343__auto____$1;

return h__4343__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__21933 = null;
var G__21934 = self__.nodes;
var G__21935 = self__.i;
var G__21936 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__21933,G__21934,G__21935,G__21936) : cljs.core.create_array_node_seq.call(null,G__21933,G__21934,G__21935,G__21936));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4900__auto__ = this;
return cljs.core.es6_iterator(this__4900__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__21941 = (j + (1));
j = G__21941;
continue;
}
} else {
var G__21942 = (j + (1));
j = G__21942;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__21944 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__21944) : cljs.core.keys.call(null,G__21944));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__21945 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__21945) : cljs.core.vals.call(null,G__21945));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__21946 = cljs.core.seq(coll);
var chunk__21947 = null;
var count__21948 = (0);
var i__21949 = (0);
while(true){
if((i__21949 < count__21948)){
var vec__21950 = chunk__21947.cljs$core$IIndexed$_nth$arity$2(null,i__21949);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21950,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21950,(1),null);
var G__21951_21962 = v;
var G__21952_21963 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21951_21962,G__21952_21963) : f.call(null,G__21951_21962,G__21952_21963));

var G__21964 = seq__21946;
var G__21965 = chunk__21947;
var G__21966 = count__21948;
var G__21967 = (i__21949 + (1));
seq__21946 = G__21964;
chunk__21947 = G__21965;
count__21948 = G__21966;
i__21949 = G__21967;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__21946);
if(temp__4126__auto__){
var seq__21946__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__21946__$1)){
var c__4709__auto__ = cljs.core.chunk_first(seq__21946__$1);
var G__21968 = cljs.core.chunk_rest(seq__21946__$1);
var G__21969 = c__4709__auto__;
var G__21970 = cljs.core.count(c__4709__auto__);
var G__21971 = (0);
seq__21946 = G__21968;
chunk__21947 = G__21969;
count__21948 = G__21970;
i__21949 = G__21971;
continue;
} else {
var vec__21953 = cljs.core.first(seq__21946__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21953,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21953,(1),null);
var G__21954_21972 = v;
var G__21955_21973 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21954_21972,G__21955_21973) : f.call(null,G__21954_21972,G__21955_21973));

var G__21974 = cljs.core.next(seq__21946__$1);
var G__21975 = null;
var G__21976 = (0);
var G__21977 = (0);
seq__21946 = G__21974;
chunk__21947 = G__21975;
count__21948 = G__21976;
i__21949 = G__21977;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__21956 = init;
var G__21957 = null;
var G__21958 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21956,G__21957,G__21958) : f.call(null,G__21956,G__21957,G__21958));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__21959 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21959) : cljs.core.deref.call(null,G__21959));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4343__auto__ = self__.__hash;
if(!((h__4343__auto__ == null))){
return h__4343__auto__;
} else {
var h__4343__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4343__auto____$1;

return h__4343__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj21961 = {};
return obj21961;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__21978 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__21979 = cljs.core.next(es);
ret = G__21978;
es = G__21979;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__21980 = null;
var G__21980__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__21980__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__21980 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__21980__2.call(this,self__,k);
case 3:
return G__21980__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21980.cljs$core$IFn$_invoke$arity$2 = G__21980__2;
G__21980.cljs$core$IFn$_invoke$arity$3 = G__21980__3;
return G__21980;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args21943){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21943)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__21981 = (i + (2));
var G__21982 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__21981;
ret = G__21982;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__21983 = (i + (1));
var G__21984 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__21983;
out = G__21984;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4900__auto__ = this;
return cljs.core.es6_iterator(this__4900__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__21985 = o;
if(G__21985){
var bit__4603__auto__ = (G__21985.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4603__auto__) || (G__21985.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__21985.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__21985);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__21985);
}
})()){
return tcoll.assoc_BANG_((function (){var G__21986 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__21986) : cljs.core.key.call(null,G__21986));
})(),(function (){var G__21987 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__21987) : cljs.core.val.call(null,G__21987));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__21990 = cljs.core.next(es);
var G__21991 = tcoll__$1.assoc_BANG_((function (){var G__21988 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__21988) : cljs.core.key.call(null,G__21988));
})(),(function (){var G__21989 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__21989) : cljs.core.val.call(null,G__21989));
})());
es = G__21990;
tcoll__$1 = G__21991;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__21992 = ((ascending_QMARK_)?t.left:t.right);
var G__21993 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__21992;
stack__$1 = G__21993;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4343__auto__ = self__.__hash;
if(!((h__4343__auto__ == null))){
return h__4343__auto__;
} else {
var h__4343__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4343__auto____$1;

return h__4343__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4900__auto__ = this;
return cljs.core.es6_iterator(this__4900__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__22006 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22006) : cljs.core.deref.call(null,G__22006));
} else {
var init__$2 = (function (){var G__22007 = init__$1;
var G__22008 = node.key;
var G__22009 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22007,G__22008,G__22009) : f.call(null,G__22007,G__22008,G__22009));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__22010 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22010) : cljs.core.deref.call(null,G__22010));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__22011 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22011) : cljs.core.deref.call(null,G__22011));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4343__auto__ = self__.__hash;
if(!((h__4343__auto__ == null))){
return h__4343__auto__;
} else {
var h__4343__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4343__auto____$1;

return h__4343__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__22013 = null;
var G__22013__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__22013__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__22013 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22013__2.call(this,self__,k);
case 3:
return G__22013__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22013.cljs$core$IFn$_invoke$arity$2 = G__22013__2;
G__22013.cljs$core$IFn$_invoke$arity$3 = G__22013__3;
return G__22013;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args22012){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22012)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4900__auto__ = this;
return cljs.core.es6_iterator(this__4900__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4343__auto__ = self__.__hash;
if(!((h__4343__auto__ == null))){
return h__4343__auto__;
} else {
var h__4343__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4343__auto____$1;

return h__4343__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__22015 = null;
var G__22015__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__22015__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__22015 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22015__2.call(this,self__,k);
case 3:
return G__22015__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22015.cljs$core$IFn$_invoke$arity$2 = G__22015__2;
G__22015.cljs$core$IFn$_invoke$arity$3 = G__22015__3;
return G__22015;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args22014){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22014)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4900__auto__ = this;
return cljs.core.es6_iterator(this__4900__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__22028 = k;
var G__22029 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__22028,G__22029) : comp.call(null,G__22028,G__22029));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__22048 = k;
var G__22049 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__22048,G__22049) : comp.call(null,G__22048,G__22049));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__22060 = k;
var G__22061 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__22060,G__22061) : comp.call(null,G__22060,G__22061));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__22063 = cljs.core.seq(coll);
var chunk__22064 = null;
var count__22065 = (0);
var i__22066 = (0);
while(true){
if((i__22066 < count__22065)){
var vec__22067 = chunk__22064.cljs$core$IIndexed$_nth$arity$2(null,i__22066);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22067,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22067,(1),null);
var G__22068_22080 = v;
var G__22069_22081 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22068_22080,G__22069_22081) : f.call(null,G__22068_22080,G__22069_22081));

var G__22082 = seq__22063;
var G__22083 = chunk__22064;
var G__22084 = count__22065;
var G__22085 = (i__22066 + (1));
seq__22063 = G__22082;
chunk__22064 = G__22083;
count__22065 = G__22084;
i__22066 = G__22085;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__22063);
if(temp__4126__auto__){
var seq__22063__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__22063__$1)){
var c__4709__auto__ = cljs.core.chunk_first(seq__22063__$1);
var G__22086 = cljs.core.chunk_rest(seq__22063__$1);
var G__22087 = c__4709__auto__;
var G__22088 = cljs.core.count(c__4709__auto__);
var G__22089 = (0);
seq__22063 = G__22086;
chunk__22064 = G__22087;
count__22065 = G__22088;
i__22066 = G__22089;
continue;
} else {
var vec__22070 = cljs.core.first(seq__22063__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22070,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22070,(1),null);
var G__22071_22090 = v;
var G__22072_22091 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22071_22090,G__22072_22091) : f.call(null,G__22071_22090,G__22072_22091));

var G__22092 = cljs.core.next(seq__22063__$1);
var G__22093 = null;
var G__22094 = (0);
var G__22095 = (0);
seq__22063 = G__22092;
chunk__22064 = G__22093;
count__22065 = G__22094;
i__22066 = G__22095;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__22073 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__22073) : cljs.core.keys.call(null,G__22073));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__22074 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__22074) : cljs.core.vals.call(null,G__22074));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__22075 = k;
var G__22076 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__22075,G__22076) : self__.comp.call(null,G__22075,G__22076));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__22096 = t.left;
t = G__22096;
continue;
} else {
var G__22097 = t.right;
t = G__22097;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4343__auto__ = self__.__hash;
if(!((h__4343__auto__ == null))){
return h__4343__auto__;
} else {
var h__4343__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4343__auto____$1;

return h__4343__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__22098 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__22099 = cljs.core.next(es);
ret = G__22098;
es = G__22099;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__22100 = null;
var G__22100__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__22100__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__22100 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22100__2.call(this,self__,k);
case 3:
return G__22100__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22100.cljs$core$IFn$_invoke$arity$2 = G__22100__2;
G__22100.cljs$core$IFn$_invoke$arity$3 = G__22100__3;
return G__22100;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args22062){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22062)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__22077 = k;
var G__22078 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__22077,G__22078) : self__.comp.call(null,G__22077,G__22078));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__22101 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__22102 = t.left;
stack = G__22101;
t = G__22102;
continue;
} else {
var G__22103 = stack;
var G__22104 = t.right;
stack = G__22103;
t = G__22104;
continue;
}
} else {
if((c > (0))){
var G__22105 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__22106 = t.right;
stack = G__22105;
t = G__22106;
continue;
} else {
var G__22107 = stack;
var G__22108 = t.left;
stack = G__22107;
t = G__22108;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__22079 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__22079) : cljs.core.key.call(null,G__22079));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4900__auto__ = this;
return cljs.core.es6_iterator(this__4900__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__22109 = cljs.core.nnext(in$);
var G__22110 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__22109;
out = G__22110;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__22111__i = 0, G__22111__a = new Array(arguments.length -  0);
while (G__22111__i < G__22111__a.length) {G__22111__a[G__22111__i] = arguments[G__22111__i + 0]; ++G__22111__i;}
  keyvals = new cljs.core.IndexedSeq(G__22111__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__22112){
var keyvals = cljs.core.seq(arglist__22112);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__22113__i = 0, G__22113__a = new Array(arguments.length -  0);
while (G__22113__i < G__22113__a.length) {G__22113__a[G__22113__i] = arguments[G__22113__i + 0]; ++G__22113__i;}
  keyvals = new cljs.core.IndexedSeq(G__22113__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__22114){
var keyvals = cljs.core.seq(arglist__22114);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj22118 = {};
return obj22118;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__22119 = cljs.core.nnext(kvs);
kvs = G__22119;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__22120__i = 0, G__22120__a = new Array(arguments.length -  0);
while (G__22120__i < G__22120__a.length) {G__22120__a[G__22120__i] = arguments[G__22120__i + 0]; ++G__22120__i;}
  keyvals = new cljs.core.IndexedSeq(G__22120__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__22121){
var keyvals = cljs.core.seq(arglist__22121);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__22122 = cljs.core.nnext(in$);
var G__22123 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__22122;
out = G__22123;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__22124__i = 0, G__22124__a = new Array(arguments.length -  0);
while (G__22124__i < G__22124__a.length) {G__22124__a[G__22124__i] = arguments[G__22124__i + 0]; ++G__22124__i;}
  keyvals = new cljs.core.IndexedSeq(G__22124__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__22125){
var keyvals = cljs.core.seq(arglist__22125);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__22126 = cljs.core.nnext(in$);
var G__22127 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__22126;
out = G__22127;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__22128__i = 0, G__22128__a = new Array(arguments.length -  1);
while (G__22128__i < G__22128__a.length) {G__22128__a[G__22128__i] = arguments[G__22128__i + 1]; ++G__22128__i;}
  keyvals = new cljs.core.IndexedSeq(G__22128__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__22129){
var comparator = cljs.core.first(arglist__22129);
var keyvals = cljs.core.rest(arglist__22129);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__22130 = self__.mseq;
if(G__22130){
var bit__4603__auto__ = (G__22130.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4603__auto__) || (G__22130.cljs$core$INext$)){
return true;
} else {
if((!G__22130.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__22130);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__22130);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__22131 = self__.mseq;
if(G__22131){
var bit__4603__auto__ = (G__22131.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4603__auto__) || (G__22131.cljs$core$INext$)){
return true;
} else {
if((!G__22131.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__22131);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__22131);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4900__auto__ = this;
return cljs.core.es6_iterator(this__4900__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__22132 = self__.mseq;
if(G__22132){
var bit__4603__auto__ = (G__22132.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4603__auto__) || (G__22132.cljs$core$INext$)){
return true;
} else {
if((!G__22132.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__22132);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__22132);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__22133 = self__.mseq;
if(G__22133){
var bit__4603__auto__ = (G__22133.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4603__auto__) || (G__22133.cljs$core$INext$)){
return true;
} else {
if((!G__22133.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__22133);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__22133);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4900__auto__ = this;
return cljs.core.es6_iterator(this__4900__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__22134_SHARP_,p2__22135_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3922__auto__ = p1__22134_SHARP_;
if(cljs.core.truth_(or__3922__auto__)){
return or__3922__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__22135_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__22136__i = 0, G__22136__a = new Array(arguments.length -  0);
while (G__22136__i < G__22136__a.length) {G__22136__a[G__22136__i] = arguments[G__22136__i + 0]; ++G__22136__i;}
  maps = new cljs.core.IndexedSeq(G__22136__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__22137){
var maps = cljs.core.seq(arglist__22137);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__22140 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__22141 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22140,G__22141) : f.call(null,G__22140,G__22141));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__3922__auto__ = m1;
if(cljs.core.truth_(or__3922__auto__)){
return or__3922__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__22142__i = 0, G__22142__a = new Array(arguments.length -  1);
while (G__22142__i < G__22142__a.length) {G__22142__a[G__22142__i] = arguments[G__22142__i + 1]; ++G__22142__i;}
  maps = new cljs.core.IndexedSeq(G__22142__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__22143){
var f = cljs.core.first(arglist__22143);
var maps = cljs.core.rest(arglist__22143);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__22144 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__22145 = cljs.core.next(keys);
ret = G__22144;
keys = G__22145;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__22148 = cljs.core.seq(coll);
var chunk__22149 = null;
var count__22150 = (0);
var i__22151 = (0);
while(true){
if((i__22151 < count__22150)){
var vec__22152 = chunk__22149.cljs$core$IIndexed$_nth$arity$2(null,i__22151);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22152,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22152,(1),null);
var G__22153_22158 = v;
var G__22154_22159 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22153_22158,G__22154_22159) : f.call(null,G__22153_22158,G__22154_22159));

var G__22160 = seq__22148;
var G__22161 = chunk__22149;
var G__22162 = count__22150;
var G__22163 = (i__22151 + (1));
seq__22148 = G__22160;
chunk__22149 = G__22161;
count__22150 = G__22162;
i__22151 = G__22163;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__22148);
if(temp__4126__auto__){
var seq__22148__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__22148__$1)){
var c__4709__auto__ = cljs.core.chunk_first(seq__22148__$1);
var G__22164 = cljs.core.chunk_rest(seq__22148__$1);
var G__22165 = c__4709__auto__;
var G__22166 = cljs.core.count(c__4709__auto__);
var G__22167 = (0);
seq__22148 = G__22164;
chunk__22149 = G__22165;
count__22150 = G__22166;
i__22151 = G__22167;
continue;
} else {
var vec__22155 = cljs.core.first(seq__22148__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22155,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22155,(1),null);
var G__22156_22168 = v;
var G__22157_22169 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22156_22168,G__22157_22169) : f.call(null,G__22156_22168,G__22157_22169));

var G__22170 = cljs.core.next(seq__22148__$1);
var G__22171 = null;
var G__22172 = (0);
var G__22173 = (0);
seq__22148 = G__22170;
chunk__22149 = G__22171;
count__22150 = G__22172;
i__22151 = G__22173;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4343__auto__ = self__.__hash;
if(!((h__4343__auto__ == null))){
return h__4343__auto__;
} else {
var h__4343__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4343__auto____$1;

return h__4343__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__22146_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__22146_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__22174 = null;
var G__22174__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__22174__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__22174 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22174__2.call(this,self__,k);
case 3:
return G__22174__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22174.cljs$core$IFn$_invoke$arity$2 = G__22174__2;
G__22174.cljs$core$IFn$_invoke$arity$3 = G__22174__3;
return G__22174;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args22147){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22147)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__22175 = (i + (1));
var G__22176 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__22175;
out = G__22176;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__22177 = (i + (1));
var G__22178 = cljs.core._conj_BANG_(out,(items[i]));
i = G__22177;
out = G__22178;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4900__auto__ = this;
return cljs.core.es6_iterator(this__4900__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__22180 = null;
var G__22180__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__22180__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__22180 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22180__2.call(this,self__,k);
case 3:
return G__22180__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22180.cljs$core$IFn$_invoke$arity$2 = G__22180__2;
G__22180.cljs$core$IFn$_invoke$arity$3 = G__22180__3;
return G__22180;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args22179){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22179)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__22183 = cljs.core.seq(coll);
var chunk__22184 = null;
var count__22185 = (0);
var i__22186 = (0);
while(true){
if((i__22186 < count__22185)){
var vec__22187 = chunk__22184.cljs$core$IIndexed$_nth$arity$2(null,i__22186);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22187,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22187,(1),null);
var G__22188_22193 = v;
var G__22189_22194 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22188_22193,G__22189_22194) : f.call(null,G__22188_22193,G__22189_22194));

var G__22195 = seq__22183;
var G__22196 = chunk__22184;
var G__22197 = count__22185;
var G__22198 = (i__22186 + (1));
seq__22183 = G__22195;
chunk__22184 = G__22196;
count__22185 = G__22197;
i__22186 = G__22198;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__22183);
if(temp__4126__auto__){
var seq__22183__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__22183__$1)){
var c__4709__auto__ = cljs.core.chunk_first(seq__22183__$1);
var G__22199 = cljs.core.chunk_rest(seq__22183__$1);
var G__22200 = c__4709__auto__;
var G__22201 = cljs.core.count(c__4709__auto__);
var G__22202 = (0);
seq__22183 = G__22199;
chunk__22184 = G__22200;
count__22185 = G__22201;
i__22186 = G__22202;
continue;
} else {
var vec__22190 = cljs.core.first(seq__22183__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22190,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22190,(1),null);
var G__22191_22203 = v;
var G__22192_22204 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22191_22203,G__22192_22204) : f.call(null,G__22191_22203,G__22192_22204));

var G__22205 = cljs.core.next(seq__22183__$1);
var G__22206 = null;
var G__22207 = (0);
var G__22208 = (0);
seq__22183 = G__22205;
chunk__22184 = G__22206;
count__22185 = G__22207;
i__22186 = G__22208;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4343__auto__ = self__.__hash;
if(!((h__4343__auto__ == null))){
return h__4343__auto__;
} else {
var h__4343__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4343__auto____$1;

return h__4343__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__22181_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__22181_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__22209 = null;
var G__22209__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__22209__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__22209 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22209__2.call(this,self__,k);
case 3:
return G__22209__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22209.cljs$core$IFn$_invoke$arity$2 = G__22209__2;
G__22209.cljs$core$IFn$_invoke$arity$3 = G__22209__3;
return G__22209;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args22182){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22182)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4900__auto__ = this;
return cljs.core.es6_iterator(this__4900__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__4803__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__4803__auto__.length)){
var G__22210 = (i + (1));
var G__22211 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__22210;
res = G__22211;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__22212 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__22213 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__22212;
out = G__22213;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__22214__delegate = function (keys){
return cljs.core.set(keys);
};
var G__22214 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__22215__i = 0, G__22215__a = new Array(arguments.length -  0);
while (G__22215__i < G__22215__a.length) {G__22215__a[G__22215__i] = arguments[G__22215__i + 0]; ++G__22215__i;}
  keys = new cljs.core.IndexedSeq(G__22215__a,0);
} 
return G__22214__delegate.call(this,keys);};
G__22214.cljs$lang$maxFixedArity = 0;
G__22214.cljs$lang$applyTo = (function (arglist__22216){
var keys = cljs.core.seq(arglist__22216);
return G__22214__delegate(keys);
});
G__22214.cljs$core$IFn$_invoke$arity$variadic = G__22214__delegate;
return G__22214;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__22217 = null;
if (arguments.length > 0) {
var G__22218__i = 0, G__22218__a = new Array(arguments.length -  0);
while (G__22218__i < G__22218__a.length) {G__22218__a[G__22218__i] = arguments[G__22218__i + 0]; ++G__22218__i;}
G__22217 = new cljs.core.IndexedSeq(G__22218__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__22217);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__22219__i = 0, G__22219__a = new Array(arguments.length -  0);
while (G__22219__i < G__22219__a.length) {G__22219__a[G__22219__i] = arguments[G__22219__i + 0]; ++G__22219__i;}
  keys = new cljs.core.IndexedSeq(G__22219__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__22220){
var keys = cljs.core.seq(arglist__22220);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__22221__i = 0, G__22221__a = new Array(arguments.length -  1);
while (G__22221__i < G__22221__a.length) {G__22221__a[G__22221__i] = arguments[G__22221__i + 1]; ++G__22221__i;}
  keys = new cljs.core.IndexedSeq(G__22221__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__22222){
var comparator = cljs.core.first(arglist__22222);
var keys = cljs.core.rest(arglist__22222);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__22223_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__22223_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__22223_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__22224_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__22224_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__22224_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__22245 = null;
var G__22245__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22245__1 = (function (result){
var G__22235 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22235) : rf.call(null,G__22235));
});
var G__22245__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__22236 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22236) : cljs.core.deref.call(null,G__22236));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__22237 = result;
var G__22238 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22237,G__22238) : rf.call(null,G__22237,G__22238));
}
});
G__22245 = function(result,input){
switch(arguments.length){
case 0:
return G__22245__0.call(this);
case 1:
return G__22245__1.call(this,result);
case 2:
return G__22245__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22245.cljs$core$IFn$_invoke$arity$0 = G__22245__0;
G__22245.cljs$core$IFn$_invoke$arity$1 = G__22245__1;
G__22245.cljs$core$IFn$_invoke$arity$2 = G__22245__2;
return G__22245;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__22243,seen__$1){
while(true){
var vec__22244 = p__22243;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22244,(0),null);
var xs__$1 = vec__22244;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__22246 = cljs.core.rest(s);
var G__22247 = seen__$1;
p__22243 = G__22246;
seen__$1 = G__22247;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__22248 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__22249 = cljs.core.next(s__$1);
ret = G__22248;
s__$1 = G__22249;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__22251 = x;
if(G__22251){
var bit__4596__auto__ = (G__22251.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4596__auto__) || (G__22251.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__22252 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__22253 = cljs.core.next(ks);
var G__22254 = cljs.core.next(vs);
map = G__22252;
ks = G__22253;
vs = G__22254;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__22265 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__22265) : k.call(null,G__22265));
})() > (function (){var G__22266 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__22266) : k.call(null,G__22266));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__22267__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__22255_SHARP_,p2__22256_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__22255_SHARP_,p2__22256_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__22267 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__22268__i = 0, G__22268__a = new Array(arguments.length -  3);
while (G__22268__i < G__22268__a.length) {G__22268__a[G__22268__i] = arguments[G__22268__i + 3]; ++G__22268__i;}
  more = new cljs.core.IndexedSeq(G__22268__a,0);
} 
return G__22267__delegate.call(this,k,x,y,more);};
G__22267.cljs$lang$maxFixedArity = 3;
G__22267.cljs$lang$applyTo = (function (arglist__22269){
var k = cljs.core.first(arglist__22269);
arglist__22269 = cljs.core.next(arglist__22269);
var x = cljs.core.first(arglist__22269);
arglist__22269 = cljs.core.next(arglist__22269);
var y = cljs.core.first(arglist__22269);
var more = cljs.core.rest(arglist__22269);
return G__22267__delegate(k,x,y,more);
});
G__22267.cljs$core$IFn$_invoke$arity$variadic = G__22267__delegate;
return G__22267;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__22270 = null;
if (arguments.length > 3) {
var G__22271__i = 0, G__22271__a = new Array(arguments.length -  3);
while (G__22271__i < G__22271__a.length) {G__22271__a[G__22271__i] = arguments[G__22271__i + 3]; ++G__22271__i;}
G__22270 = new cljs.core.IndexedSeq(G__22271__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__22270);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__22282 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__22282) : k.call(null,G__22282));
})() < (function (){var G__22283 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__22283) : k.call(null,G__22283));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__22284__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__22272_SHARP_,p2__22273_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__22272_SHARP_,p2__22273_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__22284 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__22285__i = 0, G__22285__a = new Array(arguments.length -  3);
while (G__22285__i < G__22285__a.length) {G__22285__a[G__22285__i] = arguments[G__22285__i + 3]; ++G__22285__i;}
  more = new cljs.core.IndexedSeq(G__22285__a,0);
} 
return G__22284__delegate.call(this,k,x,y,more);};
G__22284.cljs$lang$maxFixedArity = 3;
G__22284.cljs$lang$applyTo = (function (arglist__22286){
var k = cljs.core.first(arglist__22286);
arglist__22286 = cljs.core.next(arglist__22286);
var x = cljs.core.first(arglist__22286);
arglist__22286 = cljs.core.next(arglist__22286);
var y = cljs.core.first(arglist__22286);
var more = cljs.core.rest(arglist__22286);
return G__22284__delegate(k,x,y,more);
});
G__22284.cljs$core$IFn$_invoke$arity$variadic = G__22284__delegate;
return G__22284;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__22287 = null;
if (arguments.length > 3) {
var G__22288__i = 0, G__22288__a = new Array(arguments.length -  3);
while (G__22288__i < G__22288__a.length) {G__22288__a[G__22288__i] = arguments[G__22288__i + 3]; ++G__22288__i;}
G__22287 = new cljs.core.IndexedSeq(G__22288__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__22287);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__22305 = null;
var G__22305__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22305__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__22300 = result;
var G__22301 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22300,G__22301) : rf.call(null,G__22300,G__22301));
})());
})());
var G__22302 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22302) : rf.call(null,G__22302));
});
var G__22305__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__22303 = result;
var G__22304 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22303,G__22304) : rf.call(null,G__22303,G__22304));
} else {
return result;
}
});
G__22305 = function(result,input){
switch(arguments.length){
case 0:
return G__22305__0.call(this);
case 1:
return G__22305__1.call(this,result);
case 2:
return G__22305__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22305.cljs$core$IFn$_invoke$arity$0 = G__22305__0;
G__22305.cljs$core$IFn$_invoke$arity$1 = G__22305__1;
G__22305.cljs$core$IFn$_invoke$arity$2 = G__22305__2;
return G__22305;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__22318 = null;
var G__22318__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22318__1 = (function (result){
var G__22313 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22313) : rf.call(null,G__22313));
});
var G__22318__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__22314 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__22314) : pred.call(null,G__22314));
})())){
var G__22315 = result;
var G__22316 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22315,G__22316) : rf.call(null,G__22315,G__22316));
} else {
return cljs.core.reduced(result);
}
});
G__22318 = function(result,input){
switch(arguments.length){
case 0:
return G__22318__0.call(this);
case 1:
return G__22318__1.call(this,result);
case 2:
return G__22318__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22318.cljs$core$IFn$_invoke$arity$0 = G__22318__0;
G__22318.cljs$core$IFn$_invoke$arity$1 = G__22318__1;
G__22318.cljs$core$IFn$_invoke$arity$2 = G__22318__2;
return G__22318;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__22317 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__22317) : pred.call(null,G__22317));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__22323 = (function (){var G__22325 = cljs.core._entry_key(sc,e);
var G__22326 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__22325,G__22326) : comp.call(null,G__22325,G__22326));
})();
var G__22324 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__22323,G__22324) : test.call(null,G__22323,G__22324));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__22330 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22330,(0),null);
var s = vec__22330;
if(cljs.core.truth_((function (){var G__22331 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__22331) : include.call(null,G__22331));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__22332 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22332,(0),null);
var s = vec__22332;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__22336 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22336,(0),null);
var s = vec__22336;
if(cljs.core.truth_((function (){var G__22337 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__22337) : include.call(null,G__22337));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__22338 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22338,(0),null);
var s = vec__22338;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__22339 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__22339) : Math.ceil.call(null,G__22339));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__4343__auto__ = self__.__hash;
if(!((h__4343__auto__ == null))){
return h__4343__auto__;
} else {
var h__4343__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__4343__auto____$1;

return h__4343__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__22340 = ret;
var G__22341 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22340,G__22341) : f.call(null,G__22340,G__22341));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__22342 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22342) : cljs.core.deref.call(null,G__22342));
} else {
var G__22343 = (i + self__.step);
var G__22344 = ret__$1;
i = G__22343;
ret = G__22344;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4900__auto__ = this;
return cljs.core.es6_iterator(this__4900__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__22362 = null;
var G__22362__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22362__1 = (function (result){
var G__22359 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22359) : rf.call(null,G__22359));
});
var G__22362__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__22360 = result;
var G__22361 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22360,G__22361) : rf.call(null,G__22360,G__22361));
} else {
return result;
}
});
G__22362 = function(result,input){
switch(arguments.length){
case 0:
return G__22362__0.call(this);
case 1:
return G__22362__1.call(this,result);
case 2:
return G__22362__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22362.cljs$core$IFn$_invoke$arity$0 = G__22362__0;
G__22362.cljs$core$IFn$_invoke$arity$1 = G__22362__1;
G__22362.cljs$core$IFn$_invoke$arity$2 = G__22362__2;
return G__22362;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__22384 = null;
var G__22384__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22384__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__22375 = result;
var G__22376 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22375,G__22376) : rf.call(null,G__22375,G__22376));
})());
})());
var G__22377 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22377) : rf.call(null,G__22377));
});
var G__22384__2 = (function (result,input){
var pval = (function (){var G__22378 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22378) : cljs.core.deref.call(null,G__22378));
})();
var val = (function (){var G__22379 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22379) : f.call(null,G__22379));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__22380 = result;
var G__22381 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22380,G__22381) : rf.call(null,G__22380,G__22381));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__22384 = function(result,input){
switch(arguments.length){
case 0:
return G__22384__0.call(this);
case 1:
return G__22384__1.call(this,result);
case 2:
return G__22384__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22384.cljs$core$IFn$_invoke$arity$0 = G__22384__0;
G__22384.cljs$core$IFn$_invoke$arity$1 = G__22384__1;
G__22384.cljs$core$IFn$_invoke$arity$2 = G__22384__2;
return G__22384;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__22382 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22382) : f.call(null,G__22382));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__22363_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__22383 = p1__22363_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22383) : f.call(null,G__22383));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__22393 = init;
var G__22394 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22393,G__22394) : f.call(null,G__22393,G__22394));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__22489 = null;
var G__22489__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__22489__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__22447 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22447) : f.call(null,G__22447));
})()],null));
});
var G__22489__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__22448 = x;
var G__22449 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22448,G__22449) : f.call(null,G__22448,G__22449));
})()],null));
});
var G__22489__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__22450 = x;
var G__22451 = y;
var G__22452 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22450,G__22451,G__22452) : f.call(null,G__22450,G__22451,G__22452));
})()],null));
});
var G__22489__4 = (function() { 
var G__22490__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__22490 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22491__i = 0, G__22491__a = new Array(arguments.length -  3);
while (G__22491__i < G__22491__a.length) {G__22491__a[G__22491__i] = arguments[G__22491__i + 3]; ++G__22491__i;}
  args = new cljs.core.IndexedSeq(G__22491__a,0);
} 
return G__22490__delegate.call(this,x,y,z,args);};
G__22490.cljs$lang$maxFixedArity = 3;
G__22490.cljs$lang$applyTo = (function (arglist__22492){
var x = cljs.core.first(arglist__22492);
arglist__22492 = cljs.core.next(arglist__22492);
var y = cljs.core.first(arglist__22492);
arglist__22492 = cljs.core.next(arglist__22492);
var z = cljs.core.first(arglist__22492);
var args = cljs.core.rest(arglist__22492);
return G__22490__delegate(x,y,z,args);
});
G__22490.cljs$core$IFn$_invoke$arity$variadic = G__22490__delegate;
return G__22490;
})()
;
G__22489 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__22489__0.call(this);
case 1:
return G__22489__1.call(this,x);
case 2:
return G__22489__2.call(this,x,y);
case 3:
return G__22489__3.call(this,x,y,z);
default:
var G__22493 = null;
if (arguments.length > 3) {
var G__22494__i = 0, G__22494__a = new Array(arguments.length -  3);
while (G__22494__i < G__22494__a.length) {G__22494__a[G__22494__i] = arguments[G__22494__i + 3]; ++G__22494__i;}
G__22493 = new cljs.core.IndexedSeq(G__22494__a,0);
}
return G__22489__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22493);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22489.cljs$lang$maxFixedArity = 3;
G__22489.cljs$lang$applyTo = G__22489__4.cljs$lang$applyTo;
G__22489.cljs$core$IFn$_invoke$arity$0 = G__22489__0;
G__22489.cljs$core$IFn$_invoke$arity$1 = G__22489__1;
G__22489.cljs$core$IFn$_invoke$arity$2 = G__22489__2;
G__22489.cljs$core$IFn$_invoke$arity$3 = G__22489__3;
G__22489.cljs$core$IFn$_invoke$arity$variadic = G__22489__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22489;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__22495 = null;
var G__22495__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__22495__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__22453 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22453) : f.call(null,G__22453));
})(),(function (){var G__22454 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__22454) : g.call(null,G__22454));
})()],null));
});
var G__22495__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__22455 = x;
var G__22456 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22455,G__22456) : f.call(null,G__22455,G__22456));
})(),(function (){var G__22457 = x;
var G__22458 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__22457,G__22458) : g.call(null,G__22457,G__22458));
})()],null));
});
var G__22495__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__22459 = x;
var G__22460 = y;
var G__22461 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22459,G__22460,G__22461) : f.call(null,G__22459,G__22460,G__22461));
})(),(function (){var G__22462 = x;
var G__22463 = y;
var G__22464 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__22462,G__22463,G__22464) : g.call(null,G__22462,G__22463,G__22464));
})()],null));
});
var G__22495__4 = (function() { 
var G__22496__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__22496 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22497__i = 0, G__22497__a = new Array(arguments.length -  3);
while (G__22497__i < G__22497__a.length) {G__22497__a[G__22497__i] = arguments[G__22497__i + 3]; ++G__22497__i;}
  args = new cljs.core.IndexedSeq(G__22497__a,0);
} 
return G__22496__delegate.call(this,x,y,z,args);};
G__22496.cljs$lang$maxFixedArity = 3;
G__22496.cljs$lang$applyTo = (function (arglist__22498){
var x = cljs.core.first(arglist__22498);
arglist__22498 = cljs.core.next(arglist__22498);
var y = cljs.core.first(arglist__22498);
arglist__22498 = cljs.core.next(arglist__22498);
var z = cljs.core.first(arglist__22498);
var args = cljs.core.rest(arglist__22498);
return G__22496__delegate(x,y,z,args);
});
G__22496.cljs$core$IFn$_invoke$arity$variadic = G__22496__delegate;
return G__22496;
})()
;
G__22495 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__22495__0.call(this);
case 1:
return G__22495__1.call(this,x);
case 2:
return G__22495__2.call(this,x,y);
case 3:
return G__22495__3.call(this,x,y,z);
default:
var G__22499 = null;
if (arguments.length > 3) {
var G__22500__i = 0, G__22500__a = new Array(arguments.length -  3);
while (G__22500__i < G__22500__a.length) {G__22500__a[G__22500__i] = arguments[G__22500__i + 3]; ++G__22500__i;}
G__22499 = new cljs.core.IndexedSeq(G__22500__a,0);
}
return G__22495__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22499);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22495.cljs$lang$maxFixedArity = 3;
G__22495.cljs$lang$applyTo = G__22495__4.cljs$lang$applyTo;
G__22495.cljs$core$IFn$_invoke$arity$0 = G__22495__0;
G__22495.cljs$core$IFn$_invoke$arity$1 = G__22495__1;
G__22495.cljs$core$IFn$_invoke$arity$2 = G__22495__2;
G__22495.cljs$core$IFn$_invoke$arity$3 = G__22495__3;
G__22495.cljs$core$IFn$_invoke$arity$variadic = G__22495__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22495;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__22501 = null;
var G__22501__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__22501__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__22465 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22465) : f.call(null,G__22465));
})(),(function (){var G__22466 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__22466) : g.call(null,G__22466));
})(),(function (){var G__22467 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__22467) : h.call(null,G__22467));
})()],null));
});
var G__22501__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__22468 = x;
var G__22469 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22468,G__22469) : f.call(null,G__22468,G__22469));
})(),(function (){var G__22470 = x;
var G__22471 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__22470,G__22471) : g.call(null,G__22470,G__22471));
})(),(function (){var G__22472 = x;
var G__22473 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__22472,G__22473) : h.call(null,G__22472,G__22473));
})()],null));
});
var G__22501__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__22474 = x;
var G__22475 = y;
var G__22476 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22474,G__22475,G__22476) : f.call(null,G__22474,G__22475,G__22476));
})(),(function (){var G__22477 = x;
var G__22478 = y;
var G__22479 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__22477,G__22478,G__22479) : g.call(null,G__22477,G__22478,G__22479));
})(),(function (){var G__22480 = x;
var G__22481 = y;
var G__22482 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__22480,G__22481,G__22482) : h.call(null,G__22480,G__22481,G__22482));
})()],null));
});
var G__22501__4 = (function() { 
var G__22502__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__22502 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22503__i = 0, G__22503__a = new Array(arguments.length -  3);
while (G__22503__i < G__22503__a.length) {G__22503__a[G__22503__i] = arguments[G__22503__i + 3]; ++G__22503__i;}
  args = new cljs.core.IndexedSeq(G__22503__a,0);
} 
return G__22502__delegate.call(this,x,y,z,args);};
G__22502.cljs$lang$maxFixedArity = 3;
G__22502.cljs$lang$applyTo = (function (arglist__22504){
var x = cljs.core.first(arglist__22504);
arglist__22504 = cljs.core.next(arglist__22504);
var y = cljs.core.first(arglist__22504);
arglist__22504 = cljs.core.next(arglist__22504);
var z = cljs.core.first(arglist__22504);
var args = cljs.core.rest(arglist__22504);
return G__22502__delegate(x,y,z,args);
});
G__22502.cljs$core$IFn$_invoke$arity$variadic = G__22502__delegate;
return G__22502;
})()
;
G__22501 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__22501__0.call(this);
case 1:
return G__22501__1.call(this,x);
case 2:
return G__22501__2.call(this,x,y);
case 3:
return G__22501__3.call(this,x,y,z);
default:
var G__22505 = null;
if (arguments.length > 3) {
var G__22506__i = 0, G__22506__a = new Array(arguments.length -  3);
while (G__22506__i < G__22506__a.length) {G__22506__a[G__22506__i] = arguments[G__22506__i + 3]; ++G__22506__i;}
G__22505 = new cljs.core.IndexedSeq(G__22506__a,0);
}
return G__22501__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22505);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22501.cljs$lang$maxFixedArity = 3;
G__22501.cljs$lang$applyTo = G__22501__4.cljs$lang$applyTo;
G__22501.cljs$core$IFn$_invoke$arity$0 = G__22501__0;
G__22501.cljs$core$IFn$_invoke$arity$1 = G__22501__1;
G__22501.cljs$core$IFn$_invoke$arity$2 = G__22501__2;
G__22501.cljs$core$IFn$_invoke$arity$3 = G__22501__3;
G__22501.cljs$core$IFn$_invoke$arity$variadic = G__22501__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22501;
})()
});
var juxt__4 = (function() { 
var G__22507__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__22508 = null;
var G__22508__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__22395_SHARP_,p2__22396_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__22395_SHARP_,(function (){return (p2__22396_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__22396_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__22396_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__22508__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__22397_SHARP_,p2__22398_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__22397_SHARP_,(function (){var G__22483 = x;
return (p2__22398_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__22398_SHARP_.cljs$core$IFn$_invoke$arity$1(G__22483) : p2__22398_SHARP_.call(null,G__22483));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__22508__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__22399_SHARP_,p2__22400_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__22399_SHARP_,(function (){var G__22484 = x;
var G__22485 = y;
return (p2__22400_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__22400_SHARP_.cljs$core$IFn$_invoke$arity$2(G__22484,G__22485) : p2__22400_SHARP_.call(null,G__22484,G__22485));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__22508__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__22401_SHARP_,p2__22402_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__22401_SHARP_,(function (){var G__22486 = x;
var G__22487 = y;
var G__22488 = z;
return (p2__22402_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__22402_SHARP_.cljs$core$IFn$_invoke$arity$3(G__22486,G__22487,G__22488) : p2__22402_SHARP_.call(null,G__22486,G__22487,G__22488));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__22508__4 = (function() { 
var G__22509__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__22403_SHARP_,p2__22404_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__22403_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__22404_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__22509 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22510__i = 0, G__22510__a = new Array(arguments.length -  3);
while (G__22510__i < G__22510__a.length) {G__22510__a[G__22510__i] = arguments[G__22510__i + 3]; ++G__22510__i;}
  args = new cljs.core.IndexedSeq(G__22510__a,0);
} 
return G__22509__delegate.call(this,x,y,z,args);};
G__22509.cljs$lang$maxFixedArity = 3;
G__22509.cljs$lang$applyTo = (function (arglist__22511){
var x = cljs.core.first(arglist__22511);
arglist__22511 = cljs.core.next(arglist__22511);
var y = cljs.core.first(arglist__22511);
arglist__22511 = cljs.core.next(arglist__22511);
var z = cljs.core.first(arglist__22511);
var args = cljs.core.rest(arglist__22511);
return G__22509__delegate(x,y,z,args);
});
G__22509.cljs$core$IFn$_invoke$arity$variadic = G__22509__delegate;
return G__22509;
})()
;
G__22508 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__22508__0.call(this);
case 1:
return G__22508__1.call(this,x);
case 2:
return G__22508__2.call(this,x,y);
case 3:
return G__22508__3.call(this,x,y,z);
default:
var G__22512 = null;
if (arguments.length > 3) {
var G__22513__i = 0, G__22513__a = new Array(arguments.length -  3);
while (G__22513__i < G__22513__a.length) {G__22513__a[G__22513__i] = arguments[G__22513__i + 3]; ++G__22513__i;}
G__22512 = new cljs.core.IndexedSeq(G__22513__a,0);
}
return G__22508__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22512);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22508.cljs$lang$maxFixedArity = 3;
G__22508.cljs$lang$applyTo = G__22508__4.cljs$lang$applyTo;
G__22508.cljs$core$IFn$_invoke$arity$0 = G__22508__0;
G__22508.cljs$core$IFn$_invoke$arity$1 = G__22508__1;
G__22508.cljs$core$IFn$_invoke$arity$2 = G__22508__2;
G__22508.cljs$core$IFn$_invoke$arity$3 = G__22508__3;
G__22508.cljs$core$IFn$_invoke$arity$variadic = G__22508__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22508;
})()
;})(fs__$1))
};
var G__22507 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__22514__i = 0, G__22514__a = new Array(arguments.length -  3);
while (G__22514__i < G__22514__a.length) {G__22514__a[G__22514__i] = arguments[G__22514__i + 3]; ++G__22514__i;}
  fs = new cljs.core.IndexedSeq(G__22514__a,0);
} 
return G__22507__delegate.call(this,f,g,h,fs);};
G__22507.cljs$lang$maxFixedArity = 3;
G__22507.cljs$lang$applyTo = (function (arglist__22515){
var f = cljs.core.first(arglist__22515);
arglist__22515 = cljs.core.next(arglist__22515);
var g = cljs.core.first(arglist__22515);
arglist__22515 = cljs.core.next(arglist__22515);
var h = cljs.core.first(arglist__22515);
var fs = cljs.core.rest(arglist__22515);
return G__22507__delegate(f,g,h,fs);
});
G__22507.cljs$core$IFn$_invoke$arity$variadic = G__22507__delegate;
return G__22507;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__22516 = null;
if (arguments.length > 3) {
var G__22517__i = 0, G__22517__a = new Array(arguments.length -  3);
while (G__22517__i < G__22517__a.length) {G__22517__a[G__22517__i] = arguments[G__22517__i + 3]; ++G__22517__i;}
G__22516 = new cljs.core.IndexedSeq(G__22517__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__22516);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__22518 = cljs.core.next(coll);
coll = G__22518;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__22519 = (n - (1));
var G__22520 = cljs.core.next(coll);
n = G__22519;
coll = G__22520;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__22524 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22524,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22524,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22524,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_22532 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if(cljs.core.seq(coll)){
var G__22533_22539 = cljs.core.first(coll);
var G__22534_22540 = writer;
var G__22535_22541 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__22533_22539,G__22534_22540,G__22535_22541) : print_one.call(null,G__22533_22539,G__22534_22540,G__22535_22541));
} else {
}

var coll_22542__$1 = cljs.core.next(coll);
var n_22543 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_22542__$1) && (((n_22543 == null)) || (!((n_22543 === (0)))))){
cljs.core._write(writer,sep);

var G__22536_22544 = cljs.core.first(coll_22542__$1);
var G__22537_22545 = writer;
var G__22538_22546 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__22536_22544,G__22537_22545,G__22538_22546) : print_one.call(null,G__22536_22544,G__22537_22545,G__22538_22546));

var G__22547 = cljs.core.next(coll_22542__$1);
var G__22548 = (n_22543 - (1));
coll_22542__$1 = G__22547;
n_22543 = G__22548;
continue;
} else {
if((cljs.core.seq(coll_22542__$1)) && ((n_22543 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_22532;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__22553 = cljs.core.seq(ss);
var chunk__22554 = null;
var count__22555 = (0);
var i__22556 = (0);
while(true){
if((i__22556 < count__22555)){
var s = chunk__22554.cljs$core$IIndexed$_nth$arity$2(null,i__22556);
cljs.core._write(writer,s);

var G__22557 = seq__22553;
var G__22558 = chunk__22554;
var G__22559 = count__22555;
var G__22560 = (i__22556 + (1));
seq__22553 = G__22557;
chunk__22554 = G__22558;
count__22555 = G__22559;
i__22556 = G__22560;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__22553);
if(temp__4126__auto__){
var seq__22553__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__22553__$1)){
var c__4709__auto__ = cljs.core.chunk_first(seq__22553__$1);
var G__22561 = cljs.core.chunk_rest(seq__22553__$1);
var G__22562 = c__4709__auto__;
var G__22563 = cljs.core.count(c__4709__auto__);
var G__22564 = (0);
seq__22553 = G__22561;
chunk__22554 = G__22562;
count__22555 = G__22563;
i__22556 = G__22564;
continue;
} else {
var s = cljs.core.first(seq__22553__$1);
cljs.core._write(writer,s);

var G__22565 = cljs.core.next(seq__22553__$1);
var G__22566 = null;
var G__22567 = (0);
var G__22568 = (0);
seq__22553 = G__22565;
chunk__22554 = G__22566;
count__22555 = G__22567;
i__22556 = G__22568;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__22569__i = 0, G__22569__a = new Array(arguments.length -  1);
while (G__22569__i < G__22569__a.length) {G__22569__a[G__22569__i] = arguments[G__22569__i + 1]; ++G__22569__i;}
  ss = new cljs.core.IndexedSeq(G__22569__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__22570){
var writer = cljs.core.first(arglist__22570);
var ss = cljs.core.rest(arglist__22570);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj22572 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj22572;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__22575 = "[\\\\\"\b\f\n\r\t]";
var G__22576 = "g";
return RegExp(G__22575,G__22576);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__3910__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__3910__auto__)){
var and__3910__auto____$1 = (function (){var G__22590 = obj;
if(G__22590){
var bit__4603__auto__ = (G__22590.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4603__auto__) || (G__22590.cljs$core$IMeta$)){
return true;
} else {
if((!G__22590.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__22590);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__22590);
}
})();
if(and__3910__auto____$1){
return cljs.core.meta(obj);
} else {
return and__3910__auto____$1;
}
} else {
return and__3910__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__22591 = obj;
if(G__22591){
var bit__4596__auto__ = (G__22591.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4596__auto__) || (G__22591.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__22592 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__22593 = pr_writer;
var G__22594 = writer;
var G__22595 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__22592,G__22593,G__22594,G__22595) : cljs.core.print_map.call(null,G__22592,G__22593,G__22594,G__22595));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__22596 = obj;
return goog.isString(G__22596);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__22598 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__22598;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__22597 = obj;
if(G__22597){
var bit__4603__auto__ = (G__22597.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4603__auto__) || (G__22597.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__22597.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__22597);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__22597);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__22603 = cljs.core.seq(cljs.core.next(objs));
var chunk__22604 = null;
var count__22605 = (0);
var i__22606 = (0);
while(true){
if((i__22606 < count__22605)){
var obj = chunk__22604.cljs$core$IIndexed$_nth$arity$2(null,i__22606);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__22607 = seq__22603;
var G__22608 = chunk__22604;
var G__22609 = count__22605;
var G__22610 = (i__22606 + (1));
seq__22603 = G__22607;
chunk__22604 = G__22608;
count__22605 = G__22609;
i__22606 = G__22610;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__22603);
if(temp__4126__auto__){
var seq__22603__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__22603__$1)){
var c__4709__auto__ = cljs.core.chunk_first(seq__22603__$1);
var G__22611 = cljs.core.chunk_rest(seq__22603__$1);
var G__22612 = c__4709__auto__;
var G__22613 = cljs.core.count(c__4709__auto__);
var G__22614 = (0);
seq__22603 = G__22611;
chunk__22604 = G__22612;
count__22605 = G__22613;
i__22606 = G__22614;
continue;
} else {
var obj = cljs.core.first(seq__22603__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__22615 = cljs.core.next(seq__22603__$1);
var G__22616 = null;
var G__22617 = (0);
var G__22618 = (0);
seq__22603 = G__22615;
chunk__22604 = G__22616;
count__22605 = G__22617;
i__22606 = G__22618;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__22619__i = 0, G__22619__a = new Array(arguments.length -  0);
while (G__22619__i < G__22619__a.length) {G__22619__a[G__22619__i] = arguments[G__22619__i + 0]; ++G__22619__i;}
  objs = new cljs.core.IndexedSeq(G__22619__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__22620){
var objs = cljs.core.seq(arglist__22620);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__22621__i = 0, G__22621__a = new Array(arguments.length -  0);
while (G__22621__i < G__22621__a.length) {G__22621__a[G__22621__i] = arguments[G__22621__i + 0]; ++G__22621__i;}
  objs = new cljs.core.IndexedSeq(G__22621__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__22622){
var objs = cljs.core.seq(arglist__22622);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__22623__i = 0, G__22623__a = new Array(arguments.length -  0);
while (G__22623__i < G__22623__a.length) {G__22623__a[G__22623__i] = arguments[G__22623__i + 0]; ++G__22623__i;}
  objs = new cljs.core.IndexedSeq(G__22623__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__22624){
var objs = cljs.core.seq(arglist__22624);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__22625__i = 0, G__22625__a = new Array(arguments.length -  0);
while (G__22625__i < G__22625__a.length) {G__22625__a[G__22625__i] = arguments[G__22625__i + 0]; ++G__22625__i;}
  objs = new cljs.core.IndexedSeq(G__22625__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__22626){
var objs = cljs.core.seq(arglist__22626);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__22627__i = 0, G__22627__a = new Array(arguments.length -  0);
while (G__22627__i < G__22627__a.length) {G__22627__a[G__22627__i] = arguments[G__22627__i + 0]; ++G__22627__i;}
  objs = new cljs.core.IndexedSeq(G__22627__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__22628){
var objs = cljs.core.seq(arglist__22628);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__22629__i = 0, G__22629__a = new Array(arguments.length -  0);
while (G__22629__i < G__22629__a.length) {G__22629__a[G__22629__i] = arguments[G__22629__i + 0]; ++G__22629__i;}
  objs = new cljs.core.IndexedSeq(G__22629__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__22630){
var objs = cljs.core.seq(arglist__22630);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__22631__i = 0, G__22631__a = new Array(arguments.length -  0);
while (G__22631__i < G__22631__a.length) {G__22631__a[G__22631__i] = arguments[G__22631__i + 0]; ++G__22631__i;}
  objs = new cljs.core.IndexedSeq(G__22631__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__22632){
var objs = cljs.core.seq(arglist__22632);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__22633__i = 0, G__22633__a = new Array(arguments.length -  0);
while (G__22633__i < G__22633__a.length) {G__22633__a[G__22633__i] = arguments[G__22633__i + 0]; ++G__22633__i;}
  objs = new cljs.core.IndexedSeq(G__22633__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__22634){
var objs = cljs.core.seq(arglist__22634);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__22641_22647 = cljs.core.key(e);
var G__22642_22648 = w;
var G__22643_22649 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__22641_22647,G__22642_22648,G__22643_22649) : print_one.call(null,G__22641_22647,G__22642_22648,G__22643_22649));

cljs.core._write(w," ");

var G__22644 = cljs.core.val(e);
var G__22645 = w;
var G__22646 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__22644,G__22645,G__22646) : print_one.call(null,G__22644,G__22645,G__22646));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__22650__i = 0, G__22650__a = new Array(arguments.length -  2);
while (G__22650__i < G__22650__a.length) {G__22650__a[G__22650__i] = arguments[G__22650__i + 2]; ++G__22650__i;}
  args = new cljs.core.IndexedSeq(G__22650__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__22651){
var iref = cljs.core.first(arglist__22651);
arglist__22651 = cljs.core.next(arglist__22651);
var f = cljs.core.first(arglist__22651);
var args = cljs.core.rest(arglist__22651);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__22654 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__22654) : cljs.core.atom.call(null,G__22654));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__22656 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22656) : cljs.core.deref.call(null,G__22656));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__22657_SHARP_,p2__22658_SHARP_){
var ret = (function (){var G__22661 = p1__22657_SHARP_;
var G__22662 = p2__22658_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22661,G__22662) : rf.call(null,G__22661,G__22662));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__22665 = null;
var G__22665__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22665__1 = (function (result){
var G__22664 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22664) : rf.call(null,G__22664));
});
var G__22665__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__22665 = function(result,input){
switch(arguments.length){
case 0:
return G__22665__0.call(this);
case 1:
return G__22665__1.call(this,result);
case 2:
return G__22665__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22665.cljs$core$IFn$_invoke$arity$0 = G__22665__0;
G__22665.cljs$core$IFn$_invoke$arity$1 = G__22665__1;
G__22665.cljs$core$IFn$_invoke$arity$2 = G__22665__2;
return G__22665;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__22674 = null;
var G__22674__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22674__1 = (function (result){
var G__22670 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22670) : rf.call(null,G__22670));
});
var G__22674__2 = (function (result,input){
var prior = (function (){var G__22671 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22671) : cljs.core.deref.call(null,G__22671));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__22672 = result;
var G__22673 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22672,G__22673) : rf.call(null,G__22672,G__22673));
}
});
G__22674 = function(result,input){
switch(arguments.length){
case 0:
return G__22674__0.call(this);
case 1:
return G__22674__1.call(this,result);
case 2:
return G__22674__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22674.cljs$core$IFn$_invoke$arity$0 = G__22674__0;
G__22674.cljs$core$IFn$_invoke$arity$1 = G__22674__1;
G__22674.cljs$core$IFn$_invoke$arity$2 = G__22674__2;
return G__22674;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4900__auto__ = this;
return cljs.core.es6_iterator(this__4900__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__22676_SHARP_,p2__22675_SHARP_){
var G__22678 = p2__22675_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__22678) : proc.call(null,G__22678));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj22680 = {};
return obj22680;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__3910__auto__ = x;
if(and__3910__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__3910__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__4566__auto__ = (((x == null))?null:x);
return (function (){var or__3922__auto__ = (cljs.core._clj__GT_js[(function (){var G__22684 = x__4566__auto__;
return goog.typeOf(G__22684);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__3910__auto__ = x;
if(and__3910__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__3910__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__4566__auto__ = (((x == null))?null:x);
return (function (){var or__3922__auto__ = (cljs.core._key__GT_js[(function (){var G__22688 = x__4566__auto__;
return goog.typeOf(G__22688);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__22691 = k;
if(G__22691){
var bit__4603__auto__ = null;
if(cljs.core.truth_((function (){var or__3922__auto__ = bit__4603__auto__;
if(cljs.core.truth_(or__3922__auto__)){
return or__3922__auto__;
} else {
return G__22691.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__22691.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__22691);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__22691);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__22692 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__22692) : cljs.core.clj__GT_js.call(null,G__22692));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__22708 = x;
if(G__22708){
var bit__4603__auto__ = null;
if(cljs.core.truth_((function (){var or__3922__auto__ = bit__4603__auto__;
if(cljs.core.truth_(or__3922__auto__)){
return or__3922__auto__;
} else {
return G__22708.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__22708.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__22708);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__22708);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj22710 = {};
return obj22710;
})();
var seq__22711_22721 = cljs.core.seq(x);
var chunk__22712_22722 = null;
var count__22713_22723 = (0);
var i__22714_22724 = (0);
while(true){
if((i__22714_22724 < count__22713_22723)){
var vec__22715_22725 = chunk__22712_22722.cljs$core$IIndexed$_nth$arity$2(null,i__22714_22724);
var k_22726 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22715_22725,(0),null);
var v_22727 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22715_22725,(1),null);
(m[cljs.core.key__GT_js(k_22726)] = clj__GT_js(v_22727));

var G__22728 = seq__22711_22721;
var G__22729 = chunk__22712_22722;
var G__22730 = count__22713_22723;
var G__22731 = (i__22714_22724 + (1));
seq__22711_22721 = G__22728;
chunk__22712_22722 = G__22729;
count__22713_22723 = G__22730;
i__22714_22724 = G__22731;
continue;
} else {
var temp__4126__auto___22732 = cljs.core.seq(seq__22711_22721);
if(temp__4126__auto___22732){
var seq__22711_22733__$1 = temp__4126__auto___22732;
if(cljs.core.chunked_seq_QMARK_(seq__22711_22733__$1)){
var c__4709__auto___22734 = cljs.core.chunk_first(seq__22711_22733__$1);
var G__22735 = cljs.core.chunk_rest(seq__22711_22733__$1);
var G__22736 = c__4709__auto___22734;
var G__22737 = cljs.core.count(c__4709__auto___22734);
var G__22738 = (0);
seq__22711_22721 = G__22735;
chunk__22712_22722 = G__22736;
count__22713_22723 = G__22737;
i__22714_22724 = G__22738;
continue;
} else {
var vec__22716_22739 = cljs.core.first(seq__22711_22733__$1);
var k_22740 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22716_22739,(0),null);
var v_22741 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22716_22739,(1),null);
(m[cljs.core.key__GT_js(k_22740)] = clj__GT_js(v_22741));

var G__22742 = cljs.core.next(seq__22711_22733__$1);
var G__22743 = null;
var G__22744 = (0);
var G__22745 = (0);
seq__22711_22721 = G__22742;
chunk__22712_22722 = G__22743;
count__22713_22723 = G__22744;
i__22714_22724 = G__22745;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__22717_22746 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__22718_22747 = null;
var count__22719_22748 = (0);
var i__22720_22749 = (0);
while(true){
if((i__22720_22749 < count__22719_22748)){
var x_22750__$1 = chunk__22718_22747.cljs$core$IIndexed$_nth$arity$2(null,i__22720_22749);
arr.push(x_22750__$1);

var G__22751 = seq__22717_22746;
var G__22752 = chunk__22718_22747;
var G__22753 = count__22719_22748;
var G__22754 = (i__22720_22749 + (1));
seq__22717_22746 = G__22751;
chunk__22718_22747 = G__22752;
count__22719_22748 = G__22753;
i__22720_22749 = G__22754;
continue;
} else {
var temp__4126__auto___22755 = cljs.core.seq(seq__22717_22746);
if(temp__4126__auto___22755){
var seq__22717_22756__$1 = temp__4126__auto___22755;
if(cljs.core.chunked_seq_QMARK_(seq__22717_22756__$1)){
var c__4709__auto___22757 = cljs.core.chunk_first(seq__22717_22756__$1);
var G__22758 = cljs.core.chunk_rest(seq__22717_22756__$1);
var G__22759 = c__4709__auto___22757;
var G__22760 = cljs.core.count(c__4709__auto___22757);
var G__22761 = (0);
seq__22717_22746 = G__22758;
chunk__22718_22747 = G__22759;
count__22719_22748 = G__22760;
i__22720_22749 = G__22761;
continue;
} else {
var x_22762__$1 = cljs.core.first(seq__22717_22756__$1);
arr.push(x_22762__$1);

var G__22763 = cljs.core.next(seq__22717_22756__$1);
var G__22764 = null;
var G__22765 = (0);
var G__22766 = (0);
seq__22717_22746 = G__22763;
chunk__22718_22747 = G__22764;
count__22719_22748 = G__22765;
i__22720_22749 = G__22766;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj22768 = {};
return obj22768;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__3910__auto__ = x;
if(and__3910__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__3910__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__4566__auto__ = (((x == null))?null:x);
return (function (){var or__3922__auto__ = (cljs.core._js__GT_clj[(function (){var G__22772 = x__4566__auto__;
return goog.typeOf(G__22772);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__22829__delegate = function (x,opts){
var map__22802 = opts;
var map__22802__$1 = ((cljs.core.seq_QMARK_(map__22802))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__22802):map__22802);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22802__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__22802,map__22802__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__22818 = x__$1;
if(G__22818){
var bit__4603__auto__ = null;
if(cljs.core.truth_((function (){var or__3922__auto__ = bit__4603__auto__;
if(cljs.core.truth_(or__3922__auto__)){
return or__3922__auto__;
} else {
return G__22818.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__22818.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__22818);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__22818);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4678__auto__ = ((function (map__22802,map__22802__$1,keywordize_keys,keyfn){
return (function iter__22819(s__22820){
return (new cljs.core.LazySeq(null,((function (map__22802,map__22802__$1,keywordize_keys,keyfn){
return (function (){
var s__22820__$1 = s__22820;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__22820__$1);
if(temp__4126__auto__){
var s__22820__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__22820__$2)){
var c__4676__auto__ = cljs.core.chunk_first(s__22820__$2);
var size__4677__auto__ = cljs.core.count(c__4676__auto__);
var b__22822 = cljs.core.chunk_buffer(size__4677__auto__);
if((function (){var i__22821 = (0);
while(true){
if((i__22821 < size__4677__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4676__auto__,i__22821);
cljs.core.chunk_append(b__22822,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__22827 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__22827) : keyfn.call(null,G__22827));
})(),thisfn((x__$1[k]))], null));

var G__22830 = (i__22821 + (1));
i__22821 = G__22830;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__22822),iter__22819(cljs.core.chunk_rest(s__22820__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__22822),null);
}
} else {
var k = cljs.core.first(s__22820__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__22828 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__22828) : keyfn.call(null,G__22828));
})(),thisfn((x__$1[k]))], null),iter__22819(cljs.core.rest(s__22820__$2)));
}
} else {
return null;
}
break;
}
});})(map__22802,map__22802__$1,keywordize_keys,keyfn))
,null,null));
});})(map__22802,map__22802__$1,keywordize_keys,keyfn))
;
return iter__4678__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__22802,map__22802__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__22829 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__22831__i = 0, G__22831__a = new Array(arguments.length -  1);
while (G__22831__i < G__22831__a.length) {G__22831__a[G__22831__i] = arguments[G__22831__i + 1]; ++G__22831__i;}
  opts = new cljs.core.IndexedSeq(G__22831__a,0);
} 
return G__22829__delegate.call(this,x,opts);};
G__22829.cljs$lang$maxFixedArity = 1;
G__22829.cljs$lang$applyTo = (function (arglist__22832){
var x = cljs.core.first(arglist__22832);
var opts = cljs.core.rest(arglist__22832);
return G__22829__delegate(x,opts);
});
G__22829.cljs$core$IFn$_invoke$arity$variadic = G__22829__delegate;
return G__22829;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__22833 = null;
if (arguments.length > 1) {
var G__22834__i = 0, G__22834__a = new Array(arguments.length -  1);
while (G__22834__i < G__22834__a.length) {G__22834__a[G__22834__i] = arguments[G__22834__i + 1]; ++G__22834__i;}
G__22833 = new cljs.core.IndexedSeq(G__22834__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__22833);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__22837 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__22837) : cljs.core.atom.call(null,G__22837));
})();
return ((function (mem){
return (function() { 
var G__22839__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__22838 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22838) : cljs.core.deref.call(null,G__22838));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__22839 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__22840__i = 0, G__22840__a = new Array(arguments.length -  0);
while (G__22840__i < G__22840__a.length) {G__22840__a[G__22840__i] = arguments[G__22840__i + 0]; ++G__22840__i;}
  args = new cljs.core.IndexedSeq(G__22840__a,0);
} 
return G__22839__delegate.call(this,args);};
G__22839.cljs$lang$maxFixedArity = 0;
G__22839.cljs$lang$applyTo = (function (arglist__22841){
var args = cljs.core.seq(arglist__22841);
return G__22839__delegate(args);
});
G__22839.cljs$core$IFn$_invoke$arity$variadic = G__22839__delegate;
return G__22839;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__22843 = ret;
f = G__22843;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__22844__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__22844 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__22845__i = 0, G__22845__a = new Array(arguments.length -  1);
while (G__22845__i < G__22845__a.length) {G__22845__a[G__22845__i] = arguments[G__22845__i + 1]; ++G__22845__i;}
  args = new cljs.core.IndexedSeq(G__22845__a,0);
} 
return G__22844__delegate.call(this,f,args);};
G__22844.cljs$lang$maxFixedArity = 1;
G__22844.cljs$lang$applyTo = (function (arglist__22846){
var f = cljs.core.first(arglist__22846);
var args = cljs.core.rest(arglist__22846);
return G__22844__delegate(f,args);
});
G__22844.cljs$core$IFn$_invoke$arity$variadic = G__22844__delegate;
return G__22844;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__22847 = null;
if (arguments.length > 1) {
var G__22848__i = 0, G__22848__a = new Array(arguments.length -  1);
while (G__22848__i < G__22848__a.length) {G__22848__a[G__22848__i] = arguments[G__22848__i + 1]; ++G__22848__i;}
G__22847 = new cljs.core.IndexedSeq(G__22848__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__22847);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__22851 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__22851) : Math.floor.call(null,G__22851));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__22853 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22853) : f.call(null,G__22853));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__22855 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__22855) : cljs.core.atom.call(null,G__22855));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__22856__i = 0, G__22856__a = new Array(arguments.length -  1);
while (G__22856__i < G__22856__a.length) {G__22856__a[G__22856__i] = arguments[G__22856__i + 1]; ++G__22856__i;}
  args = new cljs.core.IndexedSeq(G__22856__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__22857){
var f = cljs.core.first(arglist__22857);
var args = cljs.core.rest(arglist__22857);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__22922 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22922) : cljs.core.deref.call(null,G__22922));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__3922__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
var and__3910__auto__ = cljs.core.vector_QMARK_(parent);
if(and__3910__auto__){
var and__3910__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__3910__auto____$1){
var and__3910__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__3910__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__22947 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__22945 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__22945) : child.call(null,G__22945));
})(),(function (){var G__22946 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__22946) : parent.call(null,G__22946));
})());
var G__22948 = (i + (1));
ret = G__22947;
i = G__22948;
continue;
}
break;
}
} else {
return and__3910__auto____$2;
}
} else {
return and__3910__auto____$1;
}
} else {
return and__3910__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__22952 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22952) : cljs.core.deref.call(null,G__22952));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__22956 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22956) : cljs.core.deref.call(null,G__22956));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__22960 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22960) : cljs.core.deref.call(null,G__22960));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__22969 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__22969) : targets.call(null,G__22969));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__22970 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__22970) : sources.call(null,G__22970));
})()));
});})(tp,td,ta))
;
var or__3922__auto__ = ((cljs.core.contains_QMARK_((function (){var G__22974 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__22974) : tp.call(null,G__22974));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__22975 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__22975) : ta.call(null,G__22975));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__22976 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__22976) : ta.call(null,G__22976));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__3922__auto__)){
return or__3922__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__22983 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__22983) : parentMap.call(null,G__22983));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__22984 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__22984) : parentMap.call(null,G__22984));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__22977_SHARP_){
return cljs.core.cons(cljs.core.first(p1__22977_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__22977_SHARP_),cljs.core.second(p1__22977_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__22985 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__22985) : parentMap.call(null,G__22985));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__22978_SHARP_,p2__22979_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__22978_SHARP_,p2__22979_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__22988 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22988) : cljs.core.deref.call(null,G__22988));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__22989 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22989) : cljs.core.deref.call(null,G__22989));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__23005 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23005) : cljs.core.deref.call(null,G__23005));
})().call(null,x);
var or__3922__auto__ = (cljs.core.truth_((function (){var and__3910__auto__ = xprefs;
if(cljs.core.truth_(and__3910__auto__)){
var G__23007 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__23007) : xprefs.call(null,G__23007));
} else {
return and__3910__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__3922__auto__)){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__23008 = cljs.core.rest(ps);
ps = G__23008;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3922__auto____$1)){
return or__3922__auto____$1;
} else {
var or__3922__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__23009 = cljs.core.rest(ps);
ps = G__23009;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3922__auto____$2)){
return or__3922__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__3922__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__3922__auto__)){
return or__3922__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__23023){
var vec__23024 = p__23023;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23024,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23024,(1),null);
var e = vec__23024;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__23025 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23025) : cljs.core.deref.call(null,G__23025));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__3922__auto__ = (be == null);
if(or__3922__auto__){
return or__3922__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__23026 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23026) : cljs.core.deref.call(null,G__23026));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__23027 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23027) : cljs.core.deref.call(null,G__23027));
})(),(function (){var G__23028 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23028) : cljs.core.deref.call(null,G__23028));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj23030 = {};
return obj23030;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__3910__auto__ = mf;
if(and__3910__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__3910__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__4566__auto__ = (((mf == null))?null:mf);
return (function (){var or__3922__auto__ = (cljs.core._reset[(function (){var G__23034 = x__4566__auto__;
return goog.typeOf(G__23034);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._reset["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__3910__auto__ = mf;
if(and__3910__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__3910__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__4566__auto__ = (((mf == null))?null:mf);
return (function (){var or__3922__auto__ = (cljs.core._add_method[(function (){var G__23038 = x__4566__auto__;
return goog.typeOf(G__23038);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._add_method["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__3910__auto__ = mf;
if(and__3910__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__3910__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__4566__auto__ = (((mf == null))?null:mf);
return (function (){var or__3922__auto__ = (cljs.core._remove_method[(function (){var G__23042 = x__4566__auto__;
return goog.typeOf(G__23042);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._remove_method["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__3910__auto__ = mf;
if(and__3910__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__3910__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__4566__auto__ = (((mf == null))?null:mf);
return (function (){var or__3922__auto__ = (cljs.core._prefer_method[(function (){var G__23046 = x__4566__auto__;
return goog.typeOf(G__23046);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__3910__auto__ = mf;
if(and__3910__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__3910__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__4566__auto__ = (((mf == null))?null:mf);
return (function (){var or__3922__auto__ = (cljs.core._get_method[(function (){var G__23050 = x__4566__auto__;
return goog.typeOf(G__23050);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._get_method["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__3910__auto__ = mf;
if(and__3910__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__3910__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__4566__auto__ = (((mf == null))?null:mf);
return (function (){var or__3922__auto__ = (cljs.core._methods[(function (){var G__23054 = x__4566__auto__;
return goog.typeOf(G__23054);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._methods["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__3910__auto__ = mf;
if(and__3910__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__3910__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__4566__auto__ = (((mf == null))?null:mf);
return (function (){var or__3922__auto__ = (cljs.core._prefers[(function (){var G__23058 = x__4566__auto__;
return goog.typeOf(G__23058);
})()]);
if(or__3922__auto__){
return or__3922__auto__;
} else {
var or__3922__auto____$1 = (cljs.core._prefers["_"]);
if(or__3922__auto____$1){
return or__3922__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__23060 = this$__$1;
return goog.getUid(G__23060);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__23061 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23061) : cljs.core.deref.call(null,G__23061));
})(),(function (){var G__23062 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23062) : cljs.core.deref.call(null,G__23062));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__23063 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23063) : cljs.core.deref.call(null,G__23063));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__23064 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23064) : cljs.core.deref.call(null,G__23064));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__23065 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23065) : cljs.core.deref.call(null,G__23065));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__23066 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23066) : cljs.core.deref.call(null,G__23066));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__23907 = null;
var G__23907__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__23907__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23067 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__23067) : self__.dispatch_fn.call(null,G__23067));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23068 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__23068) : target_fn.call(null,G__23068));
});
var G__23907__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23069 = a;
var G__23070 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__23069,G__23070) : self__.dispatch_fn.call(null,G__23069,G__23070));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23071 = a;
var G__23072 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__23071,G__23072) : target_fn.call(null,G__23071,G__23072));
});
var G__23907__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23073 = a;
var G__23074 = b;
var G__23075 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__23073,G__23074,G__23075) : self__.dispatch_fn.call(null,G__23073,G__23074,G__23075));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23076 = a;
var G__23077 = b;
var G__23078 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__23076,G__23077,G__23078) : target_fn.call(null,G__23076,G__23077,G__23078));
});
var G__23907__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23079 = a;
var G__23080 = b;
var G__23081 = c;
var G__23082 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__23079,G__23080,G__23081,G__23082) : self__.dispatch_fn.call(null,G__23079,G__23080,G__23081,G__23082));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23083 = a;
var G__23084 = b;
var G__23085 = c;
var G__23086 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__23083,G__23084,G__23085,G__23086) : target_fn.call(null,G__23083,G__23084,G__23085,G__23086));
});
var G__23907__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23087 = a;
var G__23088 = b;
var G__23089 = c;
var G__23090 = d;
var G__23091 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__23087,G__23088,G__23089,G__23090,G__23091) : self__.dispatch_fn.call(null,G__23087,G__23088,G__23089,G__23090,G__23091));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23092 = a;
var G__23093 = b;
var G__23094 = c;
var G__23095 = d;
var G__23096 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__23092,G__23093,G__23094,G__23095,G__23096) : target_fn.call(null,G__23092,G__23093,G__23094,G__23095,G__23096));
});
var G__23907__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23097 = a;
var G__23098 = b;
var G__23099 = c;
var G__23100 = d;
var G__23101 = e;
var G__23102 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__23097,G__23098,G__23099,G__23100,G__23101,G__23102) : self__.dispatch_fn.call(null,G__23097,G__23098,G__23099,G__23100,G__23101,G__23102));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23103 = a;
var G__23104 = b;
var G__23105 = c;
var G__23106 = d;
var G__23107 = e;
var G__23108 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__23103,G__23104,G__23105,G__23106,G__23107,G__23108) : target_fn.call(null,G__23103,G__23104,G__23105,G__23106,G__23107,G__23108));
});
var G__23907__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23109 = a;
var G__23110 = b;
var G__23111 = c;
var G__23112 = d;
var G__23113 = e;
var G__23114 = f;
var G__23115 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__23109,G__23110,G__23111,G__23112,G__23113,G__23114,G__23115) : self__.dispatch_fn.call(null,G__23109,G__23110,G__23111,G__23112,G__23113,G__23114,G__23115));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23116 = a;
var G__23117 = b;
var G__23118 = c;
var G__23119 = d;
var G__23120 = e;
var G__23121 = f;
var G__23122 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__23116,G__23117,G__23118,G__23119,G__23120,G__23121,G__23122) : target_fn.call(null,G__23116,G__23117,G__23118,G__23119,G__23120,G__23121,G__23122));
});
var G__23907__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23123 = a;
var G__23124 = b;
var G__23125 = c;
var G__23126 = d;
var G__23127 = e;
var G__23128 = f;
var G__23129 = g;
var G__23130 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__23123,G__23124,G__23125,G__23126,G__23127,G__23128,G__23129,G__23130) : self__.dispatch_fn.call(null,G__23123,G__23124,G__23125,G__23126,G__23127,G__23128,G__23129,G__23130));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23131 = a;
var G__23132 = b;
var G__23133 = c;
var G__23134 = d;
var G__23135 = e;
var G__23136 = f;
var G__23137 = g;
var G__23138 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__23131,G__23132,G__23133,G__23134,G__23135,G__23136,G__23137,G__23138) : target_fn.call(null,G__23131,G__23132,G__23133,G__23134,G__23135,G__23136,G__23137,G__23138));
});
var G__23907__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23139 = a;
var G__23140 = b;
var G__23141 = c;
var G__23142 = d;
var G__23143 = e;
var G__23144 = f;
var G__23145 = g;
var G__23146 = h;
var G__23147 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__23139,G__23140,G__23141,G__23142,G__23143,G__23144,G__23145,G__23146,G__23147) : self__.dispatch_fn.call(null,G__23139,G__23140,G__23141,G__23142,G__23143,G__23144,G__23145,G__23146,G__23147));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23148 = a;
var G__23149 = b;
var G__23150 = c;
var G__23151 = d;
var G__23152 = e;
var G__23153 = f;
var G__23154 = g;
var G__23155 = h;
var G__23156 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__23148,G__23149,G__23150,G__23151,G__23152,G__23153,G__23154,G__23155,G__23156) : target_fn.call(null,G__23148,G__23149,G__23150,G__23151,G__23152,G__23153,G__23154,G__23155,G__23156));
});
var G__23907__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23157 = a;
var G__23158 = b;
var G__23159 = c;
var G__23160 = d;
var G__23161 = e;
var G__23162 = f;
var G__23163 = g;
var G__23164 = h;
var G__23165 = i;
var G__23166 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__23157,G__23158,G__23159,G__23160,G__23161,G__23162,G__23163,G__23164,G__23165,G__23166) : self__.dispatch_fn.call(null,G__23157,G__23158,G__23159,G__23160,G__23161,G__23162,G__23163,G__23164,G__23165,G__23166));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23167 = a;
var G__23168 = b;
var G__23169 = c;
var G__23170 = d;
var G__23171 = e;
var G__23172 = f;
var G__23173 = g;
var G__23174 = h;
var G__23175 = i;
var G__23176 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__23167,G__23168,G__23169,G__23170,G__23171,G__23172,G__23173,G__23174,G__23175,G__23176) : target_fn.call(null,G__23167,G__23168,G__23169,G__23170,G__23171,G__23172,G__23173,G__23174,G__23175,G__23176));
});
var G__23907__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23177 = a;
var G__23178 = b;
var G__23179 = c;
var G__23180 = d;
var G__23181 = e;
var G__23182 = f;
var G__23183 = g;
var G__23184 = h;
var G__23185 = i;
var G__23186 = j;
var G__23187 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__23177,G__23178,G__23179,G__23180,G__23181,G__23182,G__23183,G__23184,G__23185,G__23186,G__23187) : self__.dispatch_fn.call(null,G__23177,G__23178,G__23179,G__23180,G__23181,G__23182,G__23183,G__23184,G__23185,G__23186,G__23187));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23188 = a;
var G__23189 = b;
var G__23190 = c;
var G__23191 = d;
var G__23192 = e;
var G__23193 = f;
var G__23194 = g;
var G__23195 = h;
var G__23196 = i;
var G__23197 = j;
var G__23198 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__23188,G__23189,G__23190,G__23191,G__23192,G__23193,G__23194,G__23195,G__23196,G__23197,G__23198) : target_fn.call(null,G__23188,G__23189,G__23190,G__23191,G__23192,G__23193,G__23194,G__23195,G__23196,G__23197,G__23198));
});
var G__23907__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23199 = a;
var G__23200 = b;
var G__23201 = c;
var G__23202 = d;
var G__23203 = e;
var G__23204 = f;
var G__23205 = g;
var G__23206 = h;
var G__23207 = i;
var G__23208 = j;
var G__23209 = k;
var G__23210 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__23199,G__23200,G__23201,G__23202,G__23203,G__23204,G__23205,G__23206,G__23207,G__23208,G__23209,G__23210) : self__.dispatch_fn.call(null,G__23199,G__23200,G__23201,G__23202,G__23203,G__23204,G__23205,G__23206,G__23207,G__23208,G__23209,G__23210));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23211 = a;
var G__23212 = b;
var G__23213 = c;
var G__23214 = d;
var G__23215 = e;
var G__23216 = f;
var G__23217 = g;
var G__23218 = h;
var G__23219 = i;
var G__23220 = j;
var G__23221 = k;
var G__23222 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__23211,G__23212,G__23213,G__23214,G__23215,G__23216,G__23217,G__23218,G__23219,G__23220,G__23221,G__23222) : target_fn.call(null,G__23211,G__23212,G__23213,G__23214,G__23215,G__23216,G__23217,G__23218,G__23219,G__23220,G__23221,G__23222));
});
var G__23907__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23223 = a;
var G__23224 = b;
var G__23225 = c;
var G__23226 = d;
var G__23227 = e;
var G__23228 = f;
var G__23229 = g;
var G__23230 = h;
var G__23231 = i;
var G__23232 = j;
var G__23233 = k;
var G__23234 = l;
var G__23235 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__23223,G__23224,G__23225,G__23226,G__23227,G__23228,G__23229,G__23230,G__23231,G__23232,G__23233,G__23234,G__23235) : self__.dispatch_fn.call(null,G__23223,G__23224,G__23225,G__23226,G__23227,G__23228,G__23229,G__23230,G__23231,G__23232,G__23233,G__23234,G__23235));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23236 = a;
var G__23237 = b;
var G__23238 = c;
var G__23239 = d;
var G__23240 = e;
var G__23241 = f;
var G__23242 = g;
var G__23243 = h;
var G__23244 = i;
var G__23245 = j;
var G__23246 = k;
var G__23247 = l;
var G__23248 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__23236,G__23237,G__23238,G__23239,G__23240,G__23241,G__23242,G__23243,G__23244,G__23245,G__23246,G__23247,G__23248) : target_fn.call(null,G__23236,G__23237,G__23238,G__23239,G__23240,G__23241,G__23242,G__23243,G__23244,G__23245,G__23246,G__23247,G__23248));
});
var G__23907__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23249 = a;
var G__23250 = b;
var G__23251 = c;
var G__23252 = d;
var G__23253 = e;
var G__23254 = f;
var G__23255 = g;
var G__23256 = h;
var G__23257 = i;
var G__23258 = j;
var G__23259 = k;
var G__23260 = l;
var G__23261 = m;
var G__23262 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__23249,G__23250,G__23251,G__23252,G__23253,G__23254,G__23255,G__23256,G__23257,G__23258,G__23259,G__23260,G__23261,G__23262) : self__.dispatch_fn.call(null,G__23249,G__23250,G__23251,G__23252,G__23253,G__23254,G__23255,G__23256,G__23257,G__23258,G__23259,G__23260,G__23261,G__23262));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23263 = a;
var G__23264 = b;
var G__23265 = c;
var G__23266 = d;
var G__23267 = e;
var G__23268 = f;
var G__23269 = g;
var G__23270 = h;
var G__23271 = i;
var G__23272 = j;
var G__23273 = k;
var G__23274 = l;
var G__23275 = m;
var G__23276 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__23263,G__23264,G__23265,G__23266,G__23267,G__23268,G__23269,G__23270,G__23271,G__23272,G__23273,G__23274,G__23275,G__23276) : target_fn.call(null,G__23263,G__23264,G__23265,G__23266,G__23267,G__23268,G__23269,G__23270,G__23271,G__23272,G__23273,G__23274,G__23275,G__23276));
});
var G__23907__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23277 = a;
var G__23278 = b;
var G__23279 = c;
var G__23280 = d;
var G__23281 = e;
var G__23282 = f;
var G__23283 = g;
var G__23284 = h;
var G__23285 = i;
var G__23286 = j;
var G__23287 = k;
var G__23288 = l;
var G__23289 = m;
var G__23290 = n;
var G__23291 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__23277,G__23278,G__23279,G__23280,G__23281,G__23282,G__23283,G__23284,G__23285,G__23286,G__23287,G__23288,G__23289,G__23290,G__23291) : self__.dispatch_fn.call(null,G__23277,G__23278,G__23279,G__23280,G__23281,G__23282,G__23283,G__23284,G__23285,G__23286,G__23287,G__23288,G__23289,G__23290,G__23291));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23292 = a;
var G__23293 = b;
var G__23294 = c;
var G__23295 = d;
var G__23296 = e;
var G__23297 = f;
var G__23298 = g;
var G__23299 = h;
var G__23300 = i;
var G__23301 = j;
var G__23302 = k;
var G__23303 = l;
var G__23304 = m;
var G__23305 = n;
var G__23306 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__23292,G__23293,G__23294,G__23295,G__23296,G__23297,G__23298,G__23299,G__23300,G__23301,G__23302,G__23303,G__23304,G__23305,G__23306) : target_fn.call(null,G__23292,G__23293,G__23294,G__23295,G__23296,G__23297,G__23298,G__23299,G__23300,G__23301,G__23302,G__23303,G__23304,G__23305,G__23306));
});
var G__23907__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23307 = a;
var G__23308 = b;
var G__23309 = c;
var G__23310 = d;
var G__23311 = e;
var G__23312 = f;
var G__23313 = g;
var G__23314 = h;
var G__23315 = i;
var G__23316 = j;
var G__23317 = k;
var G__23318 = l;
var G__23319 = m;
var G__23320 = n;
var G__23321 = o;
var G__23322 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__23307,G__23308,G__23309,G__23310,G__23311,G__23312,G__23313,G__23314,G__23315,G__23316,G__23317,G__23318,G__23319,G__23320,G__23321,G__23322) : self__.dispatch_fn.call(null,G__23307,G__23308,G__23309,G__23310,G__23311,G__23312,G__23313,G__23314,G__23315,G__23316,G__23317,G__23318,G__23319,G__23320,G__23321,G__23322));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23323 = a;
var G__23324 = b;
var G__23325 = c;
var G__23326 = d;
var G__23327 = e;
var G__23328 = f;
var G__23329 = g;
var G__23330 = h;
var G__23331 = i;
var G__23332 = j;
var G__23333 = k;
var G__23334 = l;
var G__23335 = m;
var G__23336 = n;
var G__23337 = o;
var G__23338 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__23323,G__23324,G__23325,G__23326,G__23327,G__23328,G__23329,G__23330,G__23331,G__23332,G__23333,G__23334,G__23335,G__23336,G__23337,G__23338) : target_fn.call(null,G__23323,G__23324,G__23325,G__23326,G__23327,G__23328,G__23329,G__23330,G__23331,G__23332,G__23333,G__23334,G__23335,G__23336,G__23337,G__23338));
});
var G__23907__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23339 = a;
var G__23340 = b;
var G__23341 = c;
var G__23342 = d;
var G__23343 = e;
var G__23344 = f;
var G__23345 = g;
var G__23346 = h;
var G__23347 = i;
var G__23348 = j;
var G__23349 = k;
var G__23350 = l;
var G__23351 = m;
var G__23352 = n;
var G__23353 = o;
var G__23354 = p;
var G__23355 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__23339,G__23340,G__23341,G__23342,G__23343,G__23344,G__23345,G__23346,G__23347,G__23348,G__23349,G__23350,G__23351,G__23352,G__23353,G__23354,G__23355) : self__.dispatch_fn.call(null,G__23339,G__23340,G__23341,G__23342,G__23343,G__23344,G__23345,G__23346,G__23347,G__23348,G__23349,G__23350,G__23351,G__23352,G__23353,G__23354,G__23355));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23356 = a;
var G__23357 = b;
var G__23358 = c;
var G__23359 = d;
var G__23360 = e;
var G__23361 = f;
var G__23362 = g;
var G__23363 = h;
var G__23364 = i;
var G__23365 = j;
var G__23366 = k;
var G__23367 = l;
var G__23368 = m;
var G__23369 = n;
var G__23370 = o;
var G__23371 = p;
var G__23372 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__23356,G__23357,G__23358,G__23359,G__23360,G__23361,G__23362,G__23363,G__23364,G__23365,G__23366,G__23367,G__23368,G__23369,G__23370,G__23371,G__23372) : target_fn.call(null,G__23356,G__23357,G__23358,G__23359,G__23360,G__23361,G__23362,G__23363,G__23364,G__23365,G__23366,G__23367,G__23368,G__23369,G__23370,G__23371,G__23372));
});
var G__23907__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23373 = a;
var G__23374 = b;
var G__23375 = c;
var G__23376 = d;
var G__23377 = e;
var G__23378 = f;
var G__23379 = g;
var G__23380 = h;
var G__23381 = i;
var G__23382 = j;
var G__23383 = k;
var G__23384 = l;
var G__23385 = m;
var G__23386 = n;
var G__23387 = o;
var G__23388 = p;
var G__23389 = q;
var G__23390 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__23373,G__23374,G__23375,G__23376,G__23377,G__23378,G__23379,G__23380,G__23381,G__23382,G__23383,G__23384,G__23385,G__23386,G__23387,G__23388,G__23389,G__23390) : self__.dispatch_fn.call(null,G__23373,G__23374,G__23375,G__23376,G__23377,G__23378,G__23379,G__23380,G__23381,G__23382,G__23383,G__23384,G__23385,G__23386,G__23387,G__23388,G__23389,G__23390));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23391 = a;
var G__23392 = b;
var G__23393 = c;
var G__23394 = d;
var G__23395 = e;
var G__23396 = f;
var G__23397 = g;
var G__23398 = h;
var G__23399 = i;
var G__23400 = j;
var G__23401 = k;
var G__23402 = l;
var G__23403 = m;
var G__23404 = n;
var G__23405 = o;
var G__23406 = p;
var G__23407 = q;
var G__23408 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__23391,G__23392,G__23393,G__23394,G__23395,G__23396,G__23397,G__23398,G__23399,G__23400,G__23401,G__23402,G__23403,G__23404,G__23405,G__23406,G__23407,G__23408) : target_fn.call(null,G__23391,G__23392,G__23393,G__23394,G__23395,G__23396,G__23397,G__23398,G__23399,G__23400,G__23401,G__23402,G__23403,G__23404,G__23405,G__23406,G__23407,G__23408));
});
var G__23907__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23409 = a;
var G__23410 = b;
var G__23411 = c;
var G__23412 = d;
var G__23413 = e;
var G__23414 = f;
var G__23415 = g;
var G__23416 = h;
var G__23417 = i;
var G__23418 = j;
var G__23419 = k;
var G__23420 = l;
var G__23421 = m;
var G__23422 = n;
var G__23423 = o;
var G__23424 = p;
var G__23425 = q;
var G__23426 = r;
var G__23427 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__23409,G__23410,G__23411,G__23412,G__23413,G__23414,G__23415,G__23416,G__23417,G__23418,G__23419,G__23420,G__23421,G__23422,G__23423,G__23424,G__23425,G__23426,G__23427) : self__.dispatch_fn.call(null,G__23409,G__23410,G__23411,G__23412,G__23413,G__23414,G__23415,G__23416,G__23417,G__23418,G__23419,G__23420,G__23421,G__23422,G__23423,G__23424,G__23425,G__23426,G__23427));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23428 = a;
var G__23429 = b;
var G__23430 = c;
var G__23431 = d;
var G__23432 = e;
var G__23433 = f;
var G__23434 = g;
var G__23435 = h;
var G__23436 = i;
var G__23437 = j;
var G__23438 = k;
var G__23439 = l;
var G__23440 = m;
var G__23441 = n;
var G__23442 = o;
var G__23443 = p;
var G__23444 = q;
var G__23445 = r;
var G__23446 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__23428,G__23429,G__23430,G__23431,G__23432,G__23433,G__23434,G__23435,G__23436,G__23437,G__23438,G__23439,G__23440,G__23441,G__23442,G__23443,G__23444,G__23445,G__23446) : target_fn.call(null,G__23428,G__23429,G__23430,G__23431,G__23432,G__23433,G__23434,G__23435,G__23436,G__23437,G__23438,G__23439,G__23440,G__23441,G__23442,G__23443,G__23444,G__23445,G__23446));
});
var G__23907__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23447 = a;
var G__23448 = b;
var G__23449 = c;
var G__23450 = d;
var G__23451 = e;
var G__23452 = f;
var G__23453 = g;
var G__23454 = h;
var G__23455 = i;
var G__23456 = j;
var G__23457 = k;
var G__23458 = l;
var G__23459 = m;
var G__23460 = n;
var G__23461 = o;
var G__23462 = p;
var G__23463 = q;
var G__23464 = r;
var G__23465 = s;
var G__23466 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__23447,G__23448,G__23449,G__23450,G__23451,G__23452,G__23453,G__23454,G__23455,G__23456,G__23457,G__23458,G__23459,G__23460,G__23461,G__23462,G__23463,G__23464,G__23465,G__23466) : self__.dispatch_fn.call(null,G__23447,G__23448,G__23449,G__23450,G__23451,G__23452,G__23453,G__23454,G__23455,G__23456,G__23457,G__23458,G__23459,G__23460,G__23461,G__23462,G__23463,G__23464,G__23465,G__23466));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23467 = a;
var G__23468 = b;
var G__23469 = c;
var G__23470 = d;
var G__23471 = e;
var G__23472 = f;
var G__23473 = g;
var G__23474 = h;
var G__23475 = i;
var G__23476 = j;
var G__23477 = k;
var G__23478 = l;
var G__23479 = m;
var G__23480 = n;
var G__23481 = o;
var G__23482 = p;
var G__23483 = q;
var G__23484 = r;
var G__23485 = s;
var G__23486 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__23467,G__23468,G__23469,G__23470,G__23471,G__23472,G__23473,G__23474,G__23475,G__23476,G__23477,G__23478,G__23479,G__23480,G__23481,G__23482,G__23483,G__23484,G__23485,G__23486) : target_fn.call(null,G__23467,G__23468,G__23469,G__23470,G__23471,G__23472,G__23473,G__23474,G__23475,G__23476,G__23477,G__23478,G__23479,G__23480,G__23481,G__23482,G__23483,G__23484,G__23485,G__23486));
});
var G__23907__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__23907 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__23907__1.call(this,self__);
case 2:
return G__23907__2.call(this,self__,a);
case 3:
return G__23907__3.call(this,self__,a,b);
case 4:
return G__23907__4.call(this,self__,a,b,c);
case 5:
return G__23907__5.call(this,self__,a,b,c,d);
case 6:
return G__23907__6.call(this,self__,a,b,c,d,e);
case 7:
return G__23907__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__23907__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__23907__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__23907__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__23907__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__23907__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__23907__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__23907__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__23907__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__23907__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__23907__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__23907__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__23907__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__23907__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__23907__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__23907__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23907.cljs$core$IFn$_invoke$arity$1 = G__23907__1;
G__23907.cljs$core$IFn$_invoke$arity$2 = G__23907__2;
G__23907.cljs$core$IFn$_invoke$arity$3 = G__23907__3;
G__23907.cljs$core$IFn$_invoke$arity$4 = G__23907__4;
G__23907.cljs$core$IFn$_invoke$arity$5 = G__23907__5;
G__23907.cljs$core$IFn$_invoke$arity$6 = G__23907__6;
G__23907.cljs$core$IFn$_invoke$arity$7 = G__23907__7;
G__23907.cljs$core$IFn$_invoke$arity$8 = G__23907__8;
G__23907.cljs$core$IFn$_invoke$arity$9 = G__23907__9;
G__23907.cljs$core$IFn$_invoke$arity$10 = G__23907__10;
G__23907.cljs$core$IFn$_invoke$arity$11 = G__23907__11;
G__23907.cljs$core$IFn$_invoke$arity$12 = G__23907__12;
G__23907.cljs$core$IFn$_invoke$arity$13 = G__23907__13;
G__23907.cljs$core$IFn$_invoke$arity$14 = G__23907__14;
G__23907.cljs$core$IFn$_invoke$arity$15 = G__23907__15;
G__23907.cljs$core$IFn$_invoke$arity$16 = G__23907__16;
G__23907.cljs$core$IFn$_invoke$arity$17 = G__23907__17;
G__23907.cljs$core$IFn$_invoke$arity$18 = G__23907__18;
G__23907.cljs$core$IFn$_invoke$arity$19 = G__23907__19;
G__23907.cljs$core$IFn$_invoke$arity$20 = G__23907__20;
G__23907.cljs$core$IFn$_invoke$arity$21 = G__23907__21;
G__23907.cljs$core$IFn$_invoke$arity$22 = G__23907__22;
return G__23907;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args23059){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23059)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23487 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__23487) : self__.dispatch_fn.call(null,G__23487));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23488 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__23488) : target_fn.call(null,G__23488));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23489 = a;
var G__23490 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__23489,G__23490) : self__.dispatch_fn.call(null,G__23489,G__23490));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23491 = a;
var G__23492 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__23491,G__23492) : target_fn.call(null,G__23491,G__23492));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23493 = a;
var G__23494 = b;
var G__23495 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__23493,G__23494,G__23495) : self__.dispatch_fn.call(null,G__23493,G__23494,G__23495));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23496 = a;
var G__23497 = b;
var G__23498 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__23496,G__23497,G__23498) : target_fn.call(null,G__23496,G__23497,G__23498));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23499 = a;
var G__23500 = b;
var G__23501 = c;
var G__23502 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__23499,G__23500,G__23501,G__23502) : self__.dispatch_fn.call(null,G__23499,G__23500,G__23501,G__23502));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23503 = a;
var G__23504 = b;
var G__23505 = c;
var G__23506 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__23503,G__23504,G__23505,G__23506) : target_fn.call(null,G__23503,G__23504,G__23505,G__23506));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23507 = a;
var G__23508 = b;
var G__23509 = c;
var G__23510 = d;
var G__23511 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__23507,G__23508,G__23509,G__23510,G__23511) : self__.dispatch_fn.call(null,G__23507,G__23508,G__23509,G__23510,G__23511));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23512 = a;
var G__23513 = b;
var G__23514 = c;
var G__23515 = d;
var G__23516 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__23512,G__23513,G__23514,G__23515,G__23516) : target_fn.call(null,G__23512,G__23513,G__23514,G__23515,G__23516));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23517 = a;
var G__23518 = b;
var G__23519 = c;
var G__23520 = d;
var G__23521 = e;
var G__23522 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__23517,G__23518,G__23519,G__23520,G__23521,G__23522) : self__.dispatch_fn.call(null,G__23517,G__23518,G__23519,G__23520,G__23521,G__23522));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23523 = a;
var G__23524 = b;
var G__23525 = c;
var G__23526 = d;
var G__23527 = e;
var G__23528 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__23523,G__23524,G__23525,G__23526,G__23527,G__23528) : target_fn.call(null,G__23523,G__23524,G__23525,G__23526,G__23527,G__23528));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23529 = a;
var G__23530 = b;
var G__23531 = c;
var G__23532 = d;
var G__23533 = e;
var G__23534 = f;
var G__23535 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__23529,G__23530,G__23531,G__23532,G__23533,G__23534,G__23535) : self__.dispatch_fn.call(null,G__23529,G__23530,G__23531,G__23532,G__23533,G__23534,G__23535));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23536 = a;
var G__23537 = b;
var G__23538 = c;
var G__23539 = d;
var G__23540 = e;
var G__23541 = f;
var G__23542 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__23536,G__23537,G__23538,G__23539,G__23540,G__23541,G__23542) : target_fn.call(null,G__23536,G__23537,G__23538,G__23539,G__23540,G__23541,G__23542));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23543 = a;
var G__23544 = b;
var G__23545 = c;
var G__23546 = d;
var G__23547 = e;
var G__23548 = f;
var G__23549 = g;
var G__23550 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__23543,G__23544,G__23545,G__23546,G__23547,G__23548,G__23549,G__23550) : self__.dispatch_fn.call(null,G__23543,G__23544,G__23545,G__23546,G__23547,G__23548,G__23549,G__23550));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23551 = a;
var G__23552 = b;
var G__23553 = c;
var G__23554 = d;
var G__23555 = e;
var G__23556 = f;
var G__23557 = g;
var G__23558 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__23551,G__23552,G__23553,G__23554,G__23555,G__23556,G__23557,G__23558) : target_fn.call(null,G__23551,G__23552,G__23553,G__23554,G__23555,G__23556,G__23557,G__23558));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23559 = a;
var G__23560 = b;
var G__23561 = c;
var G__23562 = d;
var G__23563 = e;
var G__23564 = f;
var G__23565 = g;
var G__23566 = h;
var G__23567 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__23559,G__23560,G__23561,G__23562,G__23563,G__23564,G__23565,G__23566,G__23567) : self__.dispatch_fn.call(null,G__23559,G__23560,G__23561,G__23562,G__23563,G__23564,G__23565,G__23566,G__23567));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23568 = a;
var G__23569 = b;
var G__23570 = c;
var G__23571 = d;
var G__23572 = e;
var G__23573 = f;
var G__23574 = g;
var G__23575 = h;
var G__23576 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__23568,G__23569,G__23570,G__23571,G__23572,G__23573,G__23574,G__23575,G__23576) : target_fn.call(null,G__23568,G__23569,G__23570,G__23571,G__23572,G__23573,G__23574,G__23575,G__23576));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23577 = a;
var G__23578 = b;
var G__23579 = c;
var G__23580 = d;
var G__23581 = e;
var G__23582 = f;
var G__23583 = g;
var G__23584 = h;
var G__23585 = i;
var G__23586 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__23577,G__23578,G__23579,G__23580,G__23581,G__23582,G__23583,G__23584,G__23585,G__23586) : self__.dispatch_fn.call(null,G__23577,G__23578,G__23579,G__23580,G__23581,G__23582,G__23583,G__23584,G__23585,G__23586));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23587 = a;
var G__23588 = b;
var G__23589 = c;
var G__23590 = d;
var G__23591 = e;
var G__23592 = f;
var G__23593 = g;
var G__23594 = h;
var G__23595 = i;
var G__23596 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__23587,G__23588,G__23589,G__23590,G__23591,G__23592,G__23593,G__23594,G__23595,G__23596) : target_fn.call(null,G__23587,G__23588,G__23589,G__23590,G__23591,G__23592,G__23593,G__23594,G__23595,G__23596));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23597 = a;
var G__23598 = b;
var G__23599 = c;
var G__23600 = d;
var G__23601 = e;
var G__23602 = f;
var G__23603 = g;
var G__23604 = h;
var G__23605 = i;
var G__23606 = j;
var G__23607 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__23597,G__23598,G__23599,G__23600,G__23601,G__23602,G__23603,G__23604,G__23605,G__23606,G__23607) : self__.dispatch_fn.call(null,G__23597,G__23598,G__23599,G__23600,G__23601,G__23602,G__23603,G__23604,G__23605,G__23606,G__23607));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23608 = a;
var G__23609 = b;
var G__23610 = c;
var G__23611 = d;
var G__23612 = e;
var G__23613 = f;
var G__23614 = g;
var G__23615 = h;
var G__23616 = i;
var G__23617 = j;
var G__23618 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__23608,G__23609,G__23610,G__23611,G__23612,G__23613,G__23614,G__23615,G__23616,G__23617,G__23618) : target_fn.call(null,G__23608,G__23609,G__23610,G__23611,G__23612,G__23613,G__23614,G__23615,G__23616,G__23617,G__23618));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23619 = a;
var G__23620 = b;
var G__23621 = c;
var G__23622 = d;
var G__23623 = e;
var G__23624 = f;
var G__23625 = g;
var G__23626 = h;
var G__23627 = i;
var G__23628 = j;
var G__23629 = k;
var G__23630 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__23619,G__23620,G__23621,G__23622,G__23623,G__23624,G__23625,G__23626,G__23627,G__23628,G__23629,G__23630) : self__.dispatch_fn.call(null,G__23619,G__23620,G__23621,G__23622,G__23623,G__23624,G__23625,G__23626,G__23627,G__23628,G__23629,G__23630));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23631 = a;
var G__23632 = b;
var G__23633 = c;
var G__23634 = d;
var G__23635 = e;
var G__23636 = f;
var G__23637 = g;
var G__23638 = h;
var G__23639 = i;
var G__23640 = j;
var G__23641 = k;
var G__23642 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__23631,G__23632,G__23633,G__23634,G__23635,G__23636,G__23637,G__23638,G__23639,G__23640,G__23641,G__23642) : target_fn.call(null,G__23631,G__23632,G__23633,G__23634,G__23635,G__23636,G__23637,G__23638,G__23639,G__23640,G__23641,G__23642));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23643 = a;
var G__23644 = b;
var G__23645 = c;
var G__23646 = d;
var G__23647 = e;
var G__23648 = f;
var G__23649 = g;
var G__23650 = h;
var G__23651 = i;
var G__23652 = j;
var G__23653 = k;
var G__23654 = l;
var G__23655 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__23643,G__23644,G__23645,G__23646,G__23647,G__23648,G__23649,G__23650,G__23651,G__23652,G__23653,G__23654,G__23655) : self__.dispatch_fn.call(null,G__23643,G__23644,G__23645,G__23646,G__23647,G__23648,G__23649,G__23650,G__23651,G__23652,G__23653,G__23654,G__23655));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23656 = a;
var G__23657 = b;
var G__23658 = c;
var G__23659 = d;
var G__23660 = e;
var G__23661 = f;
var G__23662 = g;
var G__23663 = h;
var G__23664 = i;
var G__23665 = j;
var G__23666 = k;
var G__23667 = l;
var G__23668 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__23656,G__23657,G__23658,G__23659,G__23660,G__23661,G__23662,G__23663,G__23664,G__23665,G__23666,G__23667,G__23668) : target_fn.call(null,G__23656,G__23657,G__23658,G__23659,G__23660,G__23661,G__23662,G__23663,G__23664,G__23665,G__23666,G__23667,G__23668));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23669 = a;
var G__23670 = b;
var G__23671 = c;
var G__23672 = d;
var G__23673 = e;
var G__23674 = f;
var G__23675 = g;
var G__23676 = h;
var G__23677 = i;
var G__23678 = j;
var G__23679 = k;
var G__23680 = l;
var G__23681 = m;
var G__23682 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__23669,G__23670,G__23671,G__23672,G__23673,G__23674,G__23675,G__23676,G__23677,G__23678,G__23679,G__23680,G__23681,G__23682) : self__.dispatch_fn.call(null,G__23669,G__23670,G__23671,G__23672,G__23673,G__23674,G__23675,G__23676,G__23677,G__23678,G__23679,G__23680,G__23681,G__23682));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23683 = a;
var G__23684 = b;
var G__23685 = c;
var G__23686 = d;
var G__23687 = e;
var G__23688 = f;
var G__23689 = g;
var G__23690 = h;
var G__23691 = i;
var G__23692 = j;
var G__23693 = k;
var G__23694 = l;
var G__23695 = m;
var G__23696 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__23683,G__23684,G__23685,G__23686,G__23687,G__23688,G__23689,G__23690,G__23691,G__23692,G__23693,G__23694,G__23695,G__23696) : target_fn.call(null,G__23683,G__23684,G__23685,G__23686,G__23687,G__23688,G__23689,G__23690,G__23691,G__23692,G__23693,G__23694,G__23695,G__23696));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23697 = a;
var G__23698 = b;
var G__23699 = c;
var G__23700 = d;
var G__23701 = e;
var G__23702 = f;
var G__23703 = g;
var G__23704 = h;
var G__23705 = i;
var G__23706 = j;
var G__23707 = k;
var G__23708 = l;
var G__23709 = m;
var G__23710 = n;
var G__23711 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__23697,G__23698,G__23699,G__23700,G__23701,G__23702,G__23703,G__23704,G__23705,G__23706,G__23707,G__23708,G__23709,G__23710,G__23711) : self__.dispatch_fn.call(null,G__23697,G__23698,G__23699,G__23700,G__23701,G__23702,G__23703,G__23704,G__23705,G__23706,G__23707,G__23708,G__23709,G__23710,G__23711));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23712 = a;
var G__23713 = b;
var G__23714 = c;
var G__23715 = d;
var G__23716 = e;
var G__23717 = f;
var G__23718 = g;
var G__23719 = h;
var G__23720 = i;
var G__23721 = j;
var G__23722 = k;
var G__23723 = l;
var G__23724 = m;
var G__23725 = n;
var G__23726 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__23712,G__23713,G__23714,G__23715,G__23716,G__23717,G__23718,G__23719,G__23720,G__23721,G__23722,G__23723,G__23724,G__23725,G__23726) : target_fn.call(null,G__23712,G__23713,G__23714,G__23715,G__23716,G__23717,G__23718,G__23719,G__23720,G__23721,G__23722,G__23723,G__23724,G__23725,G__23726));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23727 = a;
var G__23728 = b;
var G__23729 = c;
var G__23730 = d;
var G__23731 = e;
var G__23732 = f;
var G__23733 = g;
var G__23734 = h;
var G__23735 = i;
var G__23736 = j;
var G__23737 = k;
var G__23738 = l;
var G__23739 = m;
var G__23740 = n;
var G__23741 = o;
var G__23742 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__23727,G__23728,G__23729,G__23730,G__23731,G__23732,G__23733,G__23734,G__23735,G__23736,G__23737,G__23738,G__23739,G__23740,G__23741,G__23742) : self__.dispatch_fn.call(null,G__23727,G__23728,G__23729,G__23730,G__23731,G__23732,G__23733,G__23734,G__23735,G__23736,G__23737,G__23738,G__23739,G__23740,G__23741,G__23742));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23743 = a;
var G__23744 = b;
var G__23745 = c;
var G__23746 = d;
var G__23747 = e;
var G__23748 = f;
var G__23749 = g;
var G__23750 = h;
var G__23751 = i;
var G__23752 = j;
var G__23753 = k;
var G__23754 = l;
var G__23755 = m;
var G__23756 = n;
var G__23757 = o;
var G__23758 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__23743,G__23744,G__23745,G__23746,G__23747,G__23748,G__23749,G__23750,G__23751,G__23752,G__23753,G__23754,G__23755,G__23756,G__23757,G__23758) : target_fn.call(null,G__23743,G__23744,G__23745,G__23746,G__23747,G__23748,G__23749,G__23750,G__23751,G__23752,G__23753,G__23754,G__23755,G__23756,G__23757,G__23758));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23759 = a;
var G__23760 = b;
var G__23761 = c;
var G__23762 = d;
var G__23763 = e;
var G__23764 = f;
var G__23765 = g;
var G__23766 = h;
var G__23767 = i;
var G__23768 = j;
var G__23769 = k;
var G__23770 = l;
var G__23771 = m;
var G__23772 = n;
var G__23773 = o;
var G__23774 = p;
var G__23775 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__23759,G__23760,G__23761,G__23762,G__23763,G__23764,G__23765,G__23766,G__23767,G__23768,G__23769,G__23770,G__23771,G__23772,G__23773,G__23774,G__23775) : self__.dispatch_fn.call(null,G__23759,G__23760,G__23761,G__23762,G__23763,G__23764,G__23765,G__23766,G__23767,G__23768,G__23769,G__23770,G__23771,G__23772,G__23773,G__23774,G__23775));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23776 = a;
var G__23777 = b;
var G__23778 = c;
var G__23779 = d;
var G__23780 = e;
var G__23781 = f;
var G__23782 = g;
var G__23783 = h;
var G__23784 = i;
var G__23785 = j;
var G__23786 = k;
var G__23787 = l;
var G__23788 = m;
var G__23789 = n;
var G__23790 = o;
var G__23791 = p;
var G__23792 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__23776,G__23777,G__23778,G__23779,G__23780,G__23781,G__23782,G__23783,G__23784,G__23785,G__23786,G__23787,G__23788,G__23789,G__23790,G__23791,G__23792) : target_fn.call(null,G__23776,G__23777,G__23778,G__23779,G__23780,G__23781,G__23782,G__23783,G__23784,G__23785,G__23786,G__23787,G__23788,G__23789,G__23790,G__23791,G__23792));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23793 = a;
var G__23794 = b;
var G__23795 = c;
var G__23796 = d;
var G__23797 = e;
var G__23798 = f;
var G__23799 = g;
var G__23800 = h;
var G__23801 = i;
var G__23802 = j;
var G__23803 = k;
var G__23804 = l;
var G__23805 = m;
var G__23806 = n;
var G__23807 = o;
var G__23808 = p;
var G__23809 = q;
var G__23810 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__23793,G__23794,G__23795,G__23796,G__23797,G__23798,G__23799,G__23800,G__23801,G__23802,G__23803,G__23804,G__23805,G__23806,G__23807,G__23808,G__23809,G__23810) : self__.dispatch_fn.call(null,G__23793,G__23794,G__23795,G__23796,G__23797,G__23798,G__23799,G__23800,G__23801,G__23802,G__23803,G__23804,G__23805,G__23806,G__23807,G__23808,G__23809,G__23810));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23811 = a;
var G__23812 = b;
var G__23813 = c;
var G__23814 = d;
var G__23815 = e;
var G__23816 = f;
var G__23817 = g;
var G__23818 = h;
var G__23819 = i;
var G__23820 = j;
var G__23821 = k;
var G__23822 = l;
var G__23823 = m;
var G__23824 = n;
var G__23825 = o;
var G__23826 = p;
var G__23827 = q;
var G__23828 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__23811,G__23812,G__23813,G__23814,G__23815,G__23816,G__23817,G__23818,G__23819,G__23820,G__23821,G__23822,G__23823,G__23824,G__23825,G__23826,G__23827,G__23828) : target_fn.call(null,G__23811,G__23812,G__23813,G__23814,G__23815,G__23816,G__23817,G__23818,G__23819,G__23820,G__23821,G__23822,G__23823,G__23824,G__23825,G__23826,G__23827,G__23828));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23829 = a;
var G__23830 = b;
var G__23831 = c;
var G__23832 = d;
var G__23833 = e;
var G__23834 = f;
var G__23835 = g;
var G__23836 = h;
var G__23837 = i;
var G__23838 = j;
var G__23839 = k;
var G__23840 = l;
var G__23841 = m;
var G__23842 = n;
var G__23843 = o;
var G__23844 = p;
var G__23845 = q;
var G__23846 = r;
var G__23847 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__23829,G__23830,G__23831,G__23832,G__23833,G__23834,G__23835,G__23836,G__23837,G__23838,G__23839,G__23840,G__23841,G__23842,G__23843,G__23844,G__23845,G__23846,G__23847) : self__.dispatch_fn.call(null,G__23829,G__23830,G__23831,G__23832,G__23833,G__23834,G__23835,G__23836,G__23837,G__23838,G__23839,G__23840,G__23841,G__23842,G__23843,G__23844,G__23845,G__23846,G__23847));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23848 = a;
var G__23849 = b;
var G__23850 = c;
var G__23851 = d;
var G__23852 = e;
var G__23853 = f;
var G__23854 = g;
var G__23855 = h;
var G__23856 = i;
var G__23857 = j;
var G__23858 = k;
var G__23859 = l;
var G__23860 = m;
var G__23861 = n;
var G__23862 = o;
var G__23863 = p;
var G__23864 = q;
var G__23865 = r;
var G__23866 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__23848,G__23849,G__23850,G__23851,G__23852,G__23853,G__23854,G__23855,G__23856,G__23857,G__23858,G__23859,G__23860,G__23861,G__23862,G__23863,G__23864,G__23865,G__23866) : target_fn.call(null,G__23848,G__23849,G__23850,G__23851,G__23852,G__23853,G__23854,G__23855,G__23856,G__23857,G__23858,G__23859,G__23860,G__23861,G__23862,G__23863,G__23864,G__23865,G__23866));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23867 = a;
var G__23868 = b;
var G__23869 = c;
var G__23870 = d;
var G__23871 = e;
var G__23872 = f;
var G__23873 = g;
var G__23874 = h;
var G__23875 = i;
var G__23876 = j;
var G__23877 = k;
var G__23878 = l;
var G__23879 = m;
var G__23880 = n;
var G__23881 = o;
var G__23882 = p;
var G__23883 = q;
var G__23884 = r;
var G__23885 = s;
var G__23886 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__23867,G__23868,G__23869,G__23870,G__23871,G__23872,G__23873,G__23874,G__23875,G__23876,G__23877,G__23878,G__23879,G__23880,G__23881,G__23882,G__23883,G__23884,G__23885,G__23886) : self__.dispatch_fn.call(null,G__23867,G__23868,G__23869,G__23870,G__23871,G__23872,G__23873,G__23874,G__23875,G__23876,G__23877,G__23878,G__23879,G__23880,G__23881,G__23882,G__23883,G__23884,G__23885,G__23886));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23887 = a;
var G__23888 = b;
var G__23889 = c;
var G__23890 = d;
var G__23891 = e;
var G__23892 = f;
var G__23893 = g;
var G__23894 = h;
var G__23895 = i;
var G__23896 = j;
var G__23897 = k;
var G__23898 = l;
var G__23899 = m;
var G__23900 = n;
var G__23901 = o;
var G__23902 = p;
var G__23903 = q;
var G__23904 = r;
var G__23905 = s;
var G__23906 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__23887,G__23888,G__23889,G__23890,G__23891,G__23892,G__23893,G__23894,G__23895,G__23896,G__23897,G__23898,G__23899,G__23900,G__23901,G__23902,G__23903,G__23904,G__23905,G__23906) : target_fn.call(null,G__23887,G__23888,G__23889,G__23890,G__23891,G__23892,G__23893,G__23894,G__23895,G__23896,G__23897,G__23898,G__23899,G__23900,G__23901,G__23902,G__23903,G__23904,G__23905,G__23906));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__23908 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__23908);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__4509__auto__,writer__4510__auto__,opt__4511__auto__){
return cljs.core._write(writer__4510__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__23913 = msg;
return Error(G__23913);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__23918 = x;
var G__23919 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__23918,G__23919) : pred.call(null,G__23918,G__23919));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__23920 = y;
var G__23921 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__23920,G__23921) : pred.call(null,G__23920,G__23921));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});

//# sourceMappingURL=core.js.map